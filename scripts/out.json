{
	"id": 0,
	"name": "@vinicunca/perkakas",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 213,
			"name": "filter",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 214,
					"name": "indexed",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "array/filter.ts",
							"line": 96,
							"character": 18,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L96"
						}
					],
					"signatures": [
						{
							"id": 229,
							"name": "indexed",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@dataLast",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "array/filter.ts",
									"line": 96,
									"character": 18,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L96"
								}
							],
							"typeParameter": [
								{
									"id": 230,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 231,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 232,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 233,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "array/filter.ts",
													"line": 97,
													"character": 8,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L97"
												}
											],
											"signatures": [
												{
													"id": 234,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "array/filter.ts",
															"line": 97,
															"character": 8,
															"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L97"
														}
													],
													"parameters": [
														{
															"id": 235,
															"name": "input",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 236,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 237,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": -1,
																	"name": "T",
																	"refersToTypeParameter": true
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "input",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"target": -1,
															"name": "S",
															"refersToTypeParameter": true
														}
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 238,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/filter.ts",
											"line": 98,
											"character": 5,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L98"
										}
									],
									"signatures": [
										{
											"id": 239,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 240,
													"name": "array",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReadonlyArray"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														],
														"name": "ReadonlyArray",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "S",
													"refersToTypeParameter": true
												}
											}
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						214
					]
				}
			],
			"sources": [
				{
					"fileName": "array/filter.ts",
					"line": 21,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L21"
				},
				{
					"fileName": "array/filter.ts",
					"line": 25,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L25"
				},
				{
					"fileName": "array/filter.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L44"
				},
				{
					"fileName": "array/filter.ts",
					"line": 47,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L47"
				},
				{
					"fileName": "array/filter.ts",
					"line": 51,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L51"
				},
				{
					"fileName": "array/filter.ts",
					"line": 84,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L84"
				}
			]
		},
		{
			"id": 2,
			"name": "KEY_CODES",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Using event.code is not predictable since each machine may have different output"
					}
				]
			},
			"sources": [
				{
					"fileName": "aria/key-codes.ts",
					"line": 5,
					"character": 13,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L5"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 15,
							"name": "ALT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L17"
								}
							],
							"type": {
								"type": "literal",
								"value": "Alt"
							},
							"defaultValue": "'Alt'"
						},
						{
							"id": 5,
							"name": "ARROW_DOWN",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 7,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L7"
								}
							],
							"type": {
								"type": "literal",
								"value": "ArrowDown"
							},
							"defaultValue": "'ArrowDown'"
						},
						{
							"id": 7,
							"name": "ARROW_LEFT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L9"
								}
							],
							"type": {
								"type": "literal",
								"value": "ArrowLeft"
							},
							"defaultValue": "'ArrowLeft'"
						},
						{
							"id": 8,
							"name": "ARROW_RIGHT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L10"
								}
							],
							"type": {
								"type": "literal",
								"value": "ArrowRight"
							},
							"defaultValue": "'ArrowRight'"
						},
						{
							"id": 6,
							"name": "ARROW_UP",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L8"
								}
							],
							"type": {
								"type": "literal",
								"value": "ArrowUp"
							},
							"defaultValue": "'ArrowUp'"
						},
						{
							"id": 17,
							"name": "AT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L19"
								}
							],
							"type": {
								"type": "literal",
								"value": "@"
							},
							"defaultValue": "'@'"
						},
						{
							"id": 19,
							"name": "BACKSPACE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L21"
								}
							],
							"type": {
								"type": "literal",
								"value": "Backspace"
							},
							"defaultValue": "'Backspace'"
						},
						{
							"id": 14,
							"name": "CTRL",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L16"
								}
							],
							"type": {
								"type": "literal",
								"value": "Control"
							},
							"defaultValue": "'Control'"
						},
						{
							"id": 18,
							"name": "DELETE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L20"
								}
							],
							"type": {
								"type": "literal",
								"value": "Delete"
							},
							"defaultValue": "'Delete'"
						},
						{
							"id": 21,
							"name": "END",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L23"
								}
							],
							"type": {
								"type": "literal",
								"value": "End"
							},
							"defaultValue": "'End'"
						},
						{
							"id": 9,
							"name": "ENTER",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L11"
								}
							],
							"type": {
								"type": "literal",
								"value": "Enter"
							},
							"defaultValue": "'Enter'"
						},
						{
							"id": 10,
							"name": "ESC",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L12"
								}
							],
							"type": {
								"type": "literal",
								"value": "Escape"
							},
							"defaultValue": "'Escape'"
						},
						{
							"id": 20,
							"name": "HOME",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L22"
								}
							],
							"type": {
								"type": "literal",
								"value": "Home"
							},
							"defaultValue": "'Home'"
						},
						{
							"id": 13,
							"name": "KEY_F",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L15"
								}
							],
							"type": {
								"type": "literal",
								"value": "KEY_F"
							},
							"defaultValue": "'KEY_F'"
						},
						{
							"id": 16,
							"name": "META",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L18"
								}
							],
							"type": {
								"type": "literal",
								"value": "Meta"
							},
							"defaultValue": "'Meta'"
						},
						{
							"id": 23,
							"name": "PAGE_DOWN",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L25"
								}
							],
							"type": {
								"type": "literal",
								"value": "PageDown"
							},
							"defaultValue": "'PageDown'"
						},
						{
							"id": 22,
							"name": "PAGE_UP",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L24"
								}
							],
							"type": {
								"type": "literal",
								"value": "PageUp"
							},
							"defaultValue": "'PageUp'"
						},
						{
							"id": 12,
							"name": "SHIFT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L14"
								}
							],
							"type": {
								"type": "literal",
								"value": "Shift"
							},
							"defaultValue": "'Shift'"
						},
						{
							"id": 11,
							"name": "SPACE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": "Space"
							},
							"defaultValue": "'Space'"
						},
						{
							"id": 4,
							"name": "TAB",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "aria/key-codes.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L6"
								}
							],
							"type": {
								"type": "literal",
								"value": "Tab"
							},
							"defaultValue": "'Tab'"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15,
								5,
								7,
								8,
								6,
								17,
								19,
								14,
								18,
								21,
								9,
								10,
								20,
								13,
								16,
								23,
								22,
								12,
								11,
								4
							]
						}
					],
					"sources": [
						{
							"fileName": "aria/key-codes.ts",
							"line": 5,
							"character": 25,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/aria/key-codes.ts#L5"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2393,
			"name": "addProp",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/add-prop.ts",
					"line": 15,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/add-prop.ts#L15"
				},
				{
					"fileName": "object/add-prop.ts",
					"line": 32,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/add-prop.ts#L32"
				},
				{
					"fileName": "object/add-prop.ts",
					"line": 38,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/add-prop.ts#L38"
				}
			],
			"signatures": [
				{
					"id": 2394,
					"name": "addProp",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Add a new property to an object."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.addProp(obj, prop, value)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.addProp({firstName: 'john'}, 'lastName', 'doe') // => {firstName: 'john', lastName: 'doe'}"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/add-prop.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/add-prop.ts#L15"
						}
					],
					"typeParameter": [
						{
							"id": 2395,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "PropertyKey"
										},
										"name": "PropertyKey",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 2396,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2397,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2398,
							"name": "obj",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the target object"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2399,
							"name": "prop",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the property name"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2400,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the property value"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "mapped",
								"parameter": "x",
								"parameterType": {
									"type": "reference",
									"target": -1,
									"name": "K",
									"refersToTypeParameter": true
								},
								"templateType": {
									"type": "reference",
									"target": -1,
									"name": "V",
									"refersToTypeParameter": true
								}
							}
						]
					}
				},
				{
					"id": 2401,
					"name": "addProp",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Add a new property to an object."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.addProp(prop, value)(obj)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.addProp('lastName', 'doe')({firstName: 'john'}) // => {firstName: 'john', lastName: 'doe'}"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/add-prop.ts",
							"line": 32,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/add-prop.ts#L32"
						}
					],
					"typeParameter": [
						{
							"id": 2402,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "PropertyKey"
										},
										"name": "PropertyKey",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 2403,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2404,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2405,
							"name": "prop",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the property name"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2406,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the property value"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2407,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/add-prop.ts",
									"line": 36,
									"character": 22,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/add-prop.ts#L36"
								}
							],
							"signatures": [
								{
									"id": 2408,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2409,
											"name": "obj",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "mapped",
												"parameter": "x",
												"parameterType": {
													"type": "reference",
													"target": -1,
													"name": "K",
													"refersToTypeParameter": true
												},
												"templateType": {
													"type": "reference",
													"target": -1,
													"name": "V",
													"refersToTypeParameter": true
												}
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 24,
			"name": "allPass",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/all-pass.ts",
					"line": 18,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/all-pass.ts#L18"
				},
				{
					"fileName": "array/all-pass.ts",
					"line": 37,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/all-pass.ts#L37"
				},
				{
					"fileName": "array/all-pass.ts",
					"line": 41,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/all-pass.ts#L41"
				}
			],
			"signatures": [
				{
					"id": 25,
					"name": "allPass",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines whether all predicates returns true for the input data."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.allPass(data, fns)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "const isDivisibleBy3 = (x: number) => x % 3 === 0\n   const isDivisibleBy4 = (x: number) => x % 4 === 0\n   const fns = [isDivisibleBy3, isDivisibleBy4]\n   P.allPass(12, fns) // => true\n   P.allPass(8, fns) // => false"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/all-pass.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/all-pass.ts#L18"
						}
					],
					"typeParameter": [
						{
							"id": 26,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 27,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input data for predicates."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 28,
							"name": "fns",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of predicates."
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reflection",
										"declaration": {
											"id": 29,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "array/all-pass.ts",
													"line": 20,
													"character": 21,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/all-pass.ts#L20"
												}
											],
											"signatures": [
												{
													"id": 30,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "array/all-pass.ts",
															"line": 20,
															"character": 21,
															"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/all-pass.ts#L20"
														}
													],
													"parameters": [
														{
															"id": 31,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 32,
					"name": "allPass",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines whether all predicates returns true for the input data."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.allPass(fns)(data)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "const isDivisibleBy3 = (x: number) => x % 3 === 0\n   const isDivisibleBy4 = (x: number) => x % 4 === 0\n   const fns = [isDivisibleBy3, isDivisibleBy4]\n   P.allPass(fns)(12) // => true\n   P.allPass(fns)(8) // => false"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/all-pass.ts",
							"line": 37,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/all-pass.ts#L37"
						}
					],
					"typeParameter": [
						{
							"id": 33,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 34,
							"name": "fns",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of predicates."
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reflection",
										"declaration": {
											"id": 35,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "array/all-pass.ts",
													"line": 38,
													"character": 21,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/all-pass.ts#L38"
												}
											],
											"signatures": [
												{
													"id": 36,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "array/all-pass.ts",
															"line": 38,
															"character": 21,
															"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/all-pass.ts#L38"
														}
													],
													"parameters": [
														{
															"id": 37,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/all-pass.ts",
									"line": 39,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/all-pass.ts#L39"
								}
							],
							"signatures": [
								{
									"id": 39,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 41,
			"name": "anyPass",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/any-pass.ts",
					"line": 18,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/any-pass.ts#L18"
				},
				{
					"fileName": "array/any-pass.ts",
					"line": 37,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/any-pass.ts#L37"
				},
				{
					"fileName": "array/any-pass.ts",
					"line": 41,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/any-pass.ts#L41"
				}
			],
			"signatures": [
				{
					"id": 42,
					"name": "anyPass",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines whether any predicate returns true for the input data."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.anyPass(data, fns)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "const isDivisibleBy3 = (x: number) => x % 3 === 0\n   const isDivisibleBy4 = (x: number) => x % 4 === 0\n   const fns = [isDivisibleBy3, isDivisibleBy4]\n   P.anyPass(8, fns) // => true\n   P.anyPass(11, fns) // => false"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/any-pass.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/any-pass.ts#L18"
						}
					],
					"typeParameter": [
						{
							"id": 43,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 44,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input data for predicates."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 45,
							"name": "fns",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of predicates."
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reflection",
										"declaration": {
											"id": 46,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "array/any-pass.ts",
													"line": 20,
													"character": 21,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/any-pass.ts#L20"
												}
											],
											"signatures": [
												{
													"id": 47,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "array/any-pass.ts",
															"line": 20,
															"character": 21,
															"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/any-pass.ts#L20"
														}
													],
													"parameters": [
														{
															"id": 48,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 49,
					"name": "anyPass",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines whether any predicate returns true for the input data."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.anyPass(fns)(data)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "const isDivisibleBy3 = (x: number) => x % 3 === 0\n   const isDivisibleBy4 = (x: number) => x % 4 === 0\n   const fns = [isDivisibleBy3, isDivisibleBy4]\n   P.anyPass(fns)(8) // => true\n   P.anyPass(fns)(11) // => false"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/any-pass.ts",
							"line": 37,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/any-pass.ts#L37"
						}
					],
					"typeParameter": [
						{
							"id": 50,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 51,
							"name": "fns",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of predicates."
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reflection",
										"declaration": {
											"id": 52,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "array/any-pass.ts",
													"line": 38,
													"character": 21,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/any-pass.ts#L38"
												}
											],
											"signatures": [
												{
													"id": 53,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "array/any-pass.ts",
															"line": 38,
															"character": 21,
															"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/any-pass.ts#L38"
														}
													],
													"parameters": [
														{
															"id": 54,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 55,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/any-pass.ts",
									"line": 39,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/any-pass.ts#L39"
								}
							],
							"signatures": [
								{
									"id": 56,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 57,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 58,
			"name": "chunk",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/chunk.ts",
					"line": 24,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/chunk.ts#L24"
				},
				{
					"fileName": "array/chunk.ts",
					"line": 40,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/chunk.ts#L40"
				},
				{
					"fileName": "array/chunk.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/chunk.ts#L44"
				}
			],
			"signatures": [
				{
					"id": 59,
					"name": "chunk",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Split an array into groups the length of "
							},
							{
								"kind": "code",
								"text": "`size`"
							},
							{
								"kind": "text",
								"text": ". If "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": " can't be split evenly, the final chunk will be the remaining elements."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.chunk(array, size)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.chunk(['a', 'b', 'c', 'd'], 2) // => [['a', 'b'], ['c', 'd']]\n   P.chunk(['a', 'b', 'c', 'd'], 3) // => [['a', 'b', 'c'], ['d']]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/chunk.ts",
							"line": 24,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/chunk.ts#L24"
						}
					],
					"typeParameter": [
						{
							"id": 60,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "IterableContainer"
								},
								"name": "IterableContainer",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"parameters": [
						{
							"id": 61,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 62,
							"name": "size",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the length of the chunk"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "lib/src/array/chunk.ts",
							"qualifiedName": "Chunked"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						],
						"name": "Chunked",
						"package": "@vinicunca/perkakas"
					}
				},
				{
					"id": 63,
					"name": "chunk",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Split an array into groups the length of "
							},
							{
								"kind": "code",
								"text": "`size`"
							},
							{
								"kind": "text",
								"text": ". If "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": " can't be split evenly, the final chunk will be the remaining elements."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.chunk(size)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.chunk(2)(['a', 'b', 'c', 'd']) // => [['a', 'b'], ['c', 'd']]\n   P.chunk(3)(['a', 'b', 'c', 'd']) // => [['a', 'b', 'c'], ['d']]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/chunk.ts",
							"line": 40,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/chunk.ts#L40"
						}
					],
					"typeParameter": [
						{
							"id": 64,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "IterableContainer"
								},
								"name": "IterableContainer",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"parameters": [
						{
							"id": 65,
							"name": "size",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the length of the chunk"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 66,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/chunk.ts",
									"line": 42,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/chunk.ts#L42"
								}
							],
							"signatures": [
								{
									"id": 67,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 68,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "lib/src/array/chunk.ts",
											"qualifiedName": "Chunked"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "Chunked",
										"package": "@vinicunca/perkakas"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2378,
			"name": "clamp",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "number/clamp.ts",
					"line": 18,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/number/clamp.ts#L18"
				},
				{
					"fileName": "number/clamp.ts",
					"line": 37,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/number/clamp.ts#L37"
				},
				{
					"fileName": "number/clamp.ts",
					"line": 42,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/number/clamp.ts#L42"
				}
			],
			"signatures": [
				{
					"id": 2379,
					"name": "clamp",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Clamp the given value within the inclusive min and max bounds."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.clamp(value, { min, max });"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "clamp(10, { min: 20 }) // => 20\n   clamp(10, { max: 5 }) // => 5\n   clamp(10, { max: 20, min: 5 }) // => 10"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "number/clamp.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/number/clamp.ts#L18"
						}
					],
					"parameters": [
						{
							"id": 2380,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the number"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2381,
							"name": "limits",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the bounds limits"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2382,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2384,
											"name": "max",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the maximal bounds limits"
													}
												]
											},
											"sources": [
												{
													"fileName": "number/clamp.ts",
													"line": 20,
													"character": 26,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/number/clamp.ts#L20"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2383,
											"name": "min",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the minimal bounds limits"
													}
												]
											},
											"sources": [
												{
													"fileName": "number/clamp.ts",
													"line": 20,
													"character": 12,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/number/clamp.ts#L20"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2384,
												2383
											]
										}
									],
									"sources": [
										{
											"fileName": "number/clamp.ts",
											"line": 20,
											"character": 10,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/number/clamp.ts#L20"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2385,
					"name": "clamp",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Clamp the given value within the inclusive min and max bounds."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.clamp({ min, max })(value);"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "clamp({ min: 20 })(10) // => 20\n   clamp({ max: 5 })(10) // => 5\n   clamp({ max: 20, min: 5 })(10) // => 10"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "number/clamp.ts",
							"line": 37,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/number/clamp.ts#L37"
						}
					],
					"parameters": [
						{
							"id": 2386,
							"name": "limits",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the bounds limits"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2387,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2389,
											"name": "max",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the maximal bounds limits"
													}
												]
											},
											"sources": [
												{
													"fileName": "number/clamp.ts",
													"line": 39,
													"character": 2,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/number/clamp.ts#L39"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2388,
											"name": "min",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the minimal bounds limits"
													}
												]
											},
											"sources": [
												{
													"fileName": "number/clamp.ts",
													"line": 38,
													"character": 2,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/number/clamp.ts#L38"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2389,
												2388
											]
										}
									],
									"sources": [
										{
											"fileName": "number/clamp.ts",
											"line": 37,
											"character": 30,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/number/clamp.ts#L37"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2390,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "number/clamp.ts",
									"line": 40,
									"character": 4,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/number/clamp.ts#L40"
								}
							],
							"signatures": [
								{
									"id": 2391,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2392,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2410,
			"name": "clone",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/clone.ts",
					"line": 62,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/clone.ts#L62"
				}
			],
			"signatures": [
				{
					"id": 2411,
					"name": "clone",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a deep copy of the value. Supported types: "
							},
							{
								"kind": "code",
								"text": "`Array`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`Object`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`Number`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`String`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`Boolean`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`Date`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`RegExp`"
							},
							{
								"kind": "text",
								"text": ". Functions are assigned by reference rather than copied."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.clone(value)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.clone({foo: 'bar'}) // {foo: 'bar'}"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "object/clone.ts",
							"line": 62,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/clone.ts#L62"
						}
					],
					"typeParameter": [
						{
							"id": 2412,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2413,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the object to clone"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 69,
			"name": "compact",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/compact.ts",
					"line": 13,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/compact.ts#L13"
				}
			],
			"signatures": [
				{
					"id": 70,
					"name": "compact",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter out all falsey values. The values "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`0`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`\"\"`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`NaN`"
							},
							{
								"kind": "text",
								"text": " are falsey."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.compact(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.compact([0, 1, false, 2, '', 3]) // => [1, 2, 3]"
									}
								]
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/compact.ts",
							"line": 13,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/compact.ts#L13"
						}
					],
					"typeParameter": [
						{
							"id": 71,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 72,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array to compact"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "literal",
												"value": ""
											},
											{
												"type": "literal",
												"value": 0
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										]
									}
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				}
			]
		},
		{
			"id": 73,
			"name": "concat",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/concat.ts",
					"line": 14,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/concat.ts#L14"
				},
				{
					"fileName": "array/concat.ts",
					"line": 29,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/concat.ts#L29"
				},
				{
					"fileName": "array/concat.ts",
					"line": 33,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/concat.ts#L33"
				}
			],
			"signatures": [
				{
					"id": 74,
					"name": "concat",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Combines two arrays."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.concat(arr1, arr2);"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.concat([1, 2, 3], ['a']) // [1, 2, 3, 'a']"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/concat.ts",
							"line": 14,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/concat.ts#L14"
						}
					],
					"typeParameter": [
						{
							"id": 75,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 76,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 77,
							"name": "arr1",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the first array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 78,
							"name": "arr2",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "K",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": -1,
									"name": "K",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 79,
					"name": "concat",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Combines two arrays."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.concat(arr2)(arr1);"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.concat(['a'])([1, 2, 3]) // [1, 2, 3, 'a']"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/concat.ts",
							"line": 29,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/concat.ts#L29"
						}
					],
					"typeParameter": [
						{
							"id": 80,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 81,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 82,
							"name": "arr2",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "K",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 83,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/concat.ts",
									"line": 31,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/concat.ts#L31"
								}
							],
							"signatures": [
								{
									"id": 84,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 85,
											"name": "arr1",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												},
												{
													"type": "reference",
													"target": -1,
													"name": "K",
													"refersToTypeParameter": true
												}
											]
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 86,
			"name": "countBy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/count-by.ts",
					"line": 25,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/count-by.ts#L25"
				},
				{
					"fileName": "array/count-by.ts",
					"line": 30,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/count-by.ts#L30"
				},
				{
					"fileName": "array/count-by.ts",
					"line": 45,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/count-by.ts#L45"
				},
				{
					"fileName": "array/count-by.ts",
					"line": 49,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/count-by.ts#L49"
				}
			],
			"signatures": [
				{
					"id": 87,
					"name": "countBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Counts how many values of the collection pass the specified predicate."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.countBy(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.countBy([1, 2, 3, 4, 5], x => x % 2 === 0) // => 2"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/count-by.ts",
							"line": 25,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/count-by.ts#L25"
						}
					],
					"typeParameter": [
						{
							"id": 88,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 89,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input data."
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 90,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The predicate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 91,
					"name": "countBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Counts how many values of the collection pass the specified predicate."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.countBy(args)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe([1, 2, 3, 4, 5], P.countBy(x => x % 2 === 0)) // => 2"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/count-by.ts",
							"line": 30,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/count-by.ts#L30"
						}
					],
					"typeParameter": [
						{
							"id": 92,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 93,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 94,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/count-by.ts",
									"line": 32,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/count-by.ts#L32"
								}
							],
							"signatures": [
								{
									"id": 95,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 96,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1452,
			"name": "createPipe",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "function/create-pipe.ts",
					"line": 14,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/create-pipe.ts#L14"
				}
			],
			"signatures": [
				{
					"id": 1453,
					"name": "createPipe",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a data-last pipe function. First function must be always annotated. Other functions are automatically inferred."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.createPipe(op1, op2, op3)(data);"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.createPipe(\n     (x: number) => x * 2,\n     x => x * 3\n   )(1) // => 6"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "function/create-pipe.ts",
							"line": 14,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/create-pipe.ts#L14"
						}
					],
					"typeParameter": [
						{
							"id": 1454,
							"name": "A",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 1455,
							"name": "B",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1456,
							"name": "op1",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1457,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "function/create-pipe.ts",
											"line": 14,
											"character": 38,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/create-pipe.ts#L14"
										}
									],
									"signatures": [
										{
											"id": 1458,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "function/create-pipe.ts",
													"line": 14,
													"character": 38,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/create-pipe.ts#L14"
												}
											],
											"parameters": [
												{
													"id": 1459,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "A",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "B",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1460,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "function/create-pipe.ts",
									"line": 14,
									"character": 56,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/create-pipe.ts#L14"
								}
							],
							"signatures": [
								{
									"id": 1461,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1462,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "A",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "B",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 134,
			"name": "difference",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/difference.ts",
					"line": 16,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/difference.ts#L16"
				},
				{
					"fileName": "array/difference.ts",
					"line": 37,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/difference.ts#L37"
				},
				{
					"fileName": "array/difference.ts",
					"line": 41,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/difference.ts#L41"
				},
				{
					"fileName": "array/difference.ts",
					"line": 50,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/difference.ts#L50"
				}
			],
			"signatures": [
				{
					"id": 135,
					"name": "difference",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Excludes the values from "
							},
							{
								"kind": "code",
								"text": "`other`"
							},
							{
								"kind": "text",
								"text": " array."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.difference(array, other)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.difference([1, 2, 3, 4], [2, 5, 3]) // => [1, 4]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/difference.ts",
							"line": 16,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/difference.ts#L16"
						}
					],
					"typeParameter": [
						{
							"id": 136,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 137,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the source array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 138,
							"name": "other",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the values to exclude"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 139,
					"name": "difference",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Excludes the values from "
							},
							{
								"kind": "code",
								"text": "`other`"
							},
							{
								"kind": "text",
								"text": " array."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.difference(other)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.difference([2, 5, 3])([1, 2, 3, 4]) // => [1, 4]\n   P.pipe(\n     [1, 2, 3, 4, 5, 6], // only 4 iterations\n     P.difference([2, 3]),\n     P.take(2)\n   ) // => [1, 4]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/difference.ts",
							"line": 37,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/difference.ts#L37"
						}
					],
					"typeParameter": [
						{
							"id": 140,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 141,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 142,
							"name": "other",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the values to exclude"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 143,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/difference.ts",
									"line": 39,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/difference.ts#L39"
								}
							],
							"signatures": [
								{
									"id": 144,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 145,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "K",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 109,
			"name": "differenceWith",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/difference-with.ts",
					"line": 25,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/difference-with.ts#L25"
				},
				{
					"fileName": "array/difference-with.ts",
					"line": 52,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/difference-with.ts#L52"
				},
				{
					"fileName": "array/difference-with.ts",
					"line": 57,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/difference-with.ts#L57"
				},
				{
					"fileName": "array/difference-with.ts",
					"line": 70,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/difference-with.ts#L70"
				}
			],
			"signatures": [
				{
					"id": 110,
					"name": "differenceWith",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Excludes the values from "
							},
							{
								"kind": "code",
								"text": "`other`"
							},
							{
								"kind": "text",
								"text": " array.\nElements are compared by custom comparator isEquals."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.differenceWith(array, other, isEquals)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.differenceWith(\n     [{a: 1}, {a: 2}, {a: 3}, {a: 4}],\n     [{a: 2}, {a: 5}, {a: 3}],\n     P.equals,\n   ) // => [{a: 1}, {a: 4}]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/difference-with.ts",
							"line": 25,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/difference-with.ts#L25"
						}
					],
					"typeParameter": [
						{
							"id": 111,
							"name": "TFirst",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 112,
							"name": "TSecond",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 113,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the source array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "TFirst",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 114,
							"name": "other",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the values to exclude"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "TSecond",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 115,
							"name": "isEquals",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the comparator"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/array/difference-with.ts",
									"qualifiedName": "IsEquals"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TFirst",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "TSecond",
										"refersToTypeParameter": true
									}
								],
								"name": "IsEquals",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "TFirst",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 116,
					"name": "differenceWith",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Excludes the values from "
							},
							{
								"kind": "code",
								"text": "`other`"
							},
							{
								"kind": "text",
								"text": " array.\nElements are compared by custom comparator isEquals."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.differenceWith(other, isEquals)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.differenceWith(\n     [{a: 2}, {a: 5}, {a: 3}],\n     P.equals,\n   )([{a: 1}, {a: 2}, {a: 3}, {a: 4}]) // => [{a: 1}, {a: 4}]\n   P.pipe(\n     [{a: 1}, {a: 2}, {a: 3}, {a: 4}, {a: 5}, {a: 6}], // only 4 iterations\n     P.differenceWith([{a: 2}, {a: 3}], P.equals),\n     P.take(2),\n   ) // => [{a: 1}, {a: 4}]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/difference-with.ts",
							"line": 52,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/difference-with.ts#L52"
						}
					],
					"typeParameter": [
						{
							"id": 117,
							"name": "TFirst",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 118,
							"name": "TSecond",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 119,
							"name": "other",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the values to exclude"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "TSecond",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 120,
							"name": "isEquals",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the comparator"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/array/difference-with.ts",
									"qualifiedName": "IsEquals"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TFirst",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "TSecond",
										"refersToTypeParameter": true
									}
								],
								"name": "IsEquals",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 121,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/difference-with.ts",
									"line": 55,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/difference-with.ts#L55"
								}
							],
							"signatures": [
								{
									"id": 122,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 123,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TFirst",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "TFirst",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 165,
			"name": "drop",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/drop.ts",
					"line": 16,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/drop.ts#L16"
				},
				{
					"fileName": "array/drop.ts",
					"line": 29,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/drop.ts#L29"
				},
				{
					"fileName": "array/drop.ts",
					"line": 31,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/drop.ts#L31"
				},
				{
					"fileName": "array/drop.ts",
					"line": 39,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/drop.ts#L39"
				}
			],
			"signatures": [
				{
					"id": 166,
					"name": "drop",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Removes first "
							},
							{
								"kind": "code",
								"text": "`n`"
							},
							{
								"kind": "text",
								"text": " elements from the "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.drop(array, n)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.drop([1, 2, 3, 4, 5], 2) // => [3, 4, 5]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/drop.ts",
							"line": 16,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/drop.ts#L16"
						}
					],
					"typeParameter": [
						{
							"id": 167,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 168,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the target array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 169,
							"name": "n",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the number of elements to skip"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 170,
					"name": "drop",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Removes first "
							},
							{
								"kind": "code",
								"text": "`n`"
							},
							{
								"kind": "text",
								"text": " elements from the "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.drop(n)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.drop(2)([1, 2, 3, 4, 5]) // => [3, 4, 5]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/drop.ts",
							"line": 29,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/drop.ts#L29"
						}
					],
					"typeParameter": [
						{
							"id": 171,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 172,
							"name": "n",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the number of elements to skip"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 173,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/drop.ts",
									"line": 29,
									"character": 36,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/drop.ts#L29"
								}
							],
							"signatures": [
								{
									"id": 174,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 175,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 154,
			"name": "dropLast",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/drop-last.ts",
					"line": 14,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/drop-last.ts#L14"
				},
				{
					"fileName": "array/drop-last.ts",
					"line": 26,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/drop-last.ts#L26"
				},
				{
					"fileName": "array/drop-last.ts",
					"line": 28,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/drop-last.ts#L28"
				}
			],
			"signatures": [
				{
					"id": 155,
					"name": "dropLast",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Removes last "
							},
							{
								"kind": "code",
								"text": "`n`"
							},
							{
								"kind": "text",
								"text": " elements from the "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.dropLast(array, n)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.dropLast([1, 2, 3, 4, 5], 2) // => [1, 2, 3]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/drop-last.ts",
							"line": 14,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/drop-last.ts#L14"
						}
					],
					"typeParameter": [
						{
							"id": 156,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 157,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the target array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 158,
							"name": "n",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the number of elements to skip"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 159,
					"name": "dropLast",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Removes last "
							},
							{
								"kind": "code",
								"text": "`n`"
							},
							{
								"kind": "text",
								"text": " elements from the "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.dropLast(n)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.dropLast(2)([1, 2, 3, 4, 5]) // => [1, 2, 3]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/drop-last.ts",
							"line": 26,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/drop-last.ts#L26"
						}
					],
					"typeParameter": [
						{
							"id": 160,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 161,
							"name": "n",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the number of elements to skip"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 162,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/drop-last.ts",
									"line": 26,
									"character": 40,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/drop-last.ts#L26"
								}
							],
							"signatures": [
								{
									"id": 163,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 164,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2414,
			"name": "equals",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/equals.ts",
					"line": 21,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/equals.ts#L21"
				},
				{
					"fileName": "object/equals.ts",
					"line": 36,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/equals.ts#L36"
				},
				{
					"fileName": "object/equals.ts",
					"line": 38,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/equals.ts#L38"
				}
			],
			"signatures": [
				{
					"id": 2415,
					"name": "equals",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns true if its arguments are equivalent, false otherwise.\nNOTE: Doesn't handle cyclical data structures."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.equals(a, b)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.equals(1, 1) //=> true\n   P.equals(1, '1') //=> false\n   P.equals([1, 2, 3], [1, 2, 3]) //=> true"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/equals.ts",
							"line": 21,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/equals.ts#L21"
						}
					],
					"parameters": [
						{
							"id": 2416,
							"name": "a",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the first object to compare"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2417,
							"name": "b",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second object to compare"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2418,
					"name": "equals",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns true if its arguments are equivalent, false otherwise.\nNOTE: Doesn't handle cyclical data structures."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.equals(b)(a)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.equals(1)(1) //=> true\n   P.equals('1')(1) //=> false\n   P.equals([1, 2, 3])([1, 2, 3]) //=> true"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/equals.ts",
							"line": 36,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/equals.ts#L36"
						}
					],
					"parameters": [
						{
							"id": 2419,
							"name": "a",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the first object to compare"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2420,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/equals.ts",
									"line": 36,
									"character": 32,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/equals.ts#L36"
								}
							],
							"signatures": [
								{
									"id": 2421,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2422,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 184,
			"name": "filter",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/filter.ts",
					"line": 21,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L21"
				},
				{
					"fileName": "array/filter.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L44"
				}
			],
			"signatures": [
				{
					"id": 185,
					"name": "filter",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the elements of an array that meet the condition specified in a callback function."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.filter(array, fn)\n   P.filter.indexed(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.filter([1, 2, 3], x => x % 2 === 1) // => [1, 3]\n   P.filter.indexed([1, 2, 3], (x, i, array) => x % 2 === 1) // => [1, 3]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/filter.ts",
							"line": 21,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L21"
						}
					],
					"typeParameter": [
						{
							"id": 186,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 187,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 188,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The array to filter."
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 189,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the callback function."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/filter.ts",
											"line": 23,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L23"
										}
									],
									"signatures": [
										{
											"id": 191,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/filter.ts",
													"line": 23,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L23"
												}
											],
											"parameters": [
												{
													"id": 192,
													"name": "value",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "predicate",
												"name": "value",
												"asserts": false,
												"targetType": {
													"type": "reference",
													"target": -1,
													"name": "S",
													"refersToTypeParameter": true
												}
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "S",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 197,
					"name": "filter",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the elements of an array that meet the condition specified in a callback function."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.filter(fn)(array)\n   P.filter.indexed(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe([1, 2, 3], P.filter(x => x % 2 === 1)) // => [1, 3]\n   P.pipe([1, 2, 3], P.filter.indexed((x, i) => x % 2 === 1)) // => [1, 3]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/filter.ts",
							"line": 44,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L44"
						}
					],
					"typeParameter": [
						{
							"id": 198,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 199,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 200,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the callback function."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 201,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/filter.ts",
											"line": 45,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L45"
										}
									],
									"signatures": [
										{
											"id": 202,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/filter.ts",
													"line": 45,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L45"
												}
											],
											"parameters": [
												{
													"id": 203,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "predicate",
												"name": "input",
												"asserts": false,
												"targetType": {
													"type": "reference",
													"target": -1,
													"name": "S",
													"refersToTypeParameter": true
												}
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 204,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/filter.ts",
									"line": 46,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/filter.ts#L46"
								}
							],
							"signatures": [
								{
									"id": 205,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 206,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "S",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 368,
			"name": "find",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/find.ts",
					"line": 21,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find.ts#L21"
				},
				{
					"fileName": "array/find.ts",
					"line": 46,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find.ts#L46"
				},
				{
					"fileName": "array/find.ts",
					"line": 50,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find.ts#L50"
				},
				{
					"fileName": "array/find.ts",
					"line": 77,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find.ts#L77"
				}
			],
			"signatures": [
				{
					"id": 369,
					"name": "find",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the value of the first element in the array where predicate is true, and undefined otherwise."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.find(items, fn)\n   P.find.indexed(items, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.find([1, 3, 4, 6], n => n % 2 === 0) // => 4\n   P.find.indexed([1, 3, 4, 6], (n, i) => n % 2 === 0) // => 4"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/find.ts",
							"line": 21,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find.ts#L21"
						}
					],
					"typeParameter": [
						{
							"id": 370,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 371,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 372,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				},
				{
					"id": 373,
					"name": "find",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the value of the first element in the array where predicate is true, and undefined otherwise."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.find(fn)(items)\n   P.find.indexed(fn)(items)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     [1, 3, 4, 6],\n     P.find(n => n % 2 === 0)\n   ) // => 4\n   P.pipe(\n     [1, 3, 4, 6],\n     P.find.indexed((n, i) => n % 2 === 0)\n   ) // => 4"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/find.ts",
							"line": 46,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find.ts#L46"
						}
					],
					"typeParameter": [
						{
							"id": 374,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					],
					"parameters": [
						{
							"id": 375,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 376,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/find.ts",
									"line": 48,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find.ts#L48"
								}
							],
							"signatures": [
								{
									"id": 377,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 378,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 265,
			"name": "findIndex",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/find-index.ts",
					"line": 21,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-index.ts#L21"
				},
				{
					"fileName": "array/find-index.ts",
					"line": 46,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-index.ts#L46"
				},
				{
					"fileName": "array/find-index.ts",
					"line": 50,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-index.ts#L50"
				},
				{
					"fileName": "array/find-index.ts",
					"line": 85,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-index.ts#L85"
				}
			],
			"signatures": [
				{
					"id": 266,
					"name": "findIndex",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the index of the first element in the array where predicate is true, and -1 otherwise."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.findIndex(items, fn)\n   P.findIndex.indexed(items, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.findIndex([1, 3, 4, 6], n => n % 2 === 0) // => 2\n   P.findIndex.indexed([1, 3, 4, 6], (n, i) => n % 2 === 0) // => 2"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/find-index.ts",
							"line": 21,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-index.ts#L21"
						}
					],
					"typeParameter": [
						{
							"id": 267,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 268,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 269,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 270,
					"name": "findIndex",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the index of the first element in the array where predicate is true, and -1 otherwise."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.findIndex(fn)(items)\n   P.findIndex.indexed(fn)(items)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     [1, 3, 4, 6],\n     P.findIndex(n => n % 2 === 0)\n   ) // => 2\n   P.pipe(\n     [1, 3, 4, 6],\n     P.findIndex.indexed((n, i) => n % 2 === 0)\n   ) // => 2"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/find-index.ts",
							"line": 46,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-index.ts#L46"
						}
					],
					"typeParameter": [
						{
							"id": 271,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 272,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 273,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/find-index.ts",
									"line": 48,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-index.ts#L48"
								}
							],
							"signatures": [
								{
									"id": 274,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 275,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 345,
			"name": "findLast",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/find-last.ts",
					"line": 20,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-last.ts#L20"
				},
				{
					"fileName": "array/find-last.ts",
					"line": 46,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-last.ts#L46"
				},
				{
					"fileName": "array/find-last.ts",
					"line": 50,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-last.ts#L50"
				},
				{
					"fileName": "array/find-last.ts",
					"line": 64,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-last.ts#L64"
				}
			],
			"signatures": [
				{
					"id": 346,
					"name": "findLast",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the value of the last element in the array where predicate is true, and undefined\notherwise."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.findLast(items, fn)\n   P.findLast.indexed(items, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.findLast([1, 3, 4, 6], n => n % 2 === 1) // => 3\n   P.findLast.indexed([1, 3, 4, 6], (n, i) => n % 2 === 1) // => 3"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/find-last.ts",
							"line": 20,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-last.ts#L20"
						}
					],
					"typeParameter": [
						{
							"id": 347,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 348,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 349,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				},
				{
					"id": 350,
					"name": "findLast",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the value of the last element in the array where predicate is true, and undefined\notherwise."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.findLast(fn)(items)\n   P.findLast.indexed(fn)(items)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     [1, 3, 4, 6],\n     P.findLast(n => n % 2 === 1)\n   ) // => 3\n   P.pipe(\n     [1, 3, 4, 6],\n     P.findLast.indexed((n, i) => n % 2 === 1)\n   ) // => 3"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/find-last.ts",
							"line": 46,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-last.ts#L46"
						}
					],
					"typeParameter": [
						{
							"id": 351,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					],
					"parameters": [
						{
							"id": 352,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 353,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/find-last.ts",
									"line": 48,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-last.ts#L48"
								}
							],
							"signatures": [
								{
									"id": 354,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 355,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 322,
			"name": "findLastIndex",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/find-last-index.ts",
					"line": 19,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-last-index.ts#L19"
				},
				{
					"fileName": "array/find-last-index.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-last-index.ts#L44"
				},
				{
					"fileName": "array/find-last-index.ts",
					"line": 48,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-last-index.ts#L48"
				},
				{
					"fileName": "array/find-last-index.ts",
					"line": 64,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-last-index.ts#L64"
				}
			],
			"signatures": [
				{
					"id": 323,
					"name": "findLastIndex",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the index of the last element in the array where predicate is true, and -1 otherwise."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.findLastIndex(items, fn)\n   P.findLastIndex.indexed(items, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.findLastIndex([1, 3, 4, 6], n => n % 2 === 1) // => 1\n   P.findLastIndex.indexed([1, 3, 4, 6], (n, i) => n % 2 === 1) // => 1"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/find-last-index.ts",
							"line": 19,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-last-index.ts#L19"
						}
					],
					"typeParameter": [
						{
							"id": 324,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 325,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 326,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 327,
					"name": "findLastIndex",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the index of the last element in the array where predicate is true, and -1 otherwise."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.findLastIndex(fn)(items)\n   P.findLastIndex.indexed(fn)(items)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     [1, 3, 4, 6],\n     P.findLastIndex(n => n % 2 === 1)\n   ) // => 1\n   P.pipe(\n     [1, 3, 4, 6],\n     P.findLastIndex.indexed((n, i) => n % 2 === 1)\n   ) // => 1"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/find-last-index.ts",
							"line": 44,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-last-index.ts#L44"
						}
					],
					"typeParameter": [
						{
							"id": 328,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 329,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 330,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/find-last-index.ts",
									"line": 46,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/find-last-index.ts#L46"
								}
							],
							"signatures": [
								{
									"id": 331,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 332,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 417,
			"name": "first",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/first.ts",
					"line": 31,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/first.ts#L31"
				}
			],
			"signatures": [
				{
					"id": 418,
					"name": "first",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the first element of "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": ".\nNote: In "
							},
							{
								"kind": "code",
								"text": "`pipe`"
							},
							{
								"kind": "text",
								"text": ", use "
							},
							{
								"kind": "code",
								"text": "`first()`"
							},
							{
								"kind": "text",
								"text": " form instead of "
							},
							{
								"kind": "code",
								"text": "`first`"
							},
							{
								"kind": "text",
								"text": ". Otherwise, the inferred type is lost."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.first(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.first([1, 2, 3]) // => 1\n   P.first([]) // => undefined\n   P.pipe(\n     [1, 2, 4, 8, 16],\n     P.filter(x => x > 3),\n     P.first(),\n     x => x + 1\n   ); // => 5"
									}
								]
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/first.ts",
							"line": 31,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/first.ts#L31"
						}
					],
					"typeParameter": [
						{
							"id": 419,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "IterableContainer"
								},
								"name": "IterableContainer",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"parameters": [
						{
							"id": 420,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Readonly"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "Readonly",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "lib/src/array/first.ts",
							"qualifiedName": "FirstOut"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						],
						"name": "FirstOut",
						"package": "@vinicunca/perkakas"
					}
				}
			]
		},
		{
			"id": 486,
			"name": "flatMap",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/flat-map.ts",
					"line": 16,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map.ts#L16"
				},
				{
					"fileName": "array/flat-map.ts",
					"line": 32,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map.ts#L32"
				},
				{
					"fileName": "array/flat-map.ts",
					"line": 36,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map.ts#L36"
				},
				{
					"fileName": "array/flat-map.ts",
					"line": 44,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map.ts#L44"
				}
			],
			"signatures": [
				{
					"id": 487,
					"name": "flatMap",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map each element of an array using a defined callback function and flatten the mapped result."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.flatMap(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.flatMap([1, 2, 3], x => [x, x * 10]) // => [1, 10, 2, 20, 3, 30]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/flat-map.ts",
							"line": 16,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map.ts#L16"
						}
					],
					"typeParameter": [
						{
							"id": 488,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 489,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 490,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The array to map."
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 491,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The function mapper."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 492,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/flat-map.ts",
											"line": 18,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map.ts#L18"
										}
									],
									"signatures": [
										{
											"id": 493,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/flat-map.ts",
													"line": 18,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map.ts#L18"
												}
											],
											"parameters": [
												{
													"id": 494,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": -1,
														"name": "K",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": -1,
															"name": "K",
															"refersToTypeParameter": true
														}
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "K",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 495,
					"name": "flatMap",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map each element of an array using a defined callback function and flatten the mapped result."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.flatMap(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe([1, 2, 3], P.flatMap(x => [x, x * 10])) // => [1, 10, 2, 20, 3, 30]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/flat-map.ts",
							"line": 32,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map.ts#L32"
						}
					],
					"typeParameter": [
						{
							"id": 496,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 497,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 498,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The function mapper."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 499,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/flat-map.ts",
											"line": 33,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map.ts#L33"
										}
									],
									"signatures": [
										{
											"id": 500,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/flat-map.ts",
													"line": 33,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map.ts#L33"
												}
											],
											"parameters": [
												{
													"id": 501,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": -1,
														"name": "K",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": -1,
															"name": "K",
															"refersToTypeParameter": true
														}
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 502,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/flat-map.ts",
									"line": 34,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map.ts#L34"
								}
							],
							"signatures": [
								{
									"id": 503,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 504,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "K",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 439,
			"name": "flatMapToObj",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/flat-map-to-obj.ts",
					"line": 24,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map-to-obj.ts#L24"
				},
				{
					"fileName": "array/flat-map-to-obj.ts",
					"line": 52,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map-to-obj.ts#L52"
				},
				{
					"fileName": "array/flat-map-to-obj.ts",
					"line": 56,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map-to-obj.ts#L56"
				},
				{
					"fileName": "array/flat-map-to-obj.ts",
					"line": 72,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map-to-obj.ts#L72"
				}
			],
			"signatures": [
				{
					"id": 440,
					"name": "flatMapToObj",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map each element of an array into an object using a defined callback function and flatten the result."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The new mapped object."
									}
								]
							},
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.flatMapToObj(array, fn)\n   P.flatMapToObj.indexed(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.flatMapToObj([1, 2, 3], (x) =>\n   x % 2 === 1 ? [[String(x), x]] : []\n ) // => {1: 1, 3: 3}\n P.flatMapToObj.indexed(['a', 'b'], (x, i) => [\n   [x, i],\n   [x + x, i + i],\n ]) // => {a: 0, aa: 0, b: 1, bb: 2}"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/flat-map-to-obj.ts",
							"line": 24,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map-to-obj.ts#L24"
						}
					],
					"typeParameter": [
						{
							"id": 441,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 442,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						},
						{
							"id": 443,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 444,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The array to map."
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 445,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mapping function, which should return an Array of key-value pairs, similar to Object.fromEntries"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 446,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/flat-map-to-obj.ts",
											"line": 26,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map-to-obj.ts#L26"
										}
									],
									"signatures": [
										{
											"id": 447,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/flat-map-to-obj.ts",
													"line": 26,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map-to-obj.ts#L26"
												}
											],
											"parameters": [
												{
													"id": 448,
													"name": "element",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "reference",
															"target": -1,
															"name": "K",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": -1,
															"name": "V",
															"refersToTypeParameter": true
														}
													]
												}
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 449,
					"name": "flatMapToObj",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map each element of an array into an object using a defined callback function and flatten the result."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The new mapped object."
									}
								]
							},
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.flatMapToObj(fn)(array)\n   P.flatMapToObj(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     [1, 2, 3],\n     P.flatMapToObj(x => (x % 2 === 1 ? [[String(x), x]] : []))\n   ) // => {1: 1, 3: 3}\n   P.pipe(\n     ['a', 'b'],\n     P.flatMapToObj.indexed((x, i) => [\n       [x, i],\n       [x + x, i + i],\n     ])\n   ) // => {a: 0, aa: 0, b: 1, bb: 2}"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/flat-map-to-obj.ts",
							"line": 52,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map-to-obj.ts#L52"
						}
					],
					"typeParameter": [
						{
							"id": 450,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 451,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						},
						{
							"id": 452,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 453,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mapping function, which should return an Array of key-value pairs, similar to Object.fromEntries"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 454,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/flat-map-to-obj.ts",
											"line": 53,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map-to-obj.ts#L53"
										}
									],
									"signatures": [
										{
											"id": 455,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/flat-map-to-obj.ts",
													"line": 53,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map-to-obj.ts#L53"
												}
											],
											"parameters": [
												{
													"id": 456,
													"name": "element",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "reference",
															"target": -1,
															"name": "K",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": -1,
															"name": "V",
															"refersToTypeParameter": true
														}
													]
												}
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 457,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/flat-map-to-obj.ts",
									"line": 54,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flat-map-to-obj.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 458,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 459,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "K",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "V",
												"refersToTypeParameter": true
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 542,
			"name": "flatten",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/flatten.ts",
					"line": 21,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flatten.ts#L21"
				}
			],
			"signatures": [
				{
					"id": 543,
					"name": "flatten",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flattens "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": " a single level deep.\nNote: In "
							},
							{
								"kind": "code",
								"text": "`pipe`"
							},
							{
								"kind": "text",
								"text": ", use "
							},
							{
								"kind": "code",
								"text": "`flatten()`"
							},
							{
								"kind": "text",
								"text": " form instead of "
							},
							{
								"kind": "code",
								"text": "`flatten`"
							},
							{
								"kind": "text",
								"text": ". Otherwise, the inferred type is lost."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.flatten(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.flatten([[1, 2], [3], [4, 5]]) // => [1, 2, 3, 4, 5]\n   P.pipe(\n     [[1, 2], [3], [4, 5]],\n     P.flatten(),\n   ); // => [1, 2, 3, 4, 5]"
									}
								]
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/flatten.ts",
							"line": 21,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flatten.ts#L21"
						}
					],
					"typeParameter": [
						{
							"id": 544,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 545,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the target array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "lib/src/array/flatten.ts",
								"qualifiedName": "Flatten"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "Flatten",
							"package": "@vinicunca/perkakas"
						}
					}
				}
			]
		},
		{
			"id": 527,
			"name": "flattenDeep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/flatten-deep.ts",
					"line": 24,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flatten-deep.ts#L24"
				}
			],
			"signatures": [
				{
					"id": 528,
					"name": "flattenDeep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Recursively flattens "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": ".\nNote: In "
							},
							{
								"kind": "code",
								"text": "`pipe`"
							},
							{
								"kind": "text",
								"text": ", use "
							},
							{
								"kind": "code",
								"text": "`flattenDeep()`"
							},
							{
								"kind": "text",
								"text": " form instead of "
							},
							{
								"kind": "code",
								"text": "`flattenDeep`"
							},
							{
								"kind": "text",
								"text": ". Otherwise, the inferred type is lost."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.flattenDeep(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.flattenDeep([[1, 2], [[3], [4, 5]]]) // => [1, 2, 3, 4, 5]\n   P.pipe(\n     [[1, 2], [[3], [4, 5]]],\n     P.flattenDeep(),\n   ); // => [1, 2, 3, 4, 5]"
									}
								]
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/flatten-deep.ts",
							"line": 24,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/flatten-deep.ts#L24"
						}
					],
					"typeParameter": [
						{
							"id": 529,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 530,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the target array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "lib/src/array/flatten-deep.ts",
								"qualifiedName": "FlattenDeep"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "FlattenDeep",
							"package": "@vinicunca/perkakas"
						}
					}
				}
			]
		},
		{
			"id": 558,
			"name": "forEach",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/for-each.ts",
					"line": 27,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/for-each.ts#L27"
				},
				{
					"fileName": "array/for-each.ts",
					"line": 56,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/for-each.ts#L56"
				},
				{
					"fileName": "array/for-each.ts",
					"line": 60,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/for-each.ts#L60"
				},
				{
					"fileName": "array/for-each.ts",
					"line": 91,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/for-each.ts#L91"
				}
			],
			"signatures": [
				{
					"id": 559,
					"name": "forEach",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Iterate an array using a defined callback function. The original array is returned instead of "
							},
							{
								"kind": "code",
								"text": "`void`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The original array"
									}
								]
							},
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.forEach(array, fn)\n   P.forEach.indexed(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.forEach([1, 2, 3], x => {\n     console.log(x)\n   }) // => [1, 2, 3]\n   P.forEach.indexed([1, 2, 3], (x, i) => {\n     console.log(x, i)\n   }) // => [1, 2, 3]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/for-each.ts",
							"line": 27,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/for-each.ts#L27"
						}
					],
					"typeParameter": [
						{
							"id": 560,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 561,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The array."
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 562,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The callback function."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 563,
					"name": "forEach",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Iterate an array using a defined callback function. The original array is returned instead of "
							},
							{
								"kind": "code",
								"text": "`void`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.forEach(fn)(array)\n   P.forEach.indexed(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     [1, 2, 3],\n     P.forEach(x => {\n       console.log(x)\n     })\n   ) // => [1, 2, 3]\n   P.pipe(\n     [1, 2, 3],\n     P.forEach.indexed((x, i) => {\n       console.log(x, i)\n     })\n   ) // => [1, 2, 3]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/for-each.ts",
							"line": 56,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/for-each.ts#L56"
						}
					],
					"typeParameter": [
						{
							"id": 564,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 565,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the function mapper"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 566,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/for-each.ts",
									"line": 58,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/for-each.ts#L58"
								}
							],
							"signatures": [
								{
									"id": 567,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 568,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2423,
			"name": "forEachObj",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/for-each-obj.ts",
					"line": 29,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/for-each-obj.ts#L29"
				},
				{
					"fileName": "object/for-each-obj.ts",
					"line": 51,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/for-each-obj.ts#L51"
				},
				{
					"fileName": "object/for-each-obj.ts",
					"line": 55,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/for-each-obj.ts#L55"
				},
				{
					"fileName": "object/for-each-obj.ts",
					"line": 76,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/for-each-obj.ts#L76"
				}
			],
			"signatures": [
				{
					"id": 2424,
					"name": "forEachObj",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Iterate an object using a defined callback function. The original object is returned."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The original object"
									}
								]
							},
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.forEachObj(object, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.forEachObj({a: 1}, (val) => {\n     console.log("
									},
									{
										"kind": "code",
										"text": "`${val}`"
									},
									{
										"kind": "text",
										"text": ")\n   }) // \"1\"\n   P.forEachObj.indexed({a: 1}, (val, key, obj) => {\n     console.log("
									},
									{
										"kind": "code",
										"text": "`${key}: ${val}`"
									},
									{
										"kind": "text",
										"text": ")\n   }) // \"a: 1\""
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/for-each-obj.ts",
							"line": 29,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/for-each-obj.ts#L29"
						}
					],
					"typeParameter": [
						{
							"id": 2425,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "PropertyKey"
										},
										"name": "PropertyKey",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"parameters": [
						{
							"id": 2426,
							"name": "object",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The object."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2427,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The callback function."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/object/for-each-obj.ts",
									"qualifiedName": "UnindexedIteratee"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "UnindexedIteratee",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 2428,
					"name": "forEachObj",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Iterate an object using a defined callback function. The original object is returned."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.forEachObj(fn)(object)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     {a: 1},\n     P.forEachObj((val) => console.log("
									},
									{
										"kind": "code",
										"text": "`${val}`"
									},
									{
										"kind": "text",
										"text": "))\n   ) // \"1\"\n   P.pipe(\n     {a: 1},\n     P.forEachObj.indexed((val, key) => console.log("
									},
									{
										"kind": "code",
										"text": "`${key}: ${val}`"
									},
									{
										"kind": "text",
										"text": "))\n   ) // \"a: 1\""
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/for-each-obj.ts",
							"line": 51,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/for-each-obj.ts#L51"
						}
					],
					"typeParameter": [
						{
							"id": 2429,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "PropertyKey"
										},
										"name": "PropertyKey",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"parameters": [
						{
							"id": 2430,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The callback function."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/object/for-each-obj.ts",
									"qualifiedName": "UnindexedIteratee"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "UnindexedIteratee",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2431,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/for-each-obj.ts",
									"line": 53,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/for-each-obj.ts#L53"
								}
							],
							"signatures": [
								{
									"id": 2432,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2433,
											"name": "object",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2446,
			"name": "fromPairs",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/from-pairs.ts",
					"line": 25,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/from-pairs.ts#L25"
				}
			],
			"signatures": [
				{
					"id": 2447,
					"name": "fromPairs",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a new object from an array of tuples by pairing up first and second elements as {[key]: value}.\nIf a tuple is not supplied for any element in the array, the element will be ignored\nIf duplicate keys exist, the tuple with the greatest index in the input array will be preferred.\n\nThe strict option supports more sophisticated use-cases like those that would\nresult when calling the strict "
							},
							{
								"kind": "code",
								"text": "`toPairs`"
							},
							{
								"kind": "text",
								"text": " function."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.fromPairs(tuples)\n  P.fromPairs.strict(tuples)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.fromPairs([['a', 'b'], ['c', 'd']]) // => {a: 'b', c: 'd'} (type: Record<string, string>)\n  P.fromPairs.strict(['a', 1] as const) // => {a: 1} (type: {a: 1})"
									}
								]
							},
							{
								"tag": "@strict",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/from-pairs.ts",
							"line": 25,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/from-pairs.ts#L25"
						}
					],
					"typeParameter": [
						{
							"id": 2448,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2449,
							"name": "pairs",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the list of input tuples"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": {
											"sourceFileName": "lib/src/object/from-pairs.ts",
											"qualifiedName": "Entry"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": -1,
												"name": "V",
												"refersToTypeParameter": true
											}
										],
										"name": "Entry",
										"package": "@vinicunca/perkakas"
									}
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 599,
			"name": "groupBy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/group-by.ts",
					"line": 21,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/group-by.ts#L21"
				},
				{
					"fileName": "array/group-by.ts",
					"line": 26,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/group-by.ts#L26"
				},
				{
					"fileName": "array/group-by.ts",
					"line": 41,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/group-by.ts#L41"
				},
				{
					"fileName": "array/group-by.ts",
					"line": 113,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/group-by.ts#L113"
				}
			],
			"signatures": [
				{
					"id": 600,
					"name": "groupBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Splits a collection into sets, grouped by the result of running each value through "
							},
							{
								"kind": "code",
								"text": "`fn`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.groupBy(array, fn)\n   P.groupBy.strict(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.groupBy(['one', 'two', 'three'], x => x.length) // => {3: ['one', 'two'], 5: ['three']}\n   P.groupBy.strict([{a: 'cat'}, {a: 'dog'}] as const, prop('a')) // => {cat: [{a: 'cat'}], dog: [{a: 'dog'}]} typed Partial<Record<'cat' | 'dog', NonEmptyArray<{a: 'cat' | 'dog'}>>>\n   P.groupBy([0, 1], x => x % 2 === 0 ? 'even' : undefined) // => {even: [0]}"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@strict",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/group-by.ts",
							"line": 21,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/group-by.ts#L21"
						}
					],
					"typeParameter": [
						{
							"id": 601,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 602,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the items to group"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 603,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the grouping function. When "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": " is returned the item would\nbe skipped and not grouped under any key."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 604,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/group-by.ts",
											"line": 23,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/group-by.ts#L23"
										}
									],
									"signatures": [
										{
											"id": 605,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/group-by.ts",
													"line": 23,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/group-by.ts#L23"
												}
											],
											"parameters": [
												{
													"id": 606,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "PropertyKey"
														},
														"name": "PropertyKey",
														"package": "typescript"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "PropertyKey"
								},
								"name": "PropertyKey",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "NonEmptyArray"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "NonEmptyArray",
								"package": "@vinicunca/perkakas"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 607,
					"name": "groupBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Splits a collection into sets, grouped by the result of running each value through "
							},
							{
								"kind": "code",
								"text": "`fn`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.groupBy(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(['one', 'two', 'three'], P.groupBy(x => x.length)) // => {3: ['one', 'two'], 5: ['three']}"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/group-by.ts",
							"line": 26,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/group-by.ts#L26"
						}
					],
					"typeParameter": [
						{
							"id": 608,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 609,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 610,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/group-by.ts",
											"line": 27,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/group-by.ts#L27"
										}
									],
									"signatures": [
										{
											"id": 611,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/group-by.ts",
													"line": 27,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/group-by.ts#L27"
												}
											],
											"parameters": [
												{
													"id": 612,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "PropertyKey"
														},
														"name": "PropertyKey",
														"package": "typescript"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 613,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/group-by.ts",
									"line": 28,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/group-by.ts#L28"
								}
							],
							"signatures": [
								{
									"id": 614,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 615,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "PropertyKey"
												},
												"name": "PropertyKey",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "lib/src/utils/types.ts",
													"qualifiedName": "NonEmptyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "NonEmptyArray",
												"package": "@vinicunca/perkakas"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1628,
			"name": "identity",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "function/identity.ts",
					"line": 9,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/identity.ts#L9"
				}
			],
			"signatures": [
				{
					"id": 1629,
					"name": "identity",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that always returns the param passed to it"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.identity(data)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.identity('foo') // => 'foo'"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "function/identity.ts",
							"line": 9,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/identity.ts#L9"
						}
					],
					"typeParameter": [
						{
							"id": 1630,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1631,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 647,
			"name": "indexBy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/index-by.ts",
					"line": 16,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/index-by.ts#L16"
				},
				{
					"fileName": "array/index-by.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/index-by.ts#L35"
				},
				{
					"fileName": "array/index-by.ts",
					"line": 39,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/index-by.ts#L39"
				},
				{
					"fileName": "array/index-by.ts",
					"line": 54,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/index-by.ts#L54"
				}
			],
			"signatures": [
				{
					"id": 648,
					"name": "indexBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Converts a list of objects into an object indexing the objects by the given key."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.indexBy(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.indexBy(['one', 'two', 'three'], x => x.length) // => {3: 'two', 5: 'three'}"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/index-by.ts",
							"line": 16,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/index-by.ts#L16"
						}
					],
					"typeParameter": [
						{
							"id": 649,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 650,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 651,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the indexing function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 652,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/index-by.ts",
											"line": 18,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/index-by.ts#L18"
										}
									],
									"signatures": [
										{
											"id": 653,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/index-by.ts",
													"line": 18,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/index-by.ts#L18"
												}
											],
											"parameters": [
												{
													"id": 654,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 655,
					"name": "indexBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Converts a list of objects into an object indexing the objects by the given key."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.indexBy(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     ['one', 'two', 'three'],\n     P.indexBy(x => x.length)\n   ) // => {3: 'two', 5: 'three'}"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/index-by.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/index-by.ts#L35"
						}
					],
					"typeParameter": [
						{
							"id": 656,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 657,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the indexing function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 658,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/index-by.ts",
											"line": 36,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/index-by.ts#L36"
										}
									],
									"signatures": [
										{
											"id": 659,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/index-by.ts",
													"line": 36,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/index-by.ts#L36"
												}
											],
											"parameters": [
												{
													"id": 660,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 661,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/index-by.ts",
									"line": 37,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/index-by.ts#L37"
								}
							],
							"signatures": [
								{
									"id": 662,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 663,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 676,
			"name": "intersection",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/intersection.ts",
					"line": 17,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/intersection.ts#L17"
				},
				{
					"fileName": "array/intersection.ts",
					"line": 33,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/intersection.ts#L33"
				},
				{
					"fileName": "array/intersection.ts",
					"line": 37,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/intersection.ts#L37"
				},
				{
					"fileName": "array/intersection.ts",
					"line": 46,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/intersection.ts#L46"
				}
			],
			"signatures": [
				{
					"id": 677,
					"name": "intersection",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a list of elements that exist in both array."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.intersection(array, other)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.intersection([1, 2, 3], [2, 3, 5]) // => [2, 3]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/intersection.ts",
							"line": 17,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/intersection.ts#L17"
						}
					],
					"typeParameter": [
						{
							"id": 678,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 679,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the source array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 680,
							"name": "other",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 681,
					"name": "intersection",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a list of elements that exist in both array."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.intersection(other)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.intersection([2, 3, 5])([1, 2, 3]) // => [2, 3]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/intersection.ts",
							"line": 33,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/intersection.ts#L33"
						}
					],
					"typeParameter": [
						{
							"id": 682,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 683,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 684,
							"name": "other",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 685,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/intersection.ts",
									"line": 35,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/intersection.ts#L35"
								}
							],
							"signatures": [
								{
									"id": 686,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 687,
											"name": "source",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "K",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 696,
			"name": "intersectionWith",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/intersection-with.ts",
					"line": 28,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/intersection-with.ts#L28"
				},
				{
					"fileName": "array/intersection-with.ts",
					"line": 53,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/intersection-with.ts#L53"
				},
				{
					"fileName": "array/intersection-with.ts",
					"line": 62,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/intersection-with.ts#L62"
				},
				{
					"fileName": "array/intersection-with.ts",
					"line": 75,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/intersection-with.ts#L75"
				}
			],
			"signatures": [
				{
					"id": 697,
					"name": "intersectionWith",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a list of intersecting values based on a custom\ncomparator function that compares elements of both arrays."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.intersectionWith(array, other, comparator)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.intersectionWith(\n     [\n       { id: 1, name: 'Ryan' },\n       { id: 3, name: 'Emma' },\n     ],\n     [3, 5],\n     (a, b) => a.id === b,\n   ) // => [{ id: 3, name: 'Emma' }]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/intersection-with.ts",
							"line": 28,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/intersection-with.ts#L28"
						}
					],
					"typeParameter": [
						{
							"id": 698,
							"name": "TFirst",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 699,
							"name": "TSecond",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 700,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the source array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "TFirst",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 701,
							"name": "other",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "TSecond",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 702,
							"name": "comparator",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the custom comparator"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/array/intersection-with.ts",
									"qualifiedName": "Comparator"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TFirst",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "TSecond",
										"refersToTypeParameter": true
									}
								],
								"name": "Comparator",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "TFirst",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 703,
					"name": "intersectionWith",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a list of intersecting values based on a custom\ncomparator function that compares elements of both arrays."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.intersectionWith(other, comparator)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.intersectionWith(\n     [3, 5],\n     (a, b) => a.id === b\n     )([\n       { id: 1, name: 'Ryan' },\n       { id: 3, name: 'Emma' },\n     ]); // => [{ id: 3, name: 'Emma' }]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/intersection-with.ts",
							"line": 53,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/intersection-with.ts#L53"
						}
					],
					"typeParameter": [
						{
							"id": 704,
							"name": "TFirst",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 705,
							"name": "TSecond",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 706,
							"name": "other",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "TSecond",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 707,
							"name": "comparator",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the custom comparator"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/array/intersection-with.ts",
									"qualifiedName": "Comparator"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TFirst",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "TSecond",
										"refersToTypeParameter": true
									}
								],
								"name": "Comparator",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 708,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/intersection-with.ts",
									"line": 60,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/intersection-with.ts#L60"
								}
							],
							"signatures": [
								{
									"id": 709,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 710,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TFirst",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "TFirst",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2458,
			"name": "invert",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/invert.ts",
					"line": 19,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/invert.ts#L19"
				},
				{
					"fileName": "object/invert.ts",
					"line": 32,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/invert.ts#L32"
				},
				{
					"fileName": "object/invert.ts",
					"line": 34,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/invert.ts#L34"
				}
			],
			"signatures": [
				{
					"id": 2459,
					"name": "invert",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns an object whose keys are values are swapped. If the object contains duplicate values,\nsubsequent values will overwrite previous values."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.invert(object)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.invert({ a: \"d\", b: \"e\", c: \"f\" }) // => { d: \"a\", e: \"b\", f: \"c\" }"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/invert.ts",
							"line": 19,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/invert.ts#L19"
						}
					],
					"typeParameter": [
						{
							"id": 2460,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"parameters": [
						{
							"id": 2461,
							"name": "object",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the object"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "lib/src/object/invert.ts",
							"qualifiedName": "Inverted"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						],
						"name": "Inverted",
						"package": "@vinicunca/perkakas"
					}
				},
				{
					"id": 2462,
					"name": "invert",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns an object whose keys are values are swapped. If the object contains duplicate values,\nsubsequent values will overwrite previous values."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.invert()(object)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe({ a: \"d\", b: \"e\", c: \"f\" }, P.invert()); // => { d: \"a\", e: \"b\", f: \"c\" }"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/invert.ts",
							"line": 32,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/invert.ts#L32"
						}
					],
					"typeParameter": [
						{
							"id": 2463,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2464,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/invert.ts",
									"line": 32,
									"character": 44,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/invert.ts#L32"
								}
							],
							"signatures": [
								{
									"id": 2465,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2466,
											"name": "object",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "lib/src/object/invert.ts",
											"qualifiedName": "Inverted"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "Inverted",
										"package": "@vinicunca/perkakas"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2293,
			"name": "isArray",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-array.ts",
					"line": 19,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-array.ts#L19"
				}
			],
			"signatures": [
				{
					"id": 2294,
					"name": "isArray",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that checks if the passed parameter is an Array and narrows its type accordingly"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.isArray(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the passed input is an Array, false otherwise"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.isArray([5]) //=> true\n   P.isArray([]) //=> true\n   P.isArray('somethingElse') //=> false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-array.ts",
							"line": 19,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-array.ts#L19"
						}
					],
					"typeParameter": [
						{
							"id": 2295,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2296,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the variable to check"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									},
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "data",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"sourceFileName": "lib/src/guard/is-array.ts",
								"qualifiedName": "DefinitelyArray"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "DefinitelyArray",
							"package": "@vinicunca/perkakas"
						}
					}
				}
			]
		},
		{
			"id": 2297,
			"name": "isBoolean",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-boolean.ts",
					"line": 20,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-boolean.ts#L20"
				}
			],
			"signatures": [
				{
					"id": 2298,
					"name": "isBoolean",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that checks if the passed parameter is a boolean and narrows its type accordingly"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.isBoolean(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the passed input is a boolean, false otherwise"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.isBoolean(true) //=> true\n   P.isBoolean(false) //=> true\n   P.isBoolean('somethingElse') //=> false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-boolean.ts",
							"line": 20,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-boolean.ts#L20"
						}
					],
					"typeParameter": [
						{
							"id": 2299,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2300,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the variable to check"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "data",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"sourceFileName": "lib/src/guard/is-boolean.ts",
								"qualifiedName": "DefinitelyBoolean"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "DefinitelyBoolean",
							"package": "@vinicunca/perkakas"
						}
					}
				}
			]
		},
		{
			"id": 2301,
			"name": "isDate",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-date.ts",
					"line": 12,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-date.ts#L12"
				}
			],
			"signatures": [
				{
					"id": 2302,
					"name": "isDate",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that checks if the passed parameter is a Date and narrows its type accordingly"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.isDate(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the passed input is a Date, false otherwise"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.isDate(new Date()) //=> true\n   P.isDate('somethingElse') //=> false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-date.ts",
							"line": 12,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-date.ts#L12"
						}
					],
					"parameters": [
						{
							"id": 2303,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the variable to check"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "data",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Date"
							},
							"name": "Date",
							"package": "typescript"
						}
					}
				}
			]
		},
		{
			"id": 2304,
			"name": "isDefined",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-defined.ts",
					"line": 18,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-defined.ts#L18"
				},
				{
					"fileName": "guard/is-defined.ts",
					"line": 22,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-defined.ts#L22"
				}
			],
			"signatures": [
				{
					"id": 2305,
					"name": "isDefined",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that checks if the passed parameter is defined and narrows its type accordingly.\nTo test specifically for "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": " (and not "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": ") use the strict variant of this function."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.isDefined(data)\n   P.isDefined.strict(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the passed input is defined, false otherwise"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.isDefined('string') //=> true\n   P.isDefined(null) //=> false\n   P.isDefined(undefined) //=> false\n   P.isDefined.strict(null) //=> true\n   P.isDefined.strict(undefined) //=> false"
									}
								]
							},
							{
								"tag": "@strict",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-defined.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-defined.ts#L18"
						}
					],
					"typeParameter": [
						{
							"id": 2306,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2307,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the variable to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "data",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "NonNullable"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "NonNullable",
							"package": "typescript"
						}
					}
				}
			]
		},
		{
			"id": 2313,
			"name": "isEmpty",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-empty.ts",
					"line": 20,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-empty.ts#L20"
				}
			],
			"signatures": [
				{
					"id": 2314,
					"name": "isEmpty",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that checks if the passed parameter is empty"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.isEmpty(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the passed input is empty, false otherwise"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.isEmpty('') //=> true\n   P.isEmpty([]) //=> true\n   P.isEmpty({}) //=> true\n   P.isEmpty('test') //=> false\n   P.isEmpty([1, 2, 3]) //=> false\n   P.isEmpty({ length: 0 }) //=> false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-empty.ts",
							"line": 20,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-empty.ts#L20"
						}
					],
					"parameters": [
						{
							"id": 2315,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the variable to check"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "data",
						"asserts": false,
						"targetType": {
							"type": "literal",
							"value": ""
						}
					}
				}
			]
		},
		{
			"id": 2321,
			"name": "isError",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-error.ts",
					"line": 15,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-error.ts#L15"
				}
			],
			"signatures": [
				{
					"id": 2322,
					"name": "isError",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that checks if the passed parameter is an Error and narrows its type accordingly"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.isError(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the passed input is an Error, false otherwise"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.isError(new Error('message')) //=> true\n   P.isError('somethingElse') //=> false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-error.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-error.ts#L15"
						}
					],
					"typeParameter": [
						{
							"id": 2323,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2324,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the variable to check"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "data",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"sourceFileName": "lib/src/guard/is-error.ts",
								"qualifiedName": "DefinitelyError"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "DefinitelyError",
							"package": "@vinicunca/perkakas"
						}
					}
				}
			]
		},
		{
			"id": 2325,
			"name": "isFunction",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-function.ts",
					"line": 15,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-function.ts#L15"
				}
			],
			"signatures": [
				{
					"id": 2326,
					"name": "isFunction",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that checks if the passed parameter is a Function and narrows its type accordingly"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.isFunction(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the passed input is a Function, false otherwise"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.isFunction(() => {}) //=> true\n   P.isFunction('somethingElse') //=> false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-function.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-function.ts#L15"
						}
					],
					"typeParameter": [
						{
							"id": 2327,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2328,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the variable to check"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "data",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"sourceFileName": "lib/src/guard/is-function.ts",
								"qualifiedName": "DefinitelyFunction"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "DefinitelyFunction",
							"package": "@vinicunca/perkakas"
						}
					}
				}
			]
		},
		{
			"id": 2329,
			"name": "isNil",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-nil.ts",
					"line": 13,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-nil.ts#L13"
				}
			],
			"signatures": [
				{
					"id": 2330,
					"name": "isNil",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that checks if the passed parameter is Nil (null or undefined) and narrows its type accordingly"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.isNil(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the passed input is Nil (null or undefined), false otherwise"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.isNil(undefined) //=> true\n   P.isNil(null) //=> true\n   P.isNil('somethingElse') //=> false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-nil.ts",
							"line": 13,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-nil.ts#L13"
						}
					],
					"typeParameter": [
						{
							"id": 2331,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2332,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the variable to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "data",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Extract"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								},
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "undefined"
										},
										{
											"type": "literal",
											"value": null
										}
									]
								}
							],
							"name": "Extract",
							"package": "typescript"
						}
					}
				}
			]
		},
		{
			"id": 2333,
			"name": "isNonNull",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-non-null.ts",
					"line": 14,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-non-null.ts#L14"
				}
			],
			"signatures": [
				{
					"id": 2334,
					"name": "isNonNull",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that checks if the passed parameter is not "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " and narrows its type accordingly.\nNotice that "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": " is not null!"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.isNonNull(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the passed input is defined, false otherwise"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.isNonNull('string') //=> true\n   P.isNonNull(null) //=> false\n   P.isNonNull(undefined) //=> true"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-non-null.ts",
							"line": 14,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-non-null.ts#L14"
						}
					],
					"typeParameter": [
						{
							"id": 2335,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2336,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the variable to check"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "data",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				}
			]
		},
		{
			"id": 2337,
			"name": "isNot",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-not.ts",
					"line": 13,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-not.ts#L13"
				}
			],
			"signatures": [
				{
					"id": 2338,
					"name": "isNot",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that takes a guard function as predicate and returns a guard that negates it"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.isNot(P.isTruthy)(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "function A guard function"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.isNot(P.isTruthy)(false) //=> true\n   P.isNot(P.isTruthy)(true) //=> false"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-not.ts",
							"line": 13,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-not.ts#L13"
						}
					],
					"typeParameter": [
						{
							"id": 2339,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 2340,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2341,
							"name": "predicate",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the guard function to negate"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2342,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "guard/is-not.ts",
											"line": 14,
											"character": 13,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-not.ts#L14"
										}
									],
									"signatures": [
										{
											"id": 2343,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "guard/is-not.ts",
													"line": 14,
													"character": 13,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-not.ts#L14"
												}
											],
											"parameters": [
												{
													"id": 2344,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "predicate",
												"name": "data",
												"asserts": false,
												"targetType": {
													"type": "reference",
													"target": -1,
													"name": "S",
													"refersToTypeParameter": true
												}
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2345,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "guard/is-not.ts",
									"line": 15,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-not.ts#L15"
								}
							],
							"signatures": [
								{
									"id": 2346,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2347,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "data",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Exclude"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												},
												{
													"type": "reference",
													"target": -1,
													"name": "S",
													"refersToTypeParameter": true
												}
											],
											"name": "Exclude",
											"package": "typescript"
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2357,
			"name": "isNumber",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-number.ts",
					"line": 18,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-number.ts#L18"
				}
			],
			"signatures": [
				{
					"id": 2358,
					"name": "isNumber",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that checks if the passed parameter is a number and narrows its type accordingly"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "R.isNumber(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the passed input is a number, false otherwise"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "R.isNumber(1) //=> true\n   R.isNumber('notANumber') //=> false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-number.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-number.ts#L18"
						}
					],
					"typeParameter": [
						{
							"id": 2359,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2360,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the variable to check"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "data",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"sourceFileName": "lib/src/guard/is-number.ts",
								"qualifiedName": "DefinitelyNumber"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "DefinitelyNumber",
							"package": "@vinicunca/perkakas"
						}
					}
				}
			]
		},
		{
			"id": 2361,
			"name": "isObject",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-object.ts",
					"line": 23,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-object.ts#L23"
				}
			],
			"signatures": [
				{
					"id": 2362,
					"name": "isObject",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that checks if the passed parameter is of type Object and narrows its type accordingly"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.isObject(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the passed input is an Object, Promise, Date or Error, false otherwise"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.isObject({}) //=> true\n   P.isObject(Promise.resolve(\"something\")) //=> true\n   P.isObject(new Date()) //=> true\n   P.isObject(new Error(\"error\")) //=> true\n   P.isObject('somethingElse') //=> false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-object.ts",
							"line": 23,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-object.ts#L23"
						}
					],
					"typeParameter": [
						{
							"id": 2363,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2364,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the variable to check"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "object"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "data",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"sourceFileName": "lib/src/guard/is-object.ts",
								"qualifiedName": "DefinitelyObject"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "DefinitelyObject",
							"package": "@vinicunca/perkakas"
						}
					}
				}
			]
		},
		{
			"id": 2365,
			"name": "isPromise",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-promise.ts",
					"line": 13,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-promise.ts#L13"
				}
			],
			"signatures": [
				{
					"id": 2366,
					"name": "isPromise",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that checks if the passed parameter is a Promise and narrows its type accordingly"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.isPromise(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the passed input is a Promise, false otherwise"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.isPromise(Promise.resolve(5)) //=> true\n   P.isPromise(Promise.reject(5)) //=> true\n   P.isPromise('somethingElse') //=> false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-promise.ts",
							"line": 13,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-promise.ts#L13"
						}
					],
					"typeParameter": [
						{
							"id": 2367,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 2368,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2369,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the variable to check"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": -1,
										"name": "S",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "data",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Promise"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "Promise",
							"package": "typescript"
						}
					}
				}
			]
		},
		{
			"id": 2370,
			"name": "isString",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-string.ts",
					"line": 18,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-string.ts#L18"
				}
			],
			"signatures": [
				{
					"id": 2371,
					"name": "isString",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that checks if the passed parameter is a string and narrows its type accordingly"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.isString(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the passed input is a string, false otherwise"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.isString('string') //=> true\n   P.isString(1) //=> false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-string.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-string.ts#L18"
						}
					],
					"typeParameter": [
						{
							"id": 2372,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2373,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the variable to check"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "data",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"sourceFileName": "lib/src/guard/is-string.ts",
								"qualifiedName": "DefinitelyString"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "DefinitelyString",
							"package": "@vinicunca/perkakas"
						}
					}
				}
			]
		},
		{
			"id": 2374,
			"name": "isTruthy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "guard/is-truthy.ts",
					"line": 16,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-truthy.ts#L16"
				}
			],
			"signatures": [
				{
					"id": 2375,
					"name": "isTruthy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that checks if the passed parameter is truthy and narrows its type accordingly"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.isTruthy(data)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the passed input is truthy, false otherwise"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.isTruthy('somethingElse') //=> true\n   P.isTruthy(null) //=> false\n   P.isTruthy(undefined) //=> false\n   P.isTruthy(false) //=> false\n   P.isTruthy(0) //=> false\n   P.isTruthy('') //=> false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "guard/is-truthy.ts",
							"line": 16,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/guard/is-truthy.ts#L16"
						}
					],
					"typeParameter": [
						{
							"id": 2376,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2377,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the variable to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "data",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Exclude"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								},
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "undefined"
										},
										{
											"type": "literal",
											"value": null
										},
										{
											"type": "literal",
											"value": false
										},
										{
											"type": "literal",
											"value": ""
										},
										{
											"type": "literal",
											"value": 0
										}
									]
								}
							],
							"name": "Exclude",
							"package": "typescript"
						}
					}
				}
			]
		},
		{
			"id": 721,
			"name": "join",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/join.ts",
					"line": 51,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/join.ts#L51"
				},
				{
					"fileName": "array/join.ts",
					"line": 74,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/join.ts#L74"
				},
				{
					"fileName": "array/join.ts",
					"line": 79,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/join.ts#L79"
				}
			],
			"signatures": [
				{
					"id": 722,
					"name": "join",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Joins the elements of the array by: casting them to a string and\nconcatenating them one to the other, with the provided glue string in between\nevery two elements.\n\nWhen called on a tuple and with stricter item types (union of literal values,\nthe result is strictly typed to the tuples shape and it's item types)."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.join(data, glue)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.join([1,2,3], \",\") // => \"1,2,3\" (typed "
									},
									{
										"kind": "code",
										"text": "`string`"
									},
									{
										"kind": "text",
										"text": ")\n   P.join(['a','b','c'], \"\") // => \"abc\" (typed "
									},
									{
										"kind": "code",
										"text": "`string`"
									},
									{
										"kind": "text",
										"text": ")\n   P.join(['hello', 'world'] as const, \" \") // => \"hello world\" (typed "
									},
									{
										"kind": "code",
										"text": "`hello world`"
									},
									{
										"kind": "text",
										"text": ")"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/join.ts",
							"line": 51,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/join.ts#L51"
						}
					],
					"typeParameter": [
						{
							"id": 723,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "tuple"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": {
													"sourceFileName": "lib/src/array/join.ts",
													"qualifiedName": "Joinable"
												},
												"name": "Joinable",
												"package": "@vinicunca/perkakas"
											}
										}
									}
								]
							}
						},
						{
							"id": 724,
							"name": "Glue",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"parameters": [
						{
							"id": 725,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The array to join"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 726,
							"name": "glue",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The string to put in between every two elements"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "Glue",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "lib/src/array/join.ts",
							"qualifiedName": "Joined"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "Glue",
								"refersToTypeParameter": true
							}
						],
						"name": "Joined",
						"package": "@vinicunca/perkakas"
					}
				},
				{
					"id": 727,
					"name": "join",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Joins the elements of the array by: casting them to a string and\nconcatenating them one to the other, with the provided glue string in between\nevery two elements.\n\nWhen called on a tuple and with stricter item types (union of literal values,\nthe result is strictly typed to the tuples shape and it's item types)."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.join(glue)(data)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe([1,2,3], P.join(\",\")) // => \"1,2,3\" (typed "
									},
									{
										"kind": "code",
										"text": "`string`"
									},
									{
										"kind": "text",
										"text": ")\n   P.pipe(['a','b','c'], P.join(\"\")) // => \"abc\" (typed "
									},
									{
										"kind": "code",
										"text": "`string`"
									},
									{
										"kind": "text",
										"text": ")\n   P.pipe(['hello', 'world'] as const, P.join(\" \")) // => \"hello world\" (typed "
									},
									{
										"kind": "code",
										"text": "`hello world`"
									},
									{
										"kind": "text",
										"text": ")"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/join.ts",
							"line": 74,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/join.ts#L74"
						}
					],
					"typeParameter": [
						{
							"id": 728,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "tuple"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": {
													"sourceFileName": "lib/src/array/join.ts",
													"qualifiedName": "Joinable"
												},
												"name": "Joinable",
												"package": "@vinicunca/perkakas"
											}
										}
									}
								]
							}
						},
						{
							"id": 729,
							"name": "Glue",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"parameters": [
						{
							"id": 730,
							"name": "glue",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The string to put in between every two elements"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "Glue",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 731,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/join.ts",
									"line": 77,
									"character": 15,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/join.ts#L77"
								}
							],
							"signatures": [
								{
									"id": 732,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 733,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "lib/src/array/join.ts",
											"qualifiedName": "Joined"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "Glue",
												"refersToTypeParameter": true
											}
										],
										"name": "Joined",
										"package": "@vinicunca/perkakas"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 737,
			"name": "last",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/last.ts",
					"line": 23,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/last.ts#L23"
				}
			],
			"signatures": [
				{
					"id": 738,
					"name": "last",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the last element of "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": ".\nNote: In "
							},
							{
								"kind": "code",
								"text": "`pipe`"
							},
							{
								"kind": "text",
								"text": ", use "
							},
							{
								"kind": "code",
								"text": "`last()`"
							},
							{
								"kind": "text",
								"text": " form instead of "
							},
							{
								"kind": "code",
								"text": "`last`"
							},
							{
								"kind": "text",
								"text": ". Otherwise, the inferred type is lost."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.last(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.last([1, 2, 3]) // => 3\n   P.last([]) // => undefined\n   P.pipe(\n     [1, 2, 4, 8, 16],\n     P.filter(x => x > 3),\n     P.last(),\n     x => x + 1\n   ); // => 17"
									}
								]
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/last.ts",
							"line": 23,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/last.ts#L23"
						}
					],
					"typeParameter": [
						{
							"id": 739,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 740,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "rest",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 749,
			"name": "length",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/length.ts",
					"line": 14,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/length.ts#L14"
				},
				{
					"fileName": "array/length.ts",
					"line": 15,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/length.ts#L15"
				},
				{
					"fileName": "array/length.ts",
					"line": 25,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/length.ts#L25"
				}
			],
			"signatures": [
				{
					"id": 750,
					"name": "length",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Counts values of the collection or iterable."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.length(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.length([1, 2, 3]) // => 3"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "array/length.ts",
							"line": 14,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/length.ts#L14"
						}
					],
					"typeParameter": [
						{
							"id": 751,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 752,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input data."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/array/length.ts",
									"qualifiedName": "Enumerable"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "Enumerable",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 753,
					"name": "length",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Counts values of the collection or iterable."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.length()(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe([1, 2, 3], P.length()) // => 3"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "array/length.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/length.ts#L15"
						}
					],
					"typeParameter": [
						{
							"id": 754,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 755,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/length.ts",
									"line": 15,
									"character": 29,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/length.ts#L15"
								}
							],
							"signatures": [
								{
									"id": 756,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 757,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "lib/src/array/length.ts",
													"qualifiedName": "Enumerable"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "Enumerable",
												"package": "@vinicunca/perkakas"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 758,
			"name": "map",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/map.ts",
					"line": 34,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map.ts#L34"
				},
				{
					"fileName": "array/map.ts",
					"line": 50,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map.ts#L50"
				},
				{
					"fileName": "array/map.ts",
					"line": 54,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map.ts#L54"
				},
				{
					"fileName": "array/map.ts",
					"line": 108,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map.ts#L108"
				}
			],
			"signatures": [
				{
					"id": 759,
					"name": "map",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map each element of an array using a defined callback function. If the input\narray is a tuple use the "
							},
							{
								"kind": "code",
								"text": "`strict`"
							},
							{
								"kind": "text",
								"text": " variant to maintain it's shape."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The new mapped array."
									}
								]
							},
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.map(array, fn)\n   P.map.indexed(array, fn)\n   P.map.strict(array, fn)\n   P.map.strict.indexed(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.map([1, 2, 3], x => x * 2) // => [2, 4, 6], typed number[]\n   P.map.indexed([0, 0, 0], (x, i) => i) // => [0, 1, 2], typed number[]\n   P.map.strict([0, 0] as const, x => x + 1) // => [1, 1], typed [number, number]\n   P.map.strict.indexed([0, 0] as const, (x, i) => x + i) // => [0, 1], typed [number, number]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							},
							{
								"tag": "@strict",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/map.ts",
							"line": 34,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map.ts#L34"
						}
					],
					"typeParameter": [
						{
							"id": 760,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 761,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 762,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The array to map."
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 763,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The function mapper."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "K",
										"refersToTypeParameter": true
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "K",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 764,
					"name": "map",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map each value of an object using a defined callback function."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.map(fn)(array)\n   P.map.indexed(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe([0, 1, 2], P.map(x => x * 2)) // => [0, 2, 4]\n   P.pipe([0, 0, 0], P.map.indexed((x, i) => i)) // => [0, 1, 2]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/map.ts",
							"line": 50,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map.ts#L50"
						}
					],
					"typeParameter": [
						{
							"id": 765,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 766,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 767,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the function mapper"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "K",
										"refersToTypeParameter": true
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 768,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/map.ts",
									"line": 52,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map.ts#L52"
								}
							],
							"signatures": [
								{
									"id": 769,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 770,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "K",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2475,
			"name": "mapKeys",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/map-keys.ts",
					"line": 12,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-keys.ts#L12"
				},
				{
					"fileName": "object/map-keys.ts",
					"line": 27,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-keys.ts#L27"
				},
				{
					"fileName": "object/map-keys.ts",
					"line": 31,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-keys.ts#L31"
				}
			],
			"signatures": [
				{
					"id": 2476,
					"name": "mapKeys",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maps keys of "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " and keeps the same values."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.mapKeys(object, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.mapKeys({a: 1, b: 2}, (key, value) => key + value) // => { a1: 1, b2: 2 }"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/map-keys.ts",
							"line": 12,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-keys.ts#L12"
						}
					],
					"typeParameter": [
						{
							"id": 2477,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 2478,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 2479,
							"name": "object",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the object to map"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2480,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the mapping function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2481,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "object/map-keys.ts",
											"line": 14,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-keys.ts#L14"
										}
									],
									"signatures": [
										{
											"id": 2482,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "object/map-keys.ts",
													"line": 14,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-keys.ts#L14"
												}
											],
											"parameters": [
												{
													"id": 2483,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												},
												{
													"id": 2484,
													"name": "value",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "S",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "S",
								"refersToTypeParameter": true
							},
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								},
								"objectType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 2485,
					"name": "mapKeys",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maps keys of "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " and keeps the same values."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.mapKeys(fn)(object)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe({a: 1, b: 2}, P.mapKeys((key, value) => key + value)) // => { a1: 1, b2: 2 }"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/map-keys.ts",
							"line": 27,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-keys.ts#L27"
						}
					],
					"typeParameter": [
						{
							"id": 2486,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 2487,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 2488,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the mapping function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2489,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "object/map-keys.ts",
											"line": 28,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-keys.ts#L28"
										}
									],
									"signatures": [
										{
											"id": 2490,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "object/map-keys.ts",
													"line": 28,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-keys.ts#L28"
												}
											],
											"parameters": [
												{
													"id": 2491,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												},
												{
													"id": 2492,
													"name": "value",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "S",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2493,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/map-keys.ts",
									"line": 29,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-keys.ts#L29"
								}
							],
							"signatures": [
								{
									"id": 2494,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2495,
											"name": "object",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "S",
												"refersToTypeParameter": true
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												},
												"objectType": {
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 818,
			"name": "mapToObj",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/map-to-obj.ts",
					"line": 19,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map-to-obj.ts#L19"
				},
				{
					"fileName": "array/map-to-obj.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map-to-obj.ts#L44"
				},
				{
					"fileName": "array/map-to-obj.ts",
					"line": 48,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map-to-obj.ts#L48"
				},
				{
					"fileName": "array/map-to-obj.ts",
					"line": 62,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map-to-obj.ts#L62"
				}
			],
			"signatures": [
				{
					"id": 819,
					"name": "mapToObj",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map each element of an array into an object using a defined callback function."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The new mapped object."
									}
								]
							},
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.mapToObj(array, fn)\n   P.mapToObj.indexed(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.mapToObj([1, 2, 3], x => [String(x), x * 2]) // => {1: 2, 2: 4, 3: 6}\n   P.mapToObj.indexed([0, 0, 0], (x, i) => [i, i]) // => {0: 0, 1: 1, 2: 2}"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/map-to-obj.ts",
							"line": 19,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map-to-obj.ts#L19"
						}
					],
					"typeParameter": [
						{
							"id": 820,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 821,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						},
						{
							"id": 822,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 823,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The array to map."
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 824,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mapping function, which should return a tuple of [key, value], similar to Object.fromEntries"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 825,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/map-to-obj.ts",
											"line": 21,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map-to-obj.ts#L21"
										}
									],
									"signatures": [
										{
											"id": 826,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/map-to-obj.ts",
													"line": 21,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map-to-obj.ts#L21"
												}
											],
											"parameters": [
												{
													"id": 827,
													"name": "element",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "reference",
														"target": -1,
														"name": "K",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "V",
														"refersToTypeParameter": true
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "V",
								"refersToTypeParameter": true
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 828,
					"name": "mapToObj",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map each element of an array into an object using a defined callback function."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The new mapped object."
									}
								]
							},
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.mapToObj(fn)(array)\n   P.mapToObj.indexed(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     [1, 2, 3],\n     P.mapToObj(x => [String(x), x * 2])\n   ) // => {1: 2, 2: 4, 3: 6}\n   P.pipe(\n     [0, 0, 0],\n     P.mapToObj.indexed((x, i) => [i, i])\n   ) // => {0: 0, 1: 1, 2: 2}"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/map-to-obj.ts",
							"line": 44,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map-to-obj.ts#L44"
						}
					],
					"typeParameter": [
						{
							"id": 829,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 830,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						},
						{
							"id": 831,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 832,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mapping function, which should return a tuple of [key, value], similar to Object.fromEntries"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 833,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/map-to-obj.ts",
											"line": 45,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map-to-obj.ts#L45"
										}
									],
									"signatures": [
										{
											"id": 834,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/map-to-obj.ts",
													"line": 45,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map-to-obj.ts#L45"
												}
											],
											"parameters": [
												{
													"id": 835,
													"name": "element",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "reference",
														"target": -1,
														"name": "K",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "V",
														"refersToTypeParameter": true
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 836,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/map-to-obj.ts",
									"line": 46,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/map-to-obj.ts#L46"
								}
							],
							"signatures": [
								{
									"id": 837,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 838,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "K",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "V",
												"refersToTypeParameter": true
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2496,
			"name": "mapValues",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/map-values.ts",
					"line": 12,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-values.ts#L12"
				},
				{
					"fileName": "object/map-values.ts",
					"line": 27,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-values.ts#L27"
				},
				{
					"fileName": "object/map-values.ts",
					"line": 31,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-values.ts#L31"
				}
			],
			"signatures": [
				{
					"id": 2497,
					"name": "mapValues",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maps values of "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " and keeps the same keys."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.mapValues(object, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.mapValues({a: 1, b: 2}, (value, key) => value + key) // => {a: '1a', b: '2b'}"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/map-values.ts",
							"line": 12,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-values.ts#L12"
						}
					],
					"typeParameter": [
						{
							"id": 2498,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "PropertyKey"
										},
										"name": "PropertyKey",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 2499,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2500,
							"name": "object",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the object to map"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2501,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the mapping function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2502,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "object/map-values.ts",
											"line": 14,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-values.ts#L14"
										}
									],
									"signatures": [
										{
											"id": 2503,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "object/map-values.ts",
													"line": 14,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-values.ts#L14"
												}
											],
											"parameters": [
												{
													"id": 2504,
													"name": "value",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												},
												{
													"id": 2505,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "S",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": -1,
								"name": "S",
								"refersToTypeParameter": true
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 2506,
					"name": "mapValues",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maps values of "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " and keeps the same keys."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.mapValues(fn)(object)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe({a: 1, b: 2}, P.mapValues((value, key) => value + key)) // => {a: '1a', b: '2b'}"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/map-values.ts",
							"line": 27,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-values.ts#L27"
						}
					],
					"typeParameter": [
						{
							"id": 2507,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "PropertyKey"
										},
										"name": "PropertyKey",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 2508,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2509,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the mapping function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2510,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "object/map-values.ts",
											"line": 28,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-values.ts#L28"
										}
									],
									"signatures": [
										{
											"id": 2511,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "object/map-values.ts",
													"line": 28,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-values.ts#L28"
												}
											],
											"parameters": [
												{
													"id": 2512,
													"name": "value",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												},
												{
													"id": 2513,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "S",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2514,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/map-values.ts",
									"line": 29,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/map-values.ts#L29"
								}
							],
							"signatures": [
								{
									"id": 2515,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2516,
											"name": "object",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											},
											{
												"type": "reference",
												"target": -1,
												"name": "S",
												"refersToTypeParameter": true
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 865,
			"name": "maxBy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/max-by.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/max-by.ts#L35"
				},
				{
					"fileName": "array/max-by.ts",
					"line": 55,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/max-by.ts#L55"
				},
				{
					"fileName": "array/max-by.ts",
					"line": 60,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/max-by.ts#L60"
				},
				{
					"fileName": "array/max-by.ts",
					"line": 64,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/max-by.ts#L64"
				}
			],
			"signatures": [
				{
					"id": 866,
					"name": "maxBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the max element using the provided predicate."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.maxBy(fn)(array)\n   P.maxBy.indexed(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     [{a: 5}, {a: 1}, {a: 3}],\n     P.maxBy(x => x.a)\n   ) // { a: 5 }"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/max-by.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/max-by.ts#L35"
						}
					],
					"typeParameter": [
						{
							"id": 867,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 868,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 869,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/max-by.ts",
											"line": 36,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/max-by.ts#L36"
										}
									],
									"signatures": [
										{
											"id": 870,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/max-by.ts",
													"line": 36,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/max-by.ts#L36"
												}
											],
											"parameters": [
												{
													"id": 871,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 872,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/max-by.ts",
									"line": 37,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/max-by.ts#L37"
								}
							],
							"signatures": [
								{
									"id": 873,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 874,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 875,
					"name": "maxBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the max element using the provided predicate."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.maxBy(array, fn)\n   P.maxBy.indexed(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.maxBy(\n     [{a: 5}, {a: 1}, {a: 3}],\n     x => x.a\n   ) // { a: 5 }"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/max-by.ts",
							"line": 55,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/max-by.ts#L55"
						}
					],
					"typeParameter": [
						{
							"id": 876,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 877,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 878,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 879,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/max-by.ts",
											"line": 57,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/max-by.ts#L57"
										}
									],
									"signatures": [
										{
											"id": 880,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/max-by.ts",
													"line": 57,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/max-by.ts#L57"
												}
											],
											"parameters": [
												{
													"id": 881,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 894,
			"name": "meanBy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/mean-by.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/mean-by.ts#L35"
				},
				{
					"fileName": "array/mean-by.ts",
					"line": 56,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/mean-by.ts#L56"
				},
				{
					"fileName": "array/mean-by.ts",
					"line": 61,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/mean-by.ts#L61"
				},
				{
					"fileName": "array/mean-by.ts",
					"line": 65,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/mean-by.ts#L65"
				}
			],
			"signatures": [
				{
					"id": 895,
					"name": "meanBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the mean of the elements of an array using the provided predicate."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.meanBy(fn)(array)\n  P.meanBy.indexed(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     [{a: 5}, {a: 1}, {a: 3}],\n     P.meanBy(x => x.a)\n   ) // 3"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/mean-by.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/mean-by.ts#L35"
						}
					],
					"typeParameter": [
						{
							"id": 896,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 897,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "predicate function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 898,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/mean-by.ts",
											"line": 36,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/mean-by.ts#L36"
										}
									],
									"signatures": [
										{
											"id": 899,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/mean-by.ts",
													"line": 36,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/mean-by.ts#L36"
												}
											],
											"parameters": [
												{
													"id": 900,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 901,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/mean-by.ts",
									"line": 37,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/mean-by.ts#L37"
								}
							],
							"signatures": [
								{
									"id": 902,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 903,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				},
				{
					"id": 904,
					"name": "meanBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the mean of the elements of an array using the provided predicate."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.meanBy(array, fn)\n  P.meanBy.indexed(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.meanBy(\n     [{a: 5}, {a: 1}, {a: 3}],\n     x => x.a\n   ) // 3"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/mean-by.ts",
							"line": 56,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/mean-by.ts#L56"
						}
					],
					"typeParameter": [
						{
							"id": 905,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 906,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 907,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "predicate function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 908,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/mean-by.ts",
											"line": 58,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/mean-by.ts#L58"
										}
									],
									"signatures": [
										{
											"id": 909,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/mean-by.ts",
													"line": 58,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/mean-by.ts#L58"
												}
											],
											"parameters": [
												{
													"id": 910,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 2517,
			"name": "merge",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/merge.ts",
					"line": 15,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/merge.ts#L15"
				},
				{
					"fileName": "object/merge.ts",
					"line": 27,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/merge.ts#L27"
				},
				{
					"fileName": "object/merge.ts",
					"line": 29,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/merge.ts#L29"
				}
			],
			"signatures": [
				{
					"id": 2518,
					"name": "merge",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Merges two objects. The same as "
							},
							{
								"kind": "code",
								"text": "`Object.assign`"
							},
							{
								"kind": "text",
								"text": ".\n"
							},
							{
								"kind": "code",
								"text": "`b`"
							},
							{
								"kind": "text",
								"text": " object will override properties of "
							},
							{
								"kind": "code",
								"text": "`a`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.merge(a, b)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.merge({ x: 1, y: 2 }, { y: 10, z: 2 }) // => { x: 1, y: 10, z: 2 }"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/merge.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/merge.ts#L15"
						}
					],
					"typeParameter": [
						{
							"id": 2519,
							"name": "A",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 2520,
							"name": "B",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2521,
							"name": "a",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the first object"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "A",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2522,
							"name": "b",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second object"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "B",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": -1,
								"name": "A",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "B",
								"refersToTypeParameter": true
							}
						]
					}
				},
				{
					"id": 2523,
					"name": "merge",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Merges two objects. The same as "
							},
							{
								"kind": "code",
								"text": "`Object.assign`"
							},
							{
								"kind": "text",
								"text": ". "
							},
							{
								"kind": "code",
								"text": "`b`"
							},
							{
								"kind": "text",
								"text": " object will override properties of "
							},
							{
								"kind": "code",
								"text": "`a`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.merge(b)(a)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.merge({ y: 10, z: 2 })({ x: 1, y: 2 }) // => { x: 1, y: 10, z: 2 }"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/merge.ts",
							"line": 27,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/merge.ts#L27"
						}
					],
					"typeParameter": [
						{
							"id": 2524,
							"name": "A",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 2525,
							"name": "B",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2526,
							"name": "b",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second object"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "B",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2527,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/merge.ts",
									"line": 27,
									"character": 35,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/merge.ts#L27"
								}
							],
							"signatures": [
								{
									"id": 2528,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2529,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "A",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "A",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "B",
												"refersToTypeParameter": true
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 923,
			"name": "mergeAll",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/merge-all.ts",
					"line": 10,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/merge-all.ts#L10"
				}
			],
			"signatures": [
				{
					"id": 924,
					"name": "mergeAll",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Merges a list of objects into a single object."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.mergeAll(objects)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.mergeAll([{ a: 1, b: 1 }, { b: 2, c: 3 }, { d: 10 }]) // => { a: 1, b: 2, c: 3, d: 10 }"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "array/merge-all.ts",
							"line": 10,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/merge-all.ts#L10"
						}
					],
					"typeParameter": [
						{
							"id": 925,
							"name": "A",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 926,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array of objects"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "tuple",
									"elements": [
										{
											"type": "reference",
											"target": -1,
											"name": "A",
											"refersToTypeParameter": true
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "A",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 951,
			"name": "minBy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/min-by.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/min-by.ts#L35"
				},
				{
					"fileName": "array/min-by.ts",
					"line": 55,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/min-by.ts#L55"
				},
				{
					"fileName": "array/min-by.ts",
					"line": 60,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/min-by.ts#L60"
				},
				{
					"fileName": "array/min-by.ts",
					"line": 64,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/min-by.ts#L64"
				}
			],
			"signatures": [
				{
					"id": 952,
					"name": "minBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the min element using the provided predicate."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.minBy(fn)(array)\n   P.minBy.indexed(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     [{a: 5}, {a: 1}, {a: 3}],\n     P.minBy(x => x.a)\n   ) // { a: 1 }"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/min-by.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/min-by.ts#L35"
						}
					],
					"typeParameter": [
						{
							"id": 953,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 954,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 955,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/min-by.ts",
											"line": 36,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/min-by.ts#L36"
										}
									],
									"signatures": [
										{
											"id": 956,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/min-by.ts",
													"line": 36,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/min-by.ts#L36"
												}
											],
											"parameters": [
												{
													"id": 957,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 958,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/min-by.ts",
									"line": 37,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/min-by.ts#L37"
								}
							],
							"signatures": [
								{
									"id": 959,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 960,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 961,
					"name": "minBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the min element using the provided predicate."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.minBy(array, fn)\n   P.minBy.indexed(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.minBy(\n     [{a: 5}, {a: 1}, {a: 3}],\n     x => x.a\n   ) // { a: 1 }"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/min-by.ts",
							"line": 55,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/min-by.ts#L55"
						}
					],
					"typeParameter": [
						{
							"id": 962,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 963,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 964,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 965,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/min-by.ts",
											"line": 57,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/min-by.ts#L57"
										}
									],
									"signatures": [
										{
											"id": 966,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/min-by.ts",
													"line": 57,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/min-by.ts#L57"
												}
											],
											"parameters": [
												{
													"id": 967,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 1632,
			"name": "noop",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "function/noop.ts",
					"line": 9,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/noop.ts#L9"
				}
			],
			"signatures": [
				{
					"id": 1633,
					"name": "noop",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that returns always "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.noop()"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "onSomething(P.noop)"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "function/noop.ts",
							"line": 9,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/noop.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "undefined"
					}
				}
			]
		},
		{
			"id": 2530,
			"name": "omit",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/omit.ts",
					"line": 15,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit.ts#L15"
				},
				{
					"fileName": "object/omit.ts",
					"line": 30,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit.ts#L30"
				},
				{
					"fileName": "object/omit.ts",
					"line": 34,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit.ts#L34"
				}
			],
			"signatures": [
				{
					"id": 2531,
					"name": "omit",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a partial copy of an object omitting the keys specified."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.omit(obj, names);"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.omit({ a: 1, b: 2, c: 3, d: 4 }, ['a', 'd']) // => { b: 2, c: 3 }"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/omit.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit.ts#L15"
						}
					],
					"typeParameter": [
						{
							"id": 2532,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 2533,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 2534,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the object"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2535,
							"name": "propNames",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the property names"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "K",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				},
				{
					"id": 2536,
					"name": "omit",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a partial copy of an object omitting the keys specified."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.omit(propNames)(obj);"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe({ a: 1, b: 2, c: 3, d: 4 }, P.omit(['a', 'd'])) // => { b: 2, c: 3 }"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/omit.ts",
							"line": 30,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit.ts#L30"
						}
					],
					"typeParameter": [
						{
							"id": 2537,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "PropertyKey"
								},
								"name": "PropertyKey",
								"package": "typescript"
							}
						}
					],
					"parameters": [
						{
							"id": 2538,
							"name": "propNames",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the property names"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "K",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2539,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/omit.ts",
									"line": 32,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit.ts#L32"
								}
							],
							"signatures": [
								{
									"id": 2540,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 2542,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"parameters": [
										{
											"id": 2541,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "K",
												"refersToTypeParameter": true
											}
										],
										"name": "Omit",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2543,
			"name": "omitBy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/omit-by.ts",
					"line": 13,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit-by.ts#L13"
				},
				{
					"fileName": "object/omit-by.ts",
					"line": 27,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit-by.ts#L27"
				},
				{
					"fileName": "object/omit-by.ts",
					"line": 31,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit-by.ts#L31"
				}
			],
			"signatures": [
				{
					"id": 2544,
					"name": "omitBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a partial copy of an object omitting the keys matching predicate."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.omitBy(object, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.omitBy({a: 1, b: 2, A: 3, B: 4}, (val, key) => key.toUpperCase() === key) // => {a: 1, b: 2}"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/omit-by.ts",
							"line": 13,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit-by.ts#L13"
						}
					],
					"typeParameter": [
						{
							"id": 2545,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2546,
							"name": "object",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the target object"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2547,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2548,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "object/omit-by.ts",
											"line": 15,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit-by.ts#L15"
										}
									],
									"signatures": [
										{
											"id": 2549,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "object/omit-by.ts",
													"line": 15,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit-by.ts#L15"
												}
											],
											"typeParameter": [
												{
													"id": 2550,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 2551,
													"name": "value",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": -1,
															"name": "K",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												},
												{
													"id": 2552,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "K",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "Record",
							"package": "typescript"
						},
						"trueType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						},
						"falseType": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					}
				},
				{
					"id": 2553,
					"name": "omitBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a partial copy of an object omitting the keys matching predicate."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.omitBy(fn)(object)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.omitBy((val, key) => key.toUpperCase() === key)({a: 1, b: 2, A: 3, B: 4}) // => {a: 1, b: 2}"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/omit-by.ts",
							"line": 27,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit-by.ts#L27"
						}
					],
					"typeParameter": [
						{
							"id": 2554,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2555,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2556,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "object/omit-by.ts",
											"line": 28,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit-by.ts#L28"
										}
									],
									"signatures": [
										{
											"id": 2557,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "object/omit-by.ts",
													"line": 28,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit-by.ts#L28"
												}
											],
											"typeParameter": [
												{
													"id": 2558,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 2559,
													"name": "value",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": -1,
															"name": "K",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												},
												{
													"id": 2560,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "K",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2561,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/omit-by.ts",
									"line": 29,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/omit-by.ts#L29"
								}
							],
							"signatures": [
								{
									"id": 2562,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2563,
											"name": "object",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												},
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													},
													"objectType": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "Record",
											"package": "typescript"
										},
										"trueType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											],
											"name": "Partial",
											"package": "typescript"
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1634,
			"name": "once",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "function/once.ts",
					"line": 12,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/once.ts#L12"
				}
			],
			"signatures": [
				{
					"id": 1635,
					"name": "once",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a function that is restricted to invoking "
							},
							{
								"kind": "code",
								"text": "`func`"
							},
							{
								"kind": "text",
								"text": " once. Repeat calls to the function return the value of the first invocation."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.once(fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "const initialize = P.once(createApplication);\ninitialize();\ninitialize();\n// => "
									},
									{
										"kind": "code",
										"text": "`createApplication`"
									},
									{
										"kind": "text",
										"text": " is invoked once"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "function/once.ts",
							"line": 12,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/once.ts#L12"
						}
					],
					"typeParameter": [
						{
							"id": 1636,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1637,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the function to wrap"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1638,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "function/once.ts",
											"line": 12,
											"character": 28,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/once.ts#L12"
										}
									],
									"signatures": [
										{
											"id": 1639,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "function/once.ts",
													"line": 12,
													"character": 28,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/once.ts#L12"
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1640,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "function/once.ts",
									"line": 12,
									"character": 38,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/once.ts#L12"
								}
							],
							"signatures": [
								{
									"id": 1641,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 980,
			"name": "partition",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/partition.ts",
					"line": 17,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L17"
				},
				{
					"fileName": "array/partition.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L35"
				},
				{
					"fileName": "array/partition.ts",
					"line": 52,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L52"
				},
				{
					"fileName": "array/partition.ts",
					"line": 68,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L68"
				},
				{
					"fileName": "array/partition.ts",
					"line": 72,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L72"
				},
				{
					"fileName": "array/partition.ts",
					"line": 87,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L87"
				}
			],
			"signatures": [
				{
					"id": 981,
					"name": "partition",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Splits a collection into two groups, the first of which contains elements the "
							},
							{
								"kind": "code",
								"text": "`predicate`"
							},
							{
								"kind": "text",
								"text": " type guard passes, and the second one containing the rest."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the array of grouped elements."
									}
								]
							},
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.partition(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.partition(['one', 'two', 'forty two'], x => x.length === 3) // => [['one', 'two'], ['forty two']]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/partition.ts",
							"line": 17,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L17"
						}
					],
					"typeParameter": [
						{
							"id": 982,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 983,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 984,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the items to split"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 985,
							"name": "predicate",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "a type guard function to invoke on every item"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 986,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/partition.ts",
											"line": 19,
											"character": 13,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L19"
										}
									],
									"signatures": [
										{
											"id": 987,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/partition.ts",
													"line": 19,
													"character": 13,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L19"
												}
											],
											"parameters": [
												{
													"id": 988,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "predicate",
												"name": "item",
												"asserts": false,
												"targetType": {
													"type": "reference",
													"target": -1,
													"name": "S",
													"refersToTypeParameter": true
												}
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "S",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Exclude"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										},
										{
											"type": "reference",
											"target": -1,
											"name": "S",
											"refersToTypeParameter": true
										}
									],
									"name": "Exclude",
									"package": "typescript"
								}
							}
						]
					}
				},
				{
					"id": 989,
					"name": "partition",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Splits a collection into two groups, the first of which contains elements the "
							},
							{
								"kind": "code",
								"text": "`predicate`"
							},
							{
								"kind": "text",
								"text": " function matches, and the second one containing the rest."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the array of grouped elements."
									}
								]
							},
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.partition(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.partition(['one', 'two', 'forty two'], x => x.length === 3) // => [['one', 'two'], ['forty two']]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/partition.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L35"
						}
					],
					"typeParameter": [
						{
							"id": 990,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 991,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the items to split"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 992,
							"name": "predicate",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the function invoked per iteration"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 993,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/partition.ts",
											"line": 37,
											"character": 13,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L37"
										}
									],
									"signatures": [
										{
											"id": 994,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/partition.ts",
													"line": 37,
													"character": 13,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L37"
												}
											],
											"parameters": [
												{
													"id": 995,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							}
						]
					}
				},
				{
					"id": 996,
					"name": "partition",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Splits a collection into two groups, the first of which contains elements the "
							},
							{
								"kind": "code",
								"text": "`predicate`"
							},
							{
								"kind": "text",
								"text": " type guard passes, and the second one containing the rest."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the array of grouped elements."
									}
								]
							},
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.partition(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(['one', 'two', 'forty two'], P.partition(x => x.length === 3)) // => [['one', 'two'], ['forty two']]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/partition.ts",
							"line": 52,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L52"
						}
					],
					"typeParameter": [
						{
							"id": 997,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 998,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 999,
							"name": "predicate",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the grouping function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1000,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/partition.ts",
											"line": 53,
											"character": 13,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L53"
										}
									],
									"signatures": [
										{
											"id": 1001,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/partition.ts",
													"line": 53,
													"character": 13,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L53"
												}
											],
											"parameters": [
												{
													"id": 1002,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "predicate",
												"name": "item",
												"asserts": false,
												"targetType": {
													"type": "reference",
													"target": -1,
													"name": "S",
													"refersToTypeParameter": true
												}
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1003,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/partition.ts",
									"line": 54,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 1004,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1005,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "S",
													"refersToTypeParameter": true
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Exclude"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": -1,
															"name": "S",
															"refersToTypeParameter": true
														}
													],
													"name": "Exclude",
													"package": "typescript"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1006,
					"name": "partition",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Splits a collection into two groups, the first of which contains elements the "
							},
							{
								"kind": "code",
								"text": "`predicate`"
							},
							{
								"kind": "text",
								"text": " function matches, and the second one containing the rest."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the array of grouped elements."
									}
								]
							},
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.partition(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(['one', 'two', 'forty two'], P.partition(x => x.length === 3)) // => [['one', 'two'], ['forty two']]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/partition.ts",
							"line": 68,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L68"
						}
					],
					"typeParameter": [
						{
							"id": 1007,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1008,
							"name": "predicate",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the grouping function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1009,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/partition.ts",
											"line": 69,
											"character": 13,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L69"
										}
									],
									"signatures": [
										{
											"id": 1010,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/partition.ts",
													"line": 69,
													"character": 13,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L69"
												}
											],
											"parameters": [
												{
													"id": 1011,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1012,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/partition.ts",
									"line": 70,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/partition.ts#L70"
								}
							],
							"signatures": [
								{
									"id": 1013,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1014,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2564,
			"name": "pathOr",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/path-or.ts",
					"line": 82,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/path-or.ts#L82"
				},
				{
					"fileName": "object/path-or.ts",
					"line": 120,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/path-or.ts#L120"
				}
			],
			"signatures": [
				{
					"id": 2565,
					"name": "pathOr",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the value at "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": " of "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": ". If the resolved value is "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ", the "
							},
							{
								"kind": "code",
								"text": "`defaultValue`"
							},
							{
								"kind": "text",
								"text": " is returned in its place."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.pathOr(object, array, defaultValue)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pathOr({x: 10}, ['y'], 2) // 2\n   P.pathOr({y: 10}, ['y'], 2) // 10"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/path-or.ts",
							"line": 82,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/path-or.ts#L82"
						}
					],
					"typeParameter": [
						{
							"id": 2566,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 2567,
							"name": "A",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					],
					"parameters": [
						{
							"id": 2568,
							"name": "object",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the target object"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2569,
							"name": "path",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the path of the property to get"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "tuple",
									"elements": [
										{
											"type": "reference",
											"target": -1,
											"name": "A",
											"refersToTypeParameter": true
										}
									]
								}
							}
						},
						{
							"id": 2570,
							"name": "defaultValue",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the default value"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/object/path-or.ts",
									"qualifiedName": "PathValue1"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "A",
										"refersToTypeParameter": true
									}
								],
								"name": "PathValue1",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "lib/src/object/path-or.ts",
							"qualifiedName": "PathValue1"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "A",
								"refersToTypeParameter": true
							}
						],
						"name": "PathValue1",
						"package": "@vinicunca/perkakas"
					}
				},
				{
					"id": 2586,
					"name": "pathOr",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the value at "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": " of "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": ". If the resolved value is "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ", the "
							},
							{
								"kind": "code",
								"text": "`defaultValue`"
							},
							{
								"kind": "text",
								"text": " is returned in its place."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.pathOr(array, defaultValue)(object)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe({x: 10}, P.pathOr(['y'], 2)) // 2\n   P.pipe({y: 10}, P.pathOr(['y'], 2)) // 10"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/path-or.ts",
							"line": 120,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/path-or.ts#L120"
						}
					],
					"typeParameter": [
						{
							"id": 2587,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 2588,
							"name": "A",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					],
					"parameters": [
						{
							"id": 2589,
							"name": "path",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the path of the property to get"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "tuple",
									"elements": [
										{
											"type": "reference",
											"target": -1,
											"name": "A",
											"refersToTypeParameter": true
										}
									]
								}
							}
						},
						{
							"id": 2590,
							"name": "defaultValue",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the default value"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/object/path-or.ts",
									"qualifiedName": "PathValue1"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "A",
										"refersToTypeParameter": true
									}
								],
								"name": "PathValue1",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2591,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/path-or.ts",
									"line": 123,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/path-or.ts#L123"
								}
							],
							"signatures": [
								{
									"id": 2592,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2593,
											"name": "object",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "lib/src/object/path-or.ts",
											"qualifiedName": "PathValue1"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "A",
												"refersToTypeParameter": true
											}
										],
										"name": "PathValue1",
										"package": "@vinicunca/perkakas"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2613,
			"name": "pick",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/pick.ts",
					"line": 13,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick.ts#L13"
				},
				{
					"fileName": "object/pick.ts",
					"line": 27,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick.ts#L27"
				},
				{
					"fileName": "object/pick.ts",
					"line": 31,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick.ts#L31"
				}
			],
			"signatures": [
				{
					"id": 2614,
					"name": "pick",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates an object composed of the picked "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " properties."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.pick(object, [prop1, prop2])"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pick({ a: 1, b: 2, c: 3, d: 4 }, ['a', 'd']) // => { a: 1, d: 4 }"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/pick.ts",
							"line": 13,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick.ts#L13"
						}
					],
					"typeParameter": [
						{
							"id": 2615,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 2616,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 2617,
							"name": "object",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the target object"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2618,
							"name": "names",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the properties names"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "K",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							}
						],
						"name": "Pick",
						"package": "typescript"
					}
				},
				{
					"id": 2619,
					"name": "pick",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates an object composed of the picked "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " properties."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.pick([prop1, prop2])(object)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe({ a: 1, b: 2, c: 3, d: 4 }, P.pick(['a', 'd'])) // => { a: 1, d: 4 }"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/pick.ts",
							"line": 27,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick.ts#L27"
						}
					],
					"typeParameter": [
						{
							"id": 2620,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "PropertyKey"
								},
								"name": "PropertyKey",
								"package": "typescript"
							}
						}
					],
					"parameters": [
						{
							"id": 2621,
							"name": "names",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the properties names"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "K",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2622,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/pick.ts",
									"line": 29,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick.ts#L29"
								}
							],
							"signatures": [
								{
									"id": 2623,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 2625,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "PropertyKey"
														},
														"name": "PropertyKey",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"parameters": [
										{
											"id": 2624,
											"name": "object",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "K",
												"refersToTypeParameter": true
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2626,
			"name": "pickBy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/pick-by.ts",
					"line": 13,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick-by.ts#L13"
				},
				{
					"fileName": "object/pick-by.ts",
					"line": 27,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick-by.ts#L27"
				},
				{
					"fileName": "object/pick-by.ts",
					"line": 31,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick-by.ts#L31"
				}
			],
			"signatures": [
				{
					"id": 2627,
					"name": "pickBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates an object composed of the picked "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " properties."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.pickBy(object, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pickBy({a: 1, b: 2, A: 3, B: 4}, (val, key) => key.toUpperCase() === key) // => {A: 3, B: 4}"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/pick-by.ts",
							"line": 13,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick-by.ts#L13"
						}
					],
					"typeParameter": [
						{
							"id": 2628,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2629,
							"name": "object",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the target object"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2630,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2631,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "object/pick-by.ts",
											"line": 15,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick-by.ts#L15"
										}
									],
									"signatures": [
										{
											"id": 2632,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "object/pick-by.ts",
													"line": 15,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick-by.ts#L15"
												}
											],
											"typeParameter": [
												{
													"id": 2633,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 2634,
													"name": "value",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": -1,
															"name": "K",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												},
												{
													"id": 2635,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "K",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "Record",
							"package": "typescript"
						},
						"trueType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						},
						"falseType": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					}
				},
				{
					"id": 2636,
					"name": "pickBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates an object composed of the picked "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " properties."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.pickBy(fn)(object)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pickBy((val, key) => key.toUpperCase() === key)({a: 1, b: 2, A: 3, B: 4}) // => {A: 3, B: 4}"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/pick-by.ts",
							"line": 27,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick-by.ts#L27"
						}
					],
					"typeParameter": [
						{
							"id": 2637,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2638,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2639,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "object/pick-by.ts",
											"line": 28,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick-by.ts#L28"
										}
									],
									"signatures": [
										{
											"id": 2640,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "object/pick-by.ts",
													"line": 28,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick-by.ts#L28"
												}
											],
											"typeParameter": [
												{
													"id": 2641,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 2642,
													"name": "value",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": -1,
															"name": "K",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												},
												{
													"id": 2643,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "K",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2644,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/pick-by.ts",
									"line": 29,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/pick-by.ts#L29"
								}
							],
							"signatures": [
								{
									"id": 2645,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2646,
											"name": "object",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												},
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													},
													"objectType": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "Record",
											"package": "typescript"
										},
										"trueType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											],
											"name": "Partial",
											"package": "typescript"
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1642,
			"name": "pipe",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "function/pipe.ts",
					"line": 20,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/pipe.ts#L20"
				}
			],
			"signatures": [
				{
					"id": 1643,
					"name": "pipe",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Perform left-to-right function composition."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(data, op1, op2, op3)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     [1, 2, 3, 4],\n     P.map(x => x * 2),\n     arr => [arr[0] + arr[1], arr[2] + arr[3]],\n   ) // => [6, 14]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "function/pipe.ts",
							"line": 20,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/pipe.ts#L20"
						}
					],
					"typeParameter": [
						{
							"id": 1644,
							"name": "A",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 1645,
							"name": "B",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1646,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The initial value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "A",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 1647,
							"name": "op1",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1648,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "function/pipe.ts",
											"line": 20,
											"character": 42,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/pipe.ts#L20"
										}
									],
									"signatures": [
										{
											"id": 1649,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "function/pipe.ts",
													"line": 20,
													"character": 42,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/pipe.ts#L20"
												}
											],
											"parameters": [
												{
													"id": 1650,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "A",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "B",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "B",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 2647,
			"name": "prop",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/prop.ts",
					"line": 10,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/prop.ts#L10"
				}
			],
			"signatures": [
				{
					"id": 2648,
					"name": "prop",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the value of the given property."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.prop(prop)(object)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe({foo: 'bar'}, P.prop('foo')) // => 'bar'"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/prop.ts",
							"line": 10,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/prop.ts#L10"
						}
					],
					"typeParameter": [
						{
							"id": 2649,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 2650,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 2651,
							"name": "propName",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the property name"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2652,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/prop.ts",
									"line": 11,
									"character": 9,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/prop.ts#L11"
								}
							],
							"signatures": [
								{
									"id": 2653,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "object/prop.ts",
											"line": 11,
											"character": 9,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/prop.ts#L11"
										}
									],
									"parameters": [
										{
											"id": 2654,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": -1,
											"name": "K",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2288,
			"name": "purry",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "function/purry.ts",
					"line": 31,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/purry.ts#L31"
				}
			],
			"signatures": [
				{
					"id": 2289,
					"name": "purry",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a function with "
							},
							{
								"kind": "code",
								"text": "`data-first`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`data-last`"
							},
							{
								"kind": "text",
								"text": " signatures.\n\n"
							},
							{
								"kind": "code",
								"text": "`purry`"
							},
							{
								"kind": "text",
								"text": " is a dynamic function and it's not type safe. It should be wrapped by a function that have proper typings.\nRefer to the example below for correct usage."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.purry(fn, arguments);"
									}
								]
							},
							{
								"tag": "@exampleRaw",
								"content": [
									{
										"kind": "text",
										"text": "function _findIndex(array, fn) {\n     for (let i = 0; i < array.length; i++) {\n       if (fn(array[i])) {\n         return i;\n       }\n     }\n     return -1;\n   }\n\n   // data-first\n   function findIndex<T>(array: T[], fn: (item: T) => boolean): number;\n\n   // data-last\n   function findIndex<T>(fn: (item: T) => boolean): (array: T[]) => number;\n\n   function findIndex() {\n     return P.purry(_findIndex, arguments);\n   }"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "function/purry.ts",
							"line": 31,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/function/purry.ts#L31"
						}
					],
					"parameters": [
						{
							"id": 2290,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the function to purry."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2291,
							"name": "args",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the arguments"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "IArguments"
										},
										"name": "IArguments",
										"package": "typescript"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									}
								]
							}
						},
						{
							"id": 2292,
							"name": "lazy",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 2766,
			"name": "randomString",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "string/random-string.ts",
					"line": 11,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/string/random-string.ts#L11"
				}
			],
			"signatures": [
				{
					"id": 2767,
					"name": "randomString",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Random a non-cryptographic random string from characters a-zA-Z0-9."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "randomString(length)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "randomString(5) // => aB92J"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "string/random-string.ts",
							"line": 11,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/string/random-string.ts#L11"
						}
					],
					"parameters": [
						{
							"id": 2768,
							"name": "length",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the length of the random string"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 1027,
			"name": "range",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/range.ts",
					"line": 13,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/range.ts#L13"
				},
				{
					"fileName": "array/range.ts",
					"line": 24,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/range.ts#L24"
				},
				{
					"fileName": "array/range.ts",
					"line": 26,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/range.ts#L26"
				}
			],
			"signatures": [
				{
					"id": 1028,
					"name": "range",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a list of numbers from "
							},
							{
								"kind": "code",
								"text": "`start`"
							},
							{
								"kind": "text",
								"text": " (inclusive) to "
							},
							{
								"kind": "code",
								"text": "`end`"
							},
							{
								"kind": "text",
								"text": " (exclusive)."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "range(start, end)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.range(1, 5) // => [1, 2, 3, 4]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/range.ts",
							"line": 13,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/range.ts#L13"
						}
					],
					"parameters": [
						{
							"id": 1029,
							"name": "start",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the start number"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1030,
							"name": "end",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the end number"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 1031,
					"name": "range",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a list of numbers from "
							},
							{
								"kind": "code",
								"text": "`start`"
							},
							{
								"kind": "text",
								"text": " (inclusive) to "
							},
							{
								"kind": "code",
								"text": "`end`"
							},
							{
								"kind": "text",
								"text": " (exclusive)."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "range(end)(start)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.range(5)(1) // => [1, 2, 3, 4]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/range.ts",
							"line": 24,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/range.ts#L24"
						}
					],
					"parameters": [
						{
							"id": 1032,
							"name": "end",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the end number"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1033,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/range.ts",
									"line": 24,
									"character": 36,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/range.ts#L24"
								}
							],
							"signatures": [
								{
									"id": 1034,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1035,
											"name": "start",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1036,
			"name": "reduce",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/reduce.ts",
					"line": 18,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reduce.ts#L18"
				},
				{
					"fileName": "array/reduce.ts",
					"line": 37,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reduce.ts#L37"
				},
				{
					"fileName": "array/reduce.ts",
					"line": 42,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reduce.ts#L42"
				},
				{
					"fileName": "array/reduce.ts",
					"line": 59,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reduce.ts#L59"
				}
			],
			"signatures": [
				{
					"id": 1037,
					"name": "reduce",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.reduce(items, fn, initialValue)\n   P.reduce.indexed(items, fn, initialValue)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.reduce([1, 2, 3, 4, 5], (acc, x) => acc + x, 100) // => 115\n   P.reduce.indexed([1, 2, 3, 4, 5], (acc, x, i, array) => acc + x, 100) // => 115"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/reduce.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reduce.ts#L18"
						}
					],
					"typeParameter": [
						{
							"id": 1038,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 1039,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1040,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array to reduce"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 1041,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the callback function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1042,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/reduce.ts",
											"line": 20,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reduce.ts#L20"
										}
									],
									"signatures": [
										{
											"id": 1043,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/reduce.ts",
													"line": 20,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reduce.ts#L20"
												}
											],
											"parameters": [
												{
													"id": 1044,
													"name": "acc",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "K",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 1045,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "K",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 1046,
							"name": "initialValue",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the initial value to use as an accumulator value in the callback function"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "K",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 1047,
					"name": "reduce",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.reduce(fn, initialValue)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe([1, 2, 3, 4, 5], P.reduce((acc, x) => acc + x, 100)) // => 115\n   P.pipe([1, 2, 3, 4, 5], P.reduce.indexed((acc, x, i, array) => acc + x, 100)) // => 115"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/reduce.ts",
							"line": 37,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reduce.ts#L37"
						}
					],
					"typeParameter": [
						{
							"id": 1048,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 1049,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1050,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the callback function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1051,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/reduce.ts",
											"line": 38,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reduce.ts#L38"
										}
									],
									"signatures": [
										{
											"id": 1052,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/reduce.ts",
													"line": 38,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reduce.ts#L38"
												}
											],
											"parameters": [
												{
													"id": 1053,
													"name": "acc",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "K",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 1054,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "K",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 1055,
							"name": "initialValue",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the initial value to use as an accumulator value in the callback function"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1056,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/reduce.ts",
									"line": 40,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reduce.ts#L40"
								}
							],
							"signatures": [
								{
									"id": 1057,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1058,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "K",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1087,
			"name": "reject",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/reject.ts",
					"line": 22,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reject.ts#L22"
				},
				{
					"fileName": "array/reject.ts",
					"line": 41,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reject.ts#L41"
				},
				{
					"fileName": "array/reject.ts",
					"line": 45,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reject.ts#L45"
				},
				{
					"fileName": "array/reject.ts",
					"line": 78,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reject.ts#L78"
				}
			],
			"signatures": [
				{
					"id": 1088,
					"name": "reject",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Reject the elements of an array that meet the condition specified in a callback function."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.reject(array, fn)\n   P.reject.indexed(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.reject([1, 2, 3], x => x % 2 === 0) // => [1, 3]\n   P.reject.indexed([1, 2, 3], (x, i, array) => x % 2 === 0) // => [1, 3]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/reject.ts",
							"line": 22,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reject.ts#L22"
						}
					],
					"typeParameter": [
						{
							"id": 1089,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1090,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The array to reject."
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 1091,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the callback function."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 1092,
					"name": "reject",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Reject the elements of an array that meet the condition specified in a callback function."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.reject(array, fn)\n   P.reject.indexed(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.reject([1, 2, 3], x => x % 2 === 0) // => [1, 3]\n   P.reject.indexed([1, 2, 3], (x, i, array) => x % 2 === 0) // => [1, 3]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/reject.ts",
							"line": 41,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reject.ts#L41"
						}
					],
					"typeParameter": [
						{
							"id": 1093,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1094,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the callback function."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "Pred"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Pred",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1095,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/reject.ts",
									"line": 43,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reject.ts#L43"
								}
							],
							"signatures": [
								{
									"id": 1096,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1097,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1130,
			"name": "reverse",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/reverse.ts",
					"line": 26,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reverse.ts#L26"
				},
				{
					"fileName": "array/reverse.ts",
					"line": 37,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reverse.ts#L37"
				},
				{
					"fileName": "array/reverse.ts",
					"line": 41,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reverse.ts#L41"
				}
			],
			"signatures": [
				{
					"id": 1131,
					"name": "reverse",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Reverses array."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.reverse(arr);"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.reverse([1, 2, 3]) // [3, 2, 1]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/reverse.ts",
							"line": 26,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reverse.ts#L26"
						}
					],
					"typeParameter": [
						{
							"id": 1132,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							}
						}
					],
					"parameters": [
						{
							"id": 1133,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "lib/src/array/reverse.ts",
							"qualifiedName": "Reverse"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						],
						"name": "Reverse",
						"package": "@vinicunca/perkakas"
					}
				},
				{
					"id": 1134,
					"name": "reverse",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Reverses array."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.reverse()(array);"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.reverse()([1, 2, 3]) // [3, 2, 1]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/reverse.ts",
							"line": 37,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reverse.ts#L37"
						}
					],
					"typeParameter": [
						{
							"id": 1135,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1136,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/reverse.ts",
									"line": 37,
									"character": 61,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/reverse.ts#L37"
								}
							],
							"signatures": [
								{
									"id": 1137,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1138,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "lib/src/array/reverse.ts",
											"qualifiedName": "Reverse"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "Reverse",
										"package": "@vinicunca/perkakas"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1139,
			"name": "sample",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/sample.ts",
					"line": 71,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sample.ts#L71"
				},
				{
					"fileName": "array/sample.ts",
					"line": 97,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sample.ts#L97"
				},
				{
					"fileName": "array/sample.ts",
					"line": 101,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sample.ts#L101"
				}
			],
			"signatures": [
				{
					"id": 1140,
					"name": "sample",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a random subset of size "
							},
							{
								"kind": "code",
								"text": "`sampleSize`"
							},
							{
								"kind": "text",
								"text": " from "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": ".\n\nMaintains and infers most of the typing information that could be passed\nalong to the output. This means that when using tuples, the output will be\na tuple too, and when using literals, those literals would be preserved.\n\nThe items in the result are kept in the same order as they are in the input.\nIf you need to get a shuffled response you can pipe the shuffle function\nafter this one."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.sample(array, sampleSize)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.sample([\"hello\", \"world\"], 1); // => [\"hello\"] // typed string[]\n   P.sample([\"hello\", \"world\"] as const, 1); // => [\"world\"] // typed [\"hello\" | \"world\"]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/sample.ts",
							"line": 71,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sample.ts#L71"
						}
					],
					"typeParameter": [
						{
							"id": 1141,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "IterableContainer"
								},
								"name": "IterableContainer",
								"package": "@vinicunca/perkakas"
							}
						},
						{
							"id": 1142,
							"name": "N",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"parameters": [
						{
							"id": 1143,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 1144,
							"name": "sampleSize",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the number of elements to take"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "N",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "lib/src/array/sample.ts",
							"qualifiedName": "Sampled"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "N",
								"refersToTypeParameter": true
							}
						],
						"name": "Sampled",
						"package": "@vinicunca/perkakas"
					}
				},
				{
					"id": 1145,
					"name": "sample",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a random subset of size "
							},
							{
								"kind": "code",
								"text": "`sampleSize`"
							},
							{
								"kind": "text",
								"text": " from "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": ".\n\nMaintains and infers most of the typing information that could be passed\nalong to the output. This means that when using tuples, the output will be\na tuple too, and when using literals, those literals would be preserved.\n\nThe items in the result are kept in the same order as they are in the input.\nIf you need to get a shuffled response you can pipe the shuffle function\nafter this one."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.sample(sampleSize)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.sample(1)([\"hello\", \"world\"]); // => [\"hello\"] // typed string[]\n   P.sample(1)([\"hello\", \"world\"] as const); // => [\"world\"] // typed [\"hello\" | \"world\"]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/sample.ts",
							"line": 97,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sample.ts#L97"
						}
					],
					"typeParameter": [
						{
							"id": 1146,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/types.ts",
									"qualifiedName": "IterableContainer"
								},
								"name": "IterableContainer",
								"package": "@vinicunca/perkakas"
							}
						},
						{
							"id": 1147,
							"name": "N",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"parameters": [
						{
							"id": 1148,
							"name": "sampleSize",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the number of elements to take"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "N",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1149,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/sample.ts",
									"line": 99,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sample.ts#L99"
								}
							],
							"signatures": [
								{
									"id": 1150,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1151,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "lib/src/array/sample.ts",
											"qualifiedName": "Sampled"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "N",
												"refersToTypeParameter": true
											}
										],
										"name": "Sampled",
										"package": "@vinicunca/perkakas"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2655,
			"name": "set",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/set.ts",
					"line": 15,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/set.ts#L15"
				},
				{
					"fileName": "object/set.ts",
					"line": 28,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/set.ts#L28"
				},
				{
					"fileName": "object/set.ts",
					"line": 30,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/set.ts#L30"
				}
			],
			"signatures": [
				{
					"id": 2656,
					"name": "set",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " at "
							},
							{
								"kind": "code",
								"text": "`prop`"
							},
							{
								"kind": "text",
								"text": " of "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.set(obj, prop, value)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.set({ a: 1 }, 'a', 2) // => { a: 2 }"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/set.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/set.ts#L15"
						}
					],
					"typeParameter": [
						{
							"id": 2657,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 2658,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 2659,
							"name": "obj",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the target method"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2660,
							"name": "prop",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the property name"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2661,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the value to set"
									}
								]
							},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": -1,
									"name": "K",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 2662,
					"name": "set",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " at "
							},
							{
								"kind": "code",
								"text": "`prop`"
							},
							{
								"kind": "text",
								"text": " of "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.set(prop, value)(obj)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe({ a: 1 }, P.set('a', 2)) // => { a: 2 }"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/set.ts",
							"line": 28,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/set.ts#L28"
						}
					],
					"typeParameter": [
						{
							"id": 2663,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 2664,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 2665,
							"name": "prop",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the property name"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2666,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the value to set"
									}
								]
							},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": -1,
									"name": "K",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2667,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/set.ts",
									"line": 28,
									"character": 65,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/set.ts#L28"
								}
							],
							"signatures": [
								{
									"id": 2668,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2669,
											"name": "obj",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2670,
			"name": "setPath",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/set-path.ts",
					"line": 17,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/set-path.ts#L17"
				},
				{
					"fileName": "object/set-path.ts",
					"line": 34,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/set-path.ts#L34"
				},
				{
					"fileName": "object/set-path.ts",
					"line": 39,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/set-path.ts#L39"
				}
			],
			"signatures": [
				{
					"id": 2671,
					"name": "setPath",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the value at "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": " of "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": ". "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": " can be an array or a path string."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.setPath(obj, path, value)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.setPath({ a: { b: 1 } }, ['a', 'b'], 2) // => { a: { b: 2 } }"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/set-path.ts",
							"line": 17,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/set-path.ts#L17"
						}
					],
					"typeParameter": [
						{
							"id": 2672,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 2673,
							"name": "TPath",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "PropertyKey"
									},
									"name": "PropertyKey",
									"package": "typescript"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 2674,
							"name": "object",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the target method"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2675,
							"name": "path",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the property name"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/narrow.ts",
									"qualifiedName": "Narrow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TPath",
										"refersToTypeParameter": true
									}
								],
								"name": "Narrow",
								"package": "@vinicunca/perkakas"
							}
						},
						{
							"id": 2676,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the value to set"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/paths.ts",
									"qualifiedName": "ValueAtPath"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "TPath",
										"refersToTypeParameter": true
									}
								],
								"name": "ValueAtPath",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 2677,
					"name": "setPath",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the value at "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": " of "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": ". "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": " can be an array or a path string."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.setPath(path, value)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe({ a: { b: 1 } }, P.setPath(['a', 'b'], 2)) // { a: { b: 2 } }"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/set-path.ts",
							"line": 34,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/set-path.ts#L34"
						}
					],
					"typeParameter": [
						{
							"id": 2678,
							"name": "TPath",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "PropertyKey"
									},
									"name": "PropertyKey",
									"package": "typescript"
								}
							}
						},
						{
							"id": 2679,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2680,
							"name": "path",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the property name"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/utils/narrow.ts",
									"qualifiedName": "Narrow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TPath",
										"refersToTypeParameter": true
									}
								],
								"name": "Narrow",
								"package": "@vinicunca/perkakas"
							}
						},
						{
							"id": 2681,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the value to set"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "Value",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2682,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/set-path.ts",
									"line": 37,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/set-path.ts#L37"
								}
							],
							"signatures": [
								{
									"id": 2683,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 2685,
											"name": "Obj",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2684,
											"name": "object",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "lib/src/utils/paths.ts",
													"qualifiedName": "SupportsValueAtPath"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "Obj",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "TPath",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "Value",
														"refersToTypeParameter": true
													}
												],
												"name": "SupportsValueAtPath",
												"package": "@vinicunca/perkakas"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "Obj",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1152,
			"name": "shuffle",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/shuffle.ts",
					"line": 13,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/shuffle.ts#L13"
				},
				{
					"fileName": "array/shuffle.ts",
					"line": 24,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/shuffle.ts#L24"
				},
				{
					"fileName": "array/shuffle.ts",
					"line": 26,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/shuffle.ts#L26"
				}
			],
			"signatures": [
				{
					"id": 1153,
					"name": "shuffle",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Shuffles the input array, returning a new array with the same elements in a random order."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.shuffle(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.shuffle([4, 2, 7, 5]) // => [7, 5, 4, 2]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/shuffle.ts",
							"line": 13,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/shuffle.ts#L13"
						}
					],
					"typeParameter": [
						{
							"id": 1154,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1155,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array to shuffle"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 1156,
					"name": "shuffle",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Shuffles the input array, returning a new array with the same elements in a random order."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.shuffle()(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe([4, 2, 7, 5], P.shuffle()) // => [7, 5, 4, 2]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/shuffle.ts",
							"line": 24,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/shuffle.ts#L24"
						}
					],
					"typeParameter": [
						{
							"id": 1157,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1158,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/shuffle.ts",
									"line": 24,
									"character": 30,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/shuffle.ts#L24"
								}
							],
							"signatures": [
								{
									"id": 1159,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1160,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1161,
			"name": "sort",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/sort.ts",
					"line": 23,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort.ts#L23"
				},
				{
					"fileName": "array/sort.ts",
					"line": 46,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort.ts#L46"
				},
				{
					"fileName": "array/sort.ts",
					"line": 50,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort.ts#L50"
				},
				{
					"fileName": "array/sort.ts",
					"line": 75,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort.ts#L75"
				}
			],
			"signatures": [
				{
					"id": 1162,
					"name": "sort",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sorts an array. The comparator function should accept two values at a time and return a negative number if the first value is smaller, a positive number if it's larger, and zero if they are equal.\nSorting is based on a native "
							},
							{
								"kind": "code",
								"text": "`sort`"
							},
							{
								"kind": "text",
								"text": " function. It's not guaranteed to be stable.\n\nIf the input array is more complex (non-empty array, tuple, etc...) use the\nstrict mode to maintain it's shape."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.sort(items, cmp)\n   P.sort.strict(items, cmp)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.sort([4, 2, 7, 5], (a, b) => a - b) // => [2, 4, 5, 7] typed Array<number>\n   P.sort.strict([4, 2] as [number, number], (a, b) => a - b) // [2, 4] typed [number, number]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@strict",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/sort.ts",
							"line": 23,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort.ts#L23"
						}
					],
					"typeParameter": [
						{
							"id": 1163,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1164,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array to sort"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 1165,
							"name": "cmp",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the comparator function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1166,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/sort.ts",
											"line": 25,
											"character": 7,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort.ts#L25"
										}
									],
									"signatures": [
										{
											"id": 1167,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/sort.ts",
													"line": 25,
													"character": 7,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort.ts#L25"
												}
											],
											"parameters": [
												{
													"id": 1168,
													"name": "a",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 1169,
													"name": "b",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 1170,
					"name": "sort",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sorts an array. The comparator function should accept two values at a time and return a negative number if the first value is smaller, a positive number if it's larger, and zero if they are equal.\nSorting is based on a native "
							},
							{
								"kind": "code",
								"text": "`sort`"
							},
							{
								"kind": "text",
								"text": " function. It's not guaranteed to be stable.\n\nIf the input array is more complex (non-empty array, tuple, etc...) use the\nstrict mode to maintain it's shape."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.sort(cmp)(items)\n   P.sort.strict(cmp)(items)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe([4, 2, 7, 5], P.sort((a, b) => a - b)) // => [2, 4, 5, 7] typed Array<number>\n   P.pipe([4, 2] as [number, number], P.sort.strict((a, b) => a - b)) // => [2, 4] typed [number, number]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@strict",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/sort.ts",
							"line": 46,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort.ts#L46"
						}
					],
					"typeParameter": [
						{
							"id": 1171,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1172,
							"name": "cmp",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the comparator function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1173,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/sort.ts",
											"line": 47,
											"character": 7,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort.ts#L47"
										}
									],
									"signatures": [
										{
											"id": 1174,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/sort.ts",
													"line": 47,
													"character": 7,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort.ts#L47"
												}
											],
											"parameters": [
												{
													"id": 1175,
													"name": "a",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 1176,
													"name": "b",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1177,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/sort.ts",
									"line": 48,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort.ts#L48"
								}
							],
							"signatures": [
								{
									"id": 1178,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1179,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1200,
			"name": "sortBy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/sort-by.ts",
					"line": 47,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort-by.ts#L47"
				},
				{
					"fileName": "array/sort-by.ts",
					"line": 97,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort-by.ts#L97"
				},
				{
					"fileName": "array/sort-by.ts",
					"line": 102,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort-by.ts#L102"
				},
				{
					"fileName": "array/sort-by.ts",
					"line": 193,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort-by.ts#L193"
				}
			],
			"signatures": [
				{
					"id": 1201,
					"name": "sortBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sorts the list according to the supplied functions and directions.\nSorting is based on a native "
							},
							{
								"kind": "code",
								"text": "`sort`"
							},
							{
								"kind": "text",
								"text": " function. It's not guaranteed to be stable.\n\nDirections are applied to functions in order and default to ascending if not specified.\n\nIf the input array is more complex (non-empty array, tuple, etc...) use the\nstrict mode to maintain it's shape."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.sortBy(sortRule, ...additionalSortRules)(array)\n   P.sortBy.strict(sortRule, ...additionalSortRules)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     [{ a: 1 }, { a: 3 }, { a: 7 }, { a: 2 }],\n     P.sortBy(x => x.a)\n   ) // => [{ a: 1 }, { a: 2 }, { a: 3 }, { a: 7 }] typed Array<{a:number}>\n   P.pipe(\n     [{ a: 1 }, { a: 3 }] as const,\n     P.sortBy.strict(x => x.a)\n   ) // => [{ a: 1 }, { a: 3 }] typed [{a: 1 | 3}, {a: 1 | 3}]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@strict",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/sort-by.ts",
							"line": 47,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort-by.ts#L47"
						}
					],
					"typeParameter": [
						{
							"id": 1202,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1203,
							"name": "sortRules",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "main sort rule"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "tuple",
									"elements": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "lib/src/array/sort-by.ts",
												"qualifiedName": "SortRule"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											],
											"name": "SortRule",
											"package": "@vinicunca/perkakas"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "lib/src/array/sort-by.ts",
												"qualifiedName": "SortRule"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											],
											"name": "SortRule",
											"package": "@vinicunca/perkakas"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1204,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/sort-by.ts",
									"line": 49,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort-by.ts#L49"
								}
							],
							"signatures": [
								{
									"id": 1205,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1206,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 1207,
					"name": "sortBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sorts the list according to the supplied functions and directions.\nSorting is based on a native "
							},
							{
								"kind": "code",
								"text": "`sort`"
							},
							{
								"kind": "text",
								"text": " function. It's not guaranteed to be stable.\n\nDirections are applied to functions in order and default to ascending if not specified.\n\nIf the input array is more complex (non-empty array, tuple, etc...) use the\nstrict mode to maintain it's shape."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.sortBy(array, sortRule, ...additionalSortRules)\n   P.sortBy.strict(array, sortRule, ...additionalSortRules)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.sortBy(\n     [{ a: 1 }, { a: 3 }, { a: 7 }, { a: 2 }],\n     x => x.a\n   )\n   // => [{ a: 1 }, { a: 2 }, { a: 3 }, { a: 7 }] typed Array<{a:number}>\n\n   P.sortBy(\n    [\n      {color: 'red', weight: 2},\n      {color: 'blue', weight: 3},\n      {color: 'green', weight: 1},\n      {color: 'purple', weight: 1},\n    ],\n     [x => x.weight, 'asc'], x => x.color\n   )\n   // =>\n   //   {color: 'green', weight: 1},\n   //   {color: 'purple', weight: 1},\n   //   {color: 'red', weight: 2},\n   //   {color: 'blue', weight: 3},\n   // typed Array<{color: string, weight: number}>\n\n   P.sortBy.strict(\n     [{ a: 1 }, { a: 3 }] as const,\n     x => x.a\n   )\n   // => [{ a: 1 }, { a: 3 }] typed [{a: 1 | 3}, {a: 1 | 3}]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@strict",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/sort-by.ts",
							"line": 97,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sort-by.ts#L97"
						}
					],
					"typeParameter": [
						{
							"id": 1208,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1209,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array to sort"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 1210,
							"name": "sortRules",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "main sort rule"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "tuple",
									"elements": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "lib/src/array/sort-by.ts",
												"qualifiedName": "SortRule"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											],
											"name": "SortRule",
											"package": "@vinicunca/perkakas"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "lib/src/array/sort-by.ts",
												"qualifiedName": "SortRule"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											],
											"name": "SortRule",
											"package": "@vinicunca/perkakas"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				}
			]
		},
		{
			"id": 1223,
			"name": "splitAt",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/split-at.ts",
					"line": 15,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-at.ts#L15"
				},
				{
					"fileName": "array/split-at.ts",
					"line": 31,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-at.ts#L31"
				},
				{
					"fileName": "array/split-at.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-at.ts#L35"
				}
			],
			"signatures": [
				{
					"id": 1224,
					"name": "splitAt",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Splits a given array at a given index."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.splitAt(array, index)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.splitAt([1, 2, 3], 1) // => [[1], [2, 3]]\n   P.splitAt([1, 2, 3, 4, 5], -1) // => [[1, 2, 3, 4], [5]]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/split-at.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-at.ts#L15"
						}
					],
					"typeParameter": [
						{
							"id": 1225,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1226,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array to split"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 1227,
							"name": "index",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the index to split at"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							}
						]
					}
				},
				{
					"id": 1228,
					"name": "splitAt",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Splits a given array at a given index."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.splitAt(index)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.splitAt(1)([1, 2, 3]) // => [[1], [2, 3]]\n   P.splitAt(-1)([1, 2, 3, 4, 5]) // => [[1, 2, 3, 4], [5]]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/split-at.ts",
							"line": 31,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-at.ts#L31"
						}
					],
					"typeParameter": [
						{
							"id": 1229,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1230,
							"name": "index",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the index to split at"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1231,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/split-at.ts",
									"line": 33,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-at.ts#L33"
								}
							],
							"signatures": [
								{
									"id": 1232,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1233,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1234,
			"name": "splitWhen",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/split-when.ts",
					"line": 15,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-when.ts#L15"
				},
				{
					"fileName": "array/split-when.ts",
					"line": 30,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-when.ts#L30"
				},
				{
					"fileName": "array/split-when.ts",
					"line": 34,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-when.ts#L34"
				}
			],
			"signatures": [
				{
					"id": 1235,
					"name": "splitWhen",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Splits a given array at the first index where the given predicate returns true."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.splitWhen(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.splitWhen([1, 2, 3], x => x === 2) // => [[1], [2, 3]]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/split-when.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-when.ts#L15"
						}
					],
					"typeParameter": [
						{
							"id": 1236,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1237,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array to split"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 1238,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1239,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/split-when.ts",
											"line": 17,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-when.ts#L17"
										}
									],
									"signatures": [
										{
											"id": 1240,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/split-when.ts",
													"line": 17,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-when.ts#L17"
												}
											],
											"parameters": [
												{
													"id": 1241,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							}
						]
					}
				},
				{
					"id": 1242,
					"name": "splitWhen",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Splits a given array at an index where the given predicate returns true."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.splitWhen(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.splitWhen(x => x === 2)([1, 2, 3]) // => [[1], [2, 3]]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/split-when.ts",
							"line": 30,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-when.ts#L30"
						}
					],
					"typeParameter": [
						{
							"id": 1243,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1244,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1245,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/split-when.ts",
											"line": 31,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-when.ts#L31"
										}
									],
									"signatures": [
										{
											"id": 1246,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/split-when.ts",
													"line": 31,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-when.ts#L31"
												}
											],
											"parameters": [
												{
													"id": 1247,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1248,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/split-when.ts",
									"line": 32,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/split-when.ts#L32"
								}
							],
							"signatures": [
								{
									"id": 1249,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1250,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2769,
			"name": "stringToPath",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "string/string-to-path.ts",
					"line": 9,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/string/string-to-path.ts#L9"
				}
			],
			"signatures": [
				{
					"id": 2770,
					"name": "stringToPath",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Converts a path string to an array of keys."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.stringToPathArray(path)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.stringToPathArray('a.b[0].c') // => ['a', 'b', 0, 'c']"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "string/string-to-path.ts",
							"line": 9,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/string/string-to-path.ts#L9"
						}
					],
					"typeParameter": [
						{
							"id": 2771,
							"name": "Path",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"parameters": [
						{
							"id": 2772,
							"name": "path",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "a string path"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "Path",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "lib/src/string/string-to-path.ts",
							"qualifiedName": "StringToPath"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "Path",
								"refersToTypeParameter": true
							}
						],
						"name": "StringToPath",
						"package": "@vinicunca/perkakas"
					}
				}
			]
		},
		{
			"id": 1251,
			"name": "sumBy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/sum-by.ts",
					"line": 31,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sum-by.ts#L31"
				},
				{
					"fileName": "array/sum-by.ts",
					"line": 52,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sum-by.ts#L52"
				},
				{
					"fileName": "array/sum-by.ts",
					"line": 57,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sum-by.ts#L57"
				},
				{
					"fileName": "array/sum-by.ts",
					"line": 61,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sum-by.ts#L61"
				}
			],
			"signatures": [
				{
					"id": 1252,
					"name": "sumBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the sum of the elements of an array using the provided predicate."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.sumBy(fn)(array)\n  P.sumBy.indexed(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe(\n     [{a: 5}, {a: 1}, {a: 3}],\n     P.sumBy(x => x.a)\n   ) // 9"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/sum-by.ts",
							"line": 31,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sum-by.ts#L31"
						}
					],
					"typeParameter": [
						{
							"id": 1253,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1254,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "predicate function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1255,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/sum-by.ts",
											"line": 32,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sum-by.ts#L32"
										}
									],
									"signatures": [
										{
											"id": 1256,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/sum-by.ts",
													"line": 32,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sum-by.ts#L32"
												}
											],
											"parameters": [
												{
													"id": 1257,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1258,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/sum-by.ts",
									"line": 33,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sum-by.ts#L33"
								}
							],
							"signatures": [
								{
									"id": 1259,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1260,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				},
				{
					"id": 1261,
					"name": "sumBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the sum of the elements of an array using the provided predicate."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.sumBy(array, fn)\n  P.sumBy.indexed(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.sumBy(\n     [{a: 5}, {a: 1}, {a: 3}],\n     x => x.a\n   ) // 9"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@indexed",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/sum-by.ts",
							"line": 52,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sum-by.ts#L52"
						}
					],
					"typeParameter": [
						{
							"id": 1262,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1263,
							"name": "items",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 1264,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "predicate function"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1265,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/sum-by.ts",
											"line": 54,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sum-by.ts#L54"
										}
									],
									"signatures": [
										{
											"id": 1266,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/sum-by.ts",
													"line": 54,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/sum-by.ts#L54"
												}
											],
											"parameters": [
												{
													"id": 1267,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 1280,
			"name": "swapIndices",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/swap-indices.ts",
					"line": 127,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/swap-indices.ts#L127"
				},
				{
					"fileName": "array/swap-indices.ts",
					"line": 148,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/swap-indices.ts#L148"
				},
				{
					"fileName": "array/swap-indices.ts",
					"line": 153,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/swap-indices.ts#L153"
				}
			],
			"signatures": [
				{
					"id": 1281,
					"name": "swapIndices",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Swaps the positions of two elements in an array or string at the provided indices.\n\nNegative indices are supported and would be treated as an offset from the end of the array. The resulting type thought would be less strict than when using positive indices.\n\nIf either index is out of bounds the result would be a shallow copy of the input, as-is."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "swapIndices(data, index1, index2)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "swapIndices(['a', 'b', 'c'], 0, 1) // => ['b', 'a', 'c']\n  swapIndices(['a', 'b', 'c'], 1, -1) // => ['c', 'b', 'a']\n  swapIndices('abc', 0, 1) // => 'bac'"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Returns the manipulated array or string."
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/swap-indices.ts",
							"line": 127,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/swap-indices.ts#L127"
						}
					],
					"typeParameter": [
						{
							"id": 1282,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "lib/src/utils/types.ts",
											"qualifiedName": "IterableContainer"
										},
										"name": "IterableContainer",
										"package": "@vinicunca/perkakas"
									}
								]
							}
						},
						{
							"id": 1283,
							"name": "K1",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1284,
							"name": "K2",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"parameters": [
						{
							"id": 1285,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the item to be manipulated. This can be an array, or a string."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 1286,
							"name": "index1",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the first index"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K1",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 1287,
							"name": "index2",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second index"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K2",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "lib/src/array/swap-indices.ts",
							"qualifiedName": "SwappedIndices"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "K1",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "K2",
								"refersToTypeParameter": true
							}
						],
						"name": "SwappedIndices",
						"package": "@vinicunca/perkakas"
					}
				},
				{
					"id": 1288,
					"name": "swapIndices",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "swapIndices(index1, index2)(data)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "swapIndices(0, 1)(['a', 'b', 'c']) // => ['b', 'a', 'c']\n  swapIndices(0, -1)('abc') // => 'cba'"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Returns the manipulated array or string."
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/swap-indices.ts",
							"line": 148,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/swap-indices.ts#L148"
						}
					],
					"typeParameter": [
						{
							"id": 1289,
							"name": "K1",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1290,
							"name": "K2",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"parameters": [
						{
							"id": 1291,
							"name": "index1",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the first index"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K1",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 1292,
							"name": "index2",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second index"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K2",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1293,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/swap-indices.ts",
									"line": 151,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/swap-indices.ts#L151"
								}
							],
							"signatures": [
								{
									"id": 1294,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1296,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "lib/src/utils/types.ts",
															"qualifiedName": "IterableContainer"
														},
														"name": "IterableContainer",
														"package": "@vinicunca/perkakas"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1295,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "lib/src/array/swap-indices.ts",
											"qualifiedName": "SwappedIndices"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "K1",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "K2",
												"refersToTypeParameter": true
											}
										],
										"name": "SwappedIndices",
										"package": "@vinicunca/perkakas"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2691,
			"name": "swapProps",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/swap-props.ts",
					"line": 26,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/swap-props.ts#L26"
				},
				{
					"fileName": "object/swap-props.ts",
					"line": 50,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/swap-props.ts#L50"
				},
				{
					"fileName": "object/swap-props.ts",
					"line": 56,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/swap-props.ts#L56"
				}
			],
			"signatures": [
				{
					"id": 2692,
					"name": "swapProps",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Swaps the positions of two properties in an object based on the provided keys."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "swap(data, key1, key2)"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Returns the manipulated object."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "swap({a: 1, b: 2, c: 3}, 'a', 'b') // => {a: 2, b: 1, c: 3}"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/swap-props.ts",
							"line": 26,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/swap-props.ts#L26"
						}
					],
					"typeParameter": [
						{
							"id": 2693,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 2694,
							"name": "K1",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						},
						{
							"id": 2695,
							"name": "K2",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 2696,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the object to be manipulated"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2697,
							"name": "key1",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the first property key"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K1",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2698,
							"name": "key2",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second property key"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K2",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "lib/src/object/swap-props.ts",
							"qualifiedName": "SwappedProps"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "K1",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "K2",
								"refersToTypeParameter": true
							}
						],
						"name": "SwappedProps",
						"package": "@vinicunca/perkakas"
					}
				},
				{
					"id": 2699,
					"name": "swapProps",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Swaps the positions of two properties in an object based on the provided keys."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "swap(key1, key2)(data)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "swap('a', 'b')({a: 1, b: 2, c: 3}) // => {a: 2, b: 1, c: 3}"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Returns the manipulated object."
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/swap-props.ts",
							"line": 50,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/swap-props.ts#L50"
						}
					],
					"typeParameter": [
						{
							"id": 2700,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 2701,
							"name": "K1",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						},
						{
							"id": 2702,
							"name": "K2",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 2703,
							"name": "key1",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the first property key"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K1",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2704,
							"name": "key2",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second property key"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "K2",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2705,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "object/swap-props.ts",
									"line": 54,
									"character": 23,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/swap-props.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 2706,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2707,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "lib/src/object/swap-props.ts",
											"qualifiedName": "SwappedProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "K1",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "K2",
												"refersToTypeParameter": true
											}
										],
										"name": "SwappedProps",
										"package": "@vinicunca/perkakas"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1297,
			"name": "take",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/take.ts",
					"line": 17,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take.ts#L17"
				},
				{
					"fileName": "array/take.ts",
					"line": 30,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take.ts#L30"
				},
				{
					"fileName": "array/take.ts",
					"line": 32,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take.ts#L32"
				},
				{
					"fileName": "array/take.ts",
					"line": 40,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take.ts#L40"
				}
			],
			"signatures": [
				{
					"id": 1298,
					"name": "take",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the first "
							},
							{
								"kind": "code",
								"text": "`n`"
							},
							{
								"kind": "text",
								"text": " elements of "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.take(array, n)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.take([1, 2, 3, 4, 3, 2, 1], 3) // => [1, 2, 3]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/take.ts",
							"line": 17,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take.ts#L17"
						}
					],
					"typeParameter": [
						{
							"id": 1299,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1300,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 1301,
							"name": "n",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the number of elements to take"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 1302,
					"name": "take",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the first "
							},
							{
								"kind": "code",
								"text": "`n`"
							},
							{
								"kind": "text",
								"text": " elements of "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.take(n)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe([1, 2, 3, 4, 3, 2, 1], P.take(n)) // => [1, 2, 3]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/take.ts",
							"line": 30,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take.ts#L30"
						}
					],
					"typeParameter": [
						{
							"id": 1303,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1304,
							"name": "n",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the number of elements to take"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1305,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/take.ts",
									"line": 30,
									"character": 36,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take.ts#L30"
								}
							],
							"signatures": [
								{
									"id": 1306,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1307,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1316,
			"name": "takeWhile",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/take-while.ts",
					"line": 14,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take-while.ts#L14"
				},
				{
					"fileName": "array/take-while.ts",
					"line": 29,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take-while.ts#L29"
				},
				{
					"fileName": "array/take-while.ts",
					"line": 33,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take-while.ts#L33"
				}
			],
			"signatures": [
				{
					"id": 1317,
					"name": "takeWhile",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns elements from the array until predicate returns false."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.takeWhile(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.takeWhile([1, 2, 3, 4, 3, 2, 1], x => x !== 4) // => [1, 2, 3]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/take-while.ts",
							"line": 14,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take-while.ts#L14"
						}
					],
					"typeParameter": [
						{
							"id": 1318,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1319,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 1320,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1321,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/take-while.ts",
											"line": 16,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take-while.ts#L16"
										}
									],
									"signatures": [
										{
											"id": 1322,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/take-while.ts",
													"line": 16,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take-while.ts#L16"
												}
											],
											"parameters": [
												{
													"id": 1323,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 1324,
					"name": "takeWhile",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns elements from the array until predicate returns false."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.takeWhile(fn)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.pipe([1, 2, 3, 4, 3, 2, 1], P.takeWhile(x => x !== 4))  // => [1, 2, 3]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/take-while.ts",
							"line": 29,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take-while.ts#L29"
						}
					],
					"typeParameter": [
						{
							"id": 1325,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1326,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the predicate"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1327,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/take-while.ts",
											"line": 30,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take-while.ts#L30"
										}
									],
									"signatures": [
										{
											"id": 1328,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/take-while.ts",
													"line": 30,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take-while.ts#L30"
												}
											],
											"parameters": [
												{
													"id": 1329,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1330,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/take-while.ts",
									"line": 31,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/take-while.ts#L31"
								}
							],
							"signatures": [
								{
									"id": 1331,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1332,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2708,
			"name": "toPairs",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "object/to-pairs.ts",
					"line": 13,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/to-pairs.ts#L13"
				},
				{
					"fileName": "object/to-pairs.ts",
					"line": 31,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/to-pairs.ts#L31"
				}
			],
			"signatures": [
				{
					"id": 2709,
					"name": "toPairs",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns an array of key/values of the enumerable properties of an object."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.toPairs(object)\n   P.toPairs.strict(object)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.toPairs({ a: 1, b: 2, c: 3 }) // => [['a', 1], ['b', 2], ['c', 3]]\n   P.toPairs.strict({ a: 1 } as const) // => [['a', 1]] typed Array<['a', 1]>"
									}
								]
							},
							{
								"tag": "@strict",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "object/to-pairs.ts",
							"line": 13,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/object/to-pairs.ts#L13"
						}
					],
					"typeParameter": [
						{
							"id": 2710,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2711,
							"name": "object",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "tuple",
							"elements": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2775,
			"name": "type",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "type/type.ts",
					"line": 19,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/type/type.ts#L19"
				}
			],
			"signatures": [
				{
					"id": 2776,
					"name": "type",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gives a single-word string description of the (native) type of a value, returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not attempt to distinguish user Object types any further, reporting them all as 'Object'."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.type(obj)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.type({}); //=> \"Object\"\n   P.type(1); //=> \"Number\"\n   P.type(false); //=> \"Boolean\"\n   P.type('s'); //=> \"String\"\n   P.type(null); //=> \"Null\"\n   P.type([]); //=> \"Array\"\n   P.type(/[A-z]/); //=> \"RegExp\"\n   P.type(() => {}); //=> \"Function\"\n   P.type(undefined); //=> \"Undefined\""
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "type/type.ts",
							"line": 19,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/type/type.ts#L19"
						}
					],
					"parameters": [
						{
							"id": 2777,
							"name": "val",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 1333,
			"name": "uniq",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/uniq.ts",
					"line": 23,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/uniq.ts#L23"
				}
			],
			"signatures": [
				{
					"id": 1334,
					"name": "uniq",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a new array containing only one copy of each element in the original list.\nElements are compared by reference using Set.\nNote: In "
							},
							{
								"kind": "code",
								"text": "`pipe`"
							},
							{
								"kind": "text",
								"text": ", use "
							},
							{
								"kind": "code",
								"text": "`uniq()`"
							},
							{
								"kind": "text",
								"text": " form instead of "
							},
							{
								"kind": "code",
								"text": "`uniq`"
							},
							{
								"kind": "text",
								"text": ". Otherwise, the inferred type is lost."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.uniq(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.uniq([1, 2, 2, 5, 1, 6, 7]) // => [1, 2, 5, 6, 7]\n   P.pipe(\n     [1, 2, 2, 5, 1, 6, 7], // only 4 iterations\n     P.uniq(),\n     P.take(3)\n   ) // => [1, 2, 5]"
									}
								]
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/uniq.ts",
							"line": 23,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/uniq.ts#L23"
						}
					],
					"typeParameter": [
						{
							"id": 1335,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1336,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				}
			]
		},
		{
			"id": 1348,
			"name": "uniqBy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/uniq-by.ts",
					"line": 30,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/uniq-by.ts#L30"
				}
			],
			"signatures": [
				{
					"id": 1357,
					"name": "uniqBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a new array containing only one copy of each element in the original list transformed by a function.\nElements are compared by reference using Set."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.uniqBy(array, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.uniqBy(\n    [{ n: 1 }, { n: 2 }, { n: 2 }, { n: 5 }, { n: 1 }, { n: 6 }, { n: 7 }],\n    (obj) => obj.n,\n   ) // => [{n: 1}, {n: 2}, {n: 5}, {n: 6}, {n: 7}]\n   P.pipe(\n     [{n: 1}, {n: 2}, {n: 2}, {n: 5}, {n: 1}, {n: 6}, {n: 7}], // only 4 iterations\n     P.uniqBy(obj => obj.n),\n     P.take(3)\n   ) // => [{n: 1}, {n: 2}, {n: 5}]"
									}
								]
							},
							{
								"tag": "@pipeable",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/uniq-by.ts",
							"line": 30,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/uniq-by.ts#L30"
						}
					],
					"typeParameter": [
						{
							"id": 1358,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 1359,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1360,
							"name": "transformer",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1361,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/uniq-by.ts",
											"line": 31,
											"character": 15,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/uniq-by.ts#L31"
										}
									],
									"signatures": [
										{
											"id": 1362,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/uniq-by.ts",
													"line": 31,
													"character": 15,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/uniq-by.ts#L31"
												}
											],
											"parameters": [
												{
													"id": 1363,
													"name": "item",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "K",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1364,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/uniq-by.ts",
									"line": 32,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/uniq-by.ts#L32"
								}
							],
							"signatures": [
								{
									"id": 1365,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1366,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1367,
			"name": "uniqWith",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/uniq-with.ts",
					"line": 23,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/uniq-with.ts#L23"
				},
				{
					"fileName": "array/uniq-with.ts",
					"line": 45,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/uniq-with.ts#L45"
				},
				{
					"fileName": "array/uniq-with.ts",
					"line": 49,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/uniq-with.ts#L49"
				},
				{
					"fileName": "array/uniq-with.ts",
					"line": 77,
					"character": 17,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/uniq-with.ts#L77"
				}
			],
			"signatures": [
				{
					"id": 1368,
					"name": "uniqWith",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a new array containing only one copy of each element in the original list.\nElements are compared by custom comparator isEquals."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.uniqWith(array, isEquals)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.uniqWith(\n     [{a: 1}, {a: 2}, {a: 2}, {a: 5}, {a: 1}, {a: 6}, {a: 7}],\n     P.equals,\n   ) // => [{a: 1}, {a: 2}, {a: 5}, {a: 6}, {a: 7}]"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/uniq-with.ts",
							"line": 23,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/uniq-with.ts#L23"
						}
					],
					"typeParameter": [
						{
							"id": 1369,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1370,
							"name": "array",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 1371,
							"name": "isEquals",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the comparator"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/array/uniq-with.ts",
									"qualifiedName": "IsEquals"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "IsEquals",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 1372,
					"name": "uniqWith",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a new array containing only one copy of each element in the original list.\nElements are compared by custom comparator isEquals."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.uniqWith(isEquals)(array)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.uniqWith(P.equals)(\n     [{a: 1}, {a: 2}, {a: 2}, {a: 5}, {a: 1}, {a: 6}, {a: 7}],\n   ) // => [{a: 1}, {a: 2}, {a: 5}, {a: 6}, {a: 7}]\n   P.pipe(\n     [{a: 1}, {a: 2}, {a: 2}, {a: 5}, {a: 1}, {a: 6}, {a: 7}], // only 4 iterations\n     P.uniqWith(P.equals),\n     P.take(3)\n   ) // => [{a: 1}, {a: 2}, {a: 5}]"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/uniq-with.ts",
							"line": 45,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/uniq-with.ts#L45"
						}
					],
					"typeParameter": [
						{
							"id": 1373,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1374,
							"name": "isEquals",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the comparator"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "lib/src/array/uniq-with.ts",
									"qualifiedName": "IsEquals"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "IsEquals",
								"package": "@vinicunca/perkakas"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1375,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/uniq-with.ts",
									"line": 47,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/uniq-with.ts#L47"
								}
							],
							"signatures": [
								{
									"id": 1376,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1377,
											"name": "array",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1388,
			"name": "zip",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/zip.ts",
					"line": 15,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip.ts#L15"
				},
				{
					"fileName": "array/zip.ts",
					"line": 31,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip.ts#L31"
				},
				{
					"fileName": "array/zip.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip.ts#L35"
				}
			],
			"signatures": [
				{
					"id": 1389,
					"name": "zip",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a new list from two supplied lists by pairing up equally-positioned items.\nThe length of the returned list will match the shortest of the two inputs."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.zip(first, second)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.zip([1, 2], ['a', 'b']) // => [1, 'a'], [2, 'b']"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/zip.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip.ts#L15"
						}
					],
					"typeParameter": [
						{
							"id": 1390,
							"name": "F",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 1391,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1392,
							"name": "first",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the first input list"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "F",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 1393,
							"name": "second",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second input list"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "S",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "tuple",
							"elements": [
								{
									"type": "reference",
									"target": -1,
									"name": "F",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": -1,
									"name": "S",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 1394,
					"name": "zip",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a new list from two supplied lists by pairing up equally-positioned items.\nThe length of the returned list will match the shortest of the two inputs."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.zip(second)(first)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.zip(['a', 'b'])([1, 2]) // => [[1, 'a'], [2, 'b']"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/zip.ts",
							"line": 31,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip.ts#L31"
						}
					],
					"typeParameter": [
						{
							"id": 1395,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1396,
							"name": "second",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second input list"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "S",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1397,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/zip.ts",
									"line": 33,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip.ts#L33"
								}
							],
							"signatures": [
								{
									"id": 1398,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1400,
											"name": "F",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1399,
											"name": "first",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "F",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "tuple",
											"elements": [
												{
													"type": "reference",
													"target": -1,
													"name": "F",
													"refersToTypeParameter": true
												},
												{
													"type": "reference",
													"target": -1,
													"name": "S",
													"refersToTypeParameter": true
												}
											]
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1401,
			"name": "zipObj",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/zip-obj.ts",
					"line": 15,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-obj.ts#L15"
				},
				{
					"fileName": "array/zip-obj.ts",
					"line": 31,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-obj.ts#L31"
				},
				{
					"fileName": "array/zip-obj.ts",
					"line": 37,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-obj.ts#L37"
				}
			],
			"signatures": [
				{
					"id": 1402,
					"name": "zipObj",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a new object from two supplied lists by pairing up equally-positioned items.\nKey/value pairing is truncated to the length of the shorter of the two lists"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.zipObj(first, second)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.zipObj(['a', 'b'], [1, 2]) // => {a: 1, b: 2}"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/zip-obj.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-obj.ts#L15"
						}
					],
					"typeParameter": [
						{
							"id": 1403,
							"name": "F",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						},
						{
							"id": 1404,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1405,
							"name": "first",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the first input list"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "F",
										"refersToTypeParameter": true
									}
								}
							}
						},
						{
							"id": 1406,
							"name": "second",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second input list"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "S",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "F",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "S",
								"refersToTypeParameter": true
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1407,
					"name": "zipObj",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a new object from two supplied lists by pairing up equally-positioned items.\nKey/value pairing is truncated to the length of the shorter of the two lists"
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.zipObj(second)(first)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.zipObj([1, 2])(['a', 'b']) // => {a: 1, b: 2}"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/zip-obj.ts",
							"line": 31,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-obj.ts#L31"
						}
					],
					"typeParameter": [
						{
							"id": 1408,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1409,
							"name": "second",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second input list"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "S",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1410,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/zip-obj.ts",
									"line": 33,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-obj.ts#L33"
								}
							],
							"signatures": [
								{
									"id": 1411,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1413,
											"name": "F",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1412,
											"name": "first",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReadonlyArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "F",
														"refersToTypeParameter": true
													}
												],
												"name": "ReadonlyArray",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "F",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "S",
												"refersToTypeParameter": true
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1414,
			"name": "zipWith",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "array/zip-with.ts",
					"line": 14,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L14"
				},
				{
					"fileName": "array/zip-with.ts",
					"line": 31,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L31"
				},
				{
					"fileName": "array/zip-with.ts",
					"line": 47,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L47"
				},
				{
					"fileName": "array/zip-with.ts",
					"line": 52,
					"character": 16,
					"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L52"
				}
			],
			"signatures": [
				{
					"id": 1415,
					"name": "zipWith",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a new list from two supplied lists by calling the supplied function\nwith the same-positioned element from each list."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.zipWith(first, second, fn)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.zipWith(['1', '2', '3'], ['a', 'b', 'c'], (a, b) => a + b) // => ['1a', '2b', '3c']"
									}
								]
							},
							{
								"tag": "@dataFirst",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/zip-with.ts",
							"line": 14,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L14"
						}
					],
					"typeParameter": [
						{
							"id": 1416,
							"name": "F",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 1417,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 1418,
							"name": "R",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1419,
							"name": "first",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the first input list"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "F",
									"refersToTypeParameter": true
								}
							}
						},
						{
							"id": 1420,
							"name": "second",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second input list"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "S",
									"refersToTypeParameter": true
								}
							}
						},
						{
							"id": 1421,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the function applied to each position of the list"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1422,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/zip-with.ts",
											"line": 17,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L17"
										}
									],
									"signatures": [
										{
											"id": 1423,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/zip-with.ts",
													"line": 17,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L17"
												}
											],
											"parameters": [
												{
													"id": 1424,
													"name": "f",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "F",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 1425,
													"name": "s",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "S",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "R",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "R",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 1426,
					"name": "zipWith",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a new list from two supplied lists by calling the supplied function\nwith the same-positioned element from each list."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.zipWith(fn)(first, second)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.zipWith((a, b) => a + b)(['1', '2', '3'], ['a', 'b', 'c']) // => ['1a', '2b', '3c']"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/zip-with.ts",
							"line": 31,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L31"
						}
					],
					"typeParameter": [
						{
							"id": 1427,
							"name": "F",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 1428,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 1429,
							"name": "R",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1430,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the function applied to each position of the list"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1431,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/zip-with.ts",
											"line": 32,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L32"
										}
									],
									"signatures": [
										{
											"id": 1432,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/zip-with.ts",
													"line": 32,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L32"
												}
											],
											"parameters": [
												{
													"id": 1433,
													"name": "f",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "F",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 1434,
													"name": "s",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "S",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "R",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1435,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/zip-with.ts",
									"line": 33,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L33"
								}
							],
							"signatures": [
								{
									"id": 1436,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1437,
											"name": "first",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "F",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 1438,
											"name": "second",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "S",
													"refersToTypeParameter": true
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "R",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 1439,
					"name": "zipWith",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a new list from two supplied lists by calling the supplied function\nwith the same-positioned element from each list."
							}
						],
						"blockTags": [
							{
								"tag": "@signature",
								"content": [
									{
										"kind": "text",
										"text": "P.zipWith(fn)(first, second)"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "P.zipWith((a, b) => a + b, ['a', 'b', 'c'])(['1', '2', '3']) // => ['1a', '2b', '3c']"
									}
								]
							},
							{
								"tag": "@dataLast",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "array/zip-with.ts",
							"line": 47,
							"character": 16,
							"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L47"
						}
					],
					"typeParameter": [
						{
							"id": 1440,
							"name": "F",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 1441,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 1442,
							"name": "R",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1443,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the function applied to each position of the list"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1444,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "array/zip-with.ts",
											"line": 48,
											"character": 6,
											"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L48"
										}
									],
									"signatures": [
										{
											"id": 1445,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "array/zip-with.ts",
													"line": 48,
													"character": 6,
													"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L48"
												}
											],
											"parameters": [
												{
													"id": 1446,
													"name": "f",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "F",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 1447,
													"name": "s",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "S",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "R",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 1448,
							"name": "second",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the second input list"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "S",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1449,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "array/zip-with.ts",
									"line": 50,
									"character": 3,
									"url": "https://github.com/vinicunca/perkakas/blob/e506992/lib/src/array/zip-with.ts#L50"
								}
							],
							"signatures": [
								{
									"id": 1450,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1451,
											"name": "first",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "F",
													"refersToTypeParameter": true
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "R",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				213
			]
		},
		{
			"title": "Variables",
			"children": [
				2
			]
		},
		{
			"title": "Functions",
			"children": [
				2393,
				24,
				41,
				58,
				2378,
				2410,
				69,
				73,
				86,
				1452,
				134,
				109,
				165,
				154,
				2414,
				184,
				368,
				265,
				345,
				322,
				417,
				486,
				439,
				542,
				527,
				558,
				2423,
				2446,
				599,
				1628,
				647,
				676,
				696,
				2458,
				2293,
				2297,
				2301,
				2304,
				2313,
				2321,
				2325,
				2329,
				2333,
				2337,
				2357,
				2361,
				2365,
				2370,
				2374,
				721,
				737,
				749,
				758,
				2475,
				818,
				2496,
				865,
				894,
				2517,
				923,
				951,
				1632,
				2530,
				2543,
				1634,
				980,
				2564,
				2613,
				2626,
				1642,
				2647,
				2288,
				2766,
				1027,
				1036,
				1087,
				1130,
				1139,
				2655,
				2670,
				1152,
				1161,
				1200,
				1223,
				1234,
				2769,
				1251,
				1280,
				2691,
				1297,
				1316,
				2708,
				2775,
				1333,
				1348,
				1367,
				1388,
				1401,
				1414
			]
		}
	],
	"categories": [
		{
			"title": "Array",
			"children": [
				24,
				41,
				58,
				69,
				73,
				86,
				134,
				109,
				165,
				154,
				184,
				368,
				265,
				345,
				322,
				417,
				486,
				439,
				542,
				527,
				558,
				599,
				647,
				676,
				696,
				721,
				737,
				749,
				758,
				818,
				865,
				894,
				923,
				951,
				980,
				1027,
				1036,
				1087,
				1130,
				1139,
				1152,
				1161,
				1200,
				1223,
				1234,
				1251,
				1280,
				1297,
				1316,
				1333,
				1348,
				1367,
				1388,
				1401,
				1414
			]
		},
		{
			"title": "Function",
			"children": [
				1452,
				1628,
				2313,
				1632,
				1634,
				1642,
				2288
			]
		},
		{
			"title": "Guard",
			"children": [
				2293,
				2297,
				2301,
				2304,
				2321,
				2325,
				2329,
				2333,
				2337,
				2357,
				2361,
				2365,
				2370,
				2374
			]
		},
		{
			"title": "Number",
			"children": [
				2378
			]
		},
		{
			"title": "Object",
			"children": [
				2393,
				2410,
				2414,
				2423,
				2446,
				2458,
				2475,
				2496,
				2517,
				2530,
				2543,
				2564,
				2613,
				2626,
				2647,
				2655,
				2670,
				2691,
				2708,
				1367
			]
		},
		{
			"title": "Other",
			"children": [
				213,
				2
			]
		},
		{
			"title": "String",
			"children": [
				2766,
				2769
			]
		},
		{
			"title": "Type",
			"children": [
				2775
			]
		}
	],
	"packageName": "@vinicunca/perkakas",
	"readme": [
		{
			"kind": "text",
			"text": "# @vinicunca/perkakas\n\n[![npm](https://img.shields.io/npm/v/@vinicunca/perkakas/latest.svg?style=flat&colorA=18181B&colorB=28CF8D)](https://npmjs.com/package/@vinicunca/perkakas)\n[![downloads](https://img.shields.io/npm/dm/@vinicunca/perkakas.svg?style=flat&colorA=18181B&colorB=28CF8D)](https://npmjs.com/package/@vinicunca/perkakas)\n[![license](https://img.shields.io/github/license/vinicunca/perkakas.svg?style=flat&colorA=18181B&colorB=28CF8D)](https://github.com/vinicunca/perkakas/blob/main/LICENSE)\n\nUtilities functions for javascript/typescript projects.\n\n[📖 &nbsp;Documentation](https://perkakas.vinicunca.dev/)"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "lib/src/index.ts",
			"qualifiedName": ""
		},
		"2": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "KEY_CODES"
		},
		"3": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object"
		},
		"4": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.TAB"
		},
		"5": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.ARROW_DOWN"
		},
		"6": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.ARROW_UP"
		},
		"7": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.ARROW_LEFT"
		},
		"8": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.ARROW_RIGHT"
		},
		"9": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.ENTER"
		},
		"10": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.ESC"
		},
		"11": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.SPACE"
		},
		"12": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.SHIFT"
		},
		"13": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.KEY_F"
		},
		"14": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.CTRL"
		},
		"15": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.ALT"
		},
		"16": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.META"
		},
		"17": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.AT"
		},
		"18": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.DELETE"
		},
		"19": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.BACKSPACE"
		},
		"20": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.HOME"
		},
		"21": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.END"
		},
		"22": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.PAGE_UP"
		},
		"23": {
			"sourceFileName": "lib/src/aria/key-codes.ts",
			"qualifiedName": "__object.PAGE_DOWN"
		},
		"24": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "allPass"
		},
		"25": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "allPass"
		},
		"26": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "T"
		},
		"27": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "data"
		},
		"28": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "fns"
		},
		"29": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "__type"
		},
		"30": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "__type"
		},
		"31": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "data"
		},
		"32": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "allPass"
		},
		"33": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "T"
		},
		"34": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "fns"
		},
		"35": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "__type"
		},
		"36": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "__type"
		},
		"37": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "data"
		},
		"38": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "__type"
		},
		"39": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "__type"
		},
		"40": {
			"sourceFileName": "lib/src/array/all-pass.ts",
			"qualifiedName": "data"
		},
		"41": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "anyPass"
		},
		"42": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "anyPass"
		},
		"43": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "T"
		},
		"44": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "data"
		},
		"45": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "fns"
		},
		"46": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "__type"
		},
		"47": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "__type"
		},
		"48": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "data"
		},
		"49": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "anyPass"
		},
		"50": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "T"
		},
		"51": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "fns"
		},
		"52": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "__type"
		},
		"53": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "__type"
		},
		"54": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "data"
		},
		"55": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "__type"
		},
		"56": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "__type"
		},
		"57": {
			"sourceFileName": "lib/src/array/any-pass.ts",
			"qualifiedName": "data"
		},
		"58": {
			"sourceFileName": "lib/src/array/chunk.ts",
			"qualifiedName": "chunk"
		},
		"59": {
			"sourceFileName": "lib/src/array/chunk.ts",
			"qualifiedName": "chunk"
		},
		"60": {
			"sourceFileName": "lib/src/array/chunk.ts",
			"qualifiedName": "T"
		},
		"61": {
			"sourceFileName": "lib/src/array/chunk.ts",
			"qualifiedName": "array"
		},
		"62": {
			"sourceFileName": "lib/src/array/chunk.ts",
			"qualifiedName": "size"
		},
		"63": {
			"sourceFileName": "lib/src/array/chunk.ts",
			"qualifiedName": "chunk"
		},
		"64": {
			"sourceFileName": "lib/src/array/chunk.ts",
			"qualifiedName": "T"
		},
		"65": {
			"sourceFileName": "lib/src/array/chunk.ts",
			"qualifiedName": "size"
		},
		"66": {
			"sourceFileName": "lib/src/array/chunk.ts",
			"qualifiedName": "__type"
		},
		"67": {
			"sourceFileName": "lib/src/array/chunk.ts",
			"qualifiedName": "__type"
		},
		"68": {
			"sourceFileName": "lib/src/array/chunk.ts",
			"qualifiedName": "array"
		},
		"69": {
			"sourceFileName": "lib/src/array/compact.ts",
			"qualifiedName": "compact"
		},
		"70": {
			"sourceFileName": "lib/src/array/compact.ts",
			"qualifiedName": "compact"
		},
		"71": {
			"sourceFileName": "lib/src/array/compact.ts",
			"qualifiedName": "T"
		},
		"72": {
			"sourceFileName": "lib/src/array/compact.ts",
			"qualifiedName": "items"
		},
		"73": {
			"sourceFileName": "lib/src/array/concat.ts",
			"qualifiedName": "concat"
		},
		"74": {
			"sourceFileName": "lib/src/array/concat.ts",
			"qualifiedName": "concat"
		},
		"75": {
			"sourceFileName": "lib/src/array/concat.ts",
			"qualifiedName": "T"
		},
		"76": {
			"sourceFileName": "lib/src/array/concat.ts",
			"qualifiedName": "K"
		},
		"77": {
			"sourceFileName": "lib/src/array/concat.ts",
			"qualifiedName": "arr1"
		},
		"78": {
			"sourceFileName": "lib/src/array/concat.ts",
			"qualifiedName": "arr2"
		},
		"79": {
			"sourceFileName": "lib/src/array/concat.ts",
			"qualifiedName": "concat"
		},
		"80": {
			"sourceFileName": "lib/src/array/concat.ts",
			"qualifiedName": "T"
		},
		"81": {
			"sourceFileName": "lib/src/array/concat.ts",
			"qualifiedName": "K"
		},
		"82": {
			"sourceFileName": "lib/src/array/concat.ts",
			"qualifiedName": "arr2"
		},
		"83": {
			"sourceFileName": "lib/src/array/concat.ts",
			"qualifiedName": "__type"
		},
		"84": {
			"sourceFileName": "lib/src/array/concat.ts",
			"qualifiedName": "__type"
		},
		"85": {
			"sourceFileName": "lib/src/array/concat.ts",
			"qualifiedName": "arr1"
		},
		"86": {
			"sourceFileName": "lib/src/array/count-by.ts",
			"qualifiedName": "countBy"
		},
		"87": {
			"sourceFileName": "lib/src/array/count-by.ts",
			"qualifiedName": "countBy"
		},
		"88": {
			"sourceFileName": "lib/src/array/count-by.ts",
			"qualifiedName": "T"
		},
		"89": {
			"sourceFileName": "lib/src/array/count-by.ts",
			"qualifiedName": "items"
		},
		"90": {
			"sourceFileName": "lib/src/array/count-by.ts",
			"qualifiedName": "fn"
		},
		"91": {
			"sourceFileName": "lib/src/array/count-by.ts",
			"qualifiedName": "countBy"
		},
		"92": {
			"sourceFileName": "lib/src/array/count-by.ts",
			"qualifiedName": "T"
		},
		"93": {
			"sourceFileName": "lib/src/array/count-by.ts",
			"qualifiedName": "fn"
		},
		"94": {
			"sourceFileName": "lib/src/array/count-by.ts",
			"qualifiedName": "__type"
		},
		"95": {
			"sourceFileName": "lib/src/array/count-by.ts",
			"qualifiedName": "__type"
		},
		"96": {
			"sourceFileName": "lib/src/array/count-by.ts",
			"qualifiedName": "array"
		},
		"109": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "differenceWith"
		},
		"110": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "differenceWith"
		},
		"111": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "TFirst"
		},
		"112": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "TSecond"
		},
		"113": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "array"
		},
		"114": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "other"
		},
		"115": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "isEquals"
		},
		"116": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "differenceWith"
		},
		"117": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "TFirst"
		},
		"118": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "TSecond"
		},
		"119": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "other"
		},
		"120": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "isEquals"
		},
		"121": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "__type"
		},
		"122": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "__type"
		},
		"123": {
			"sourceFileName": "lib/src/array/difference-with.ts",
			"qualifiedName": "array"
		},
		"134": {
			"sourceFileName": "lib/src/array/difference.ts",
			"qualifiedName": "difference"
		},
		"135": {
			"sourceFileName": "lib/src/array/difference.ts",
			"qualifiedName": "difference"
		},
		"136": {
			"sourceFileName": "lib/src/array/difference.ts",
			"qualifiedName": "T"
		},
		"137": {
			"sourceFileName": "lib/src/array/difference.ts",
			"qualifiedName": "array"
		},
		"138": {
			"sourceFileName": "lib/src/array/difference.ts",
			"qualifiedName": "other"
		},
		"139": {
			"sourceFileName": "lib/src/array/difference.ts",
			"qualifiedName": "difference"
		},
		"140": {
			"sourceFileName": "lib/src/array/difference.ts",
			"qualifiedName": "T"
		},
		"141": {
			"sourceFileName": "lib/src/array/difference.ts",
			"qualifiedName": "K"
		},
		"142": {
			"sourceFileName": "lib/src/array/difference.ts",
			"qualifiedName": "other"
		},
		"143": {
			"sourceFileName": "lib/src/array/difference.ts",
			"qualifiedName": "__type"
		},
		"144": {
			"sourceFileName": "lib/src/array/difference.ts",
			"qualifiedName": "__type"
		},
		"145": {
			"sourceFileName": "lib/src/array/difference.ts",
			"qualifiedName": "array"
		},
		"154": {
			"sourceFileName": "lib/src/array/drop-last.ts",
			"qualifiedName": "dropLast"
		},
		"155": {
			"sourceFileName": "lib/src/array/drop-last.ts",
			"qualifiedName": "dropLast"
		},
		"156": {
			"sourceFileName": "lib/src/array/drop-last.ts",
			"qualifiedName": "T"
		},
		"157": {
			"sourceFileName": "lib/src/array/drop-last.ts",
			"qualifiedName": "array"
		},
		"158": {
			"sourceFileName": "lib/src/array/drop-last.ts",
			"qualifiedName": "n"
		},
		"159": {
			"sourceFileName": "lib/src/array/drop-last.ts",
			"qualifiedName": "dropLast"
		},
		"160": {
			"sourceFileName": "lib/src/array/drop-last.ts",
			"qualifiedName": "T"
		},
		"161": {
			"sourceFileName": "lib/src/array/drop-last.ts",
			"qualifiedName": "n"
		},
		"162": {
			"sourceFileName": "lib/src/array/drop-last.ts",
			"qualifiedName": "__type"
		},
		"163": {
			"sourceFileName": "lib/src/array/drop-last.ts",
			"qualifiedName": "__type"
		},
		"164": {
			"sourceFileName": "lib/src/array/drop-last.ts",
			"qualifiedName": "array"
		},
		"165": {
			"sourceFileName": "lib/src/array/drop.ts",
			"qualifiedName": "drop"
		},
		"166": {
			"sourceFileName": "lib/src/array/drop.ts",
			"qualifiedName": "drop"
		},
		"167": {
			"sourceFileName": "lib/src/array/drop.ts",
			"qualifiedName": "T"
		},
		"168": {
			"sourceFileName": "lib/src/array/drop.ts",
			"qualifiedName": "array"
		},
		"169": {
			"sourceFileName": "lib/src/array/drop.ts",
			"qualifiedName": "n"
		},
		"170": {
			"sourceFileName": "lib/src/array/drop.ts",
			"qualifiedName": "drop"
		},
		"171": {
			"sourceFileName": "lib/src/array/drop.ts",
			"qualifiedName": "T"
		},
		"172": {
			"sourceFileName": "lib/src/array/drop.ts",
			"qualifiedName": "n"
		},
		"173": {
			"sourceFileName": "lib/src/array/drop.ts",
			"qualifiedName": "__type"
		},
		"174": {
			"sourceFileName": "lib/src/array/drop.ts",
			"qualifiedName": "__type"
		},
		"175": {
			"sourceFileName": "lib/src/array/drop.ts",
			"qualifiedName": "array"
		},
		"184": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "filter"
		},
		"185": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "filter"
		},
		"186": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "T"
		},
		"187": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "S"
		},
		"188": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "array"
		},
		"189": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "fn"
		},
		"190": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "__type"
		},
		"191": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "__type"
		},
		"192": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "value"
		},
		"197": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "filter"
		},
		"198": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "T"
		},
		"199": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "S"
		},
		"200": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "fn"
		},
		"201": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "__type"
		},
		"202": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "__type"
		},
		"203": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "input"
		},
		"204": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "__type"
		},
		"205": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "__type"
		},
		"206": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "array"
		},
		"213": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "filter"
		},
		"214": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "filter.indexed"
		},
		"229": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "filter.indexed"
		},
		"230": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "T"
		},
		"231": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "S"
		},
		"232": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "fn"
		},
		"233": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "__type"
		},
		"234": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "__type"
		},
		"235": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "input"
		},
		"236": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "index"
		},
		"237": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "array"
		},
		"238": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "__type"
		},
		"239": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "__type"
		},
		"240": {
			"sourceFileName": "lib/src/array/filter.ts",
			"qualifiedName": "array"
		},
		"265": {
			"sourceFileName": "lib/src/array/find-index.ts",
			"qualifiedName": "findIndex"
		},
		"266": {
			"sourceFileName": "lib/src/array/find-index.ts",
			"qualifiedName": "findIndex"
		},
		"267": {
			"sourceFileName": "lib/src/array/find-index.ts",
			"qualifiedName": "T"
		},
		"268": {
			"sourceFileName": "lib/src/array/find-index.ts",
			"qualifiedName": "items"
		},
		"269": {
			"sourceFileName": "lib/src/array/find-index.ts",
			"qualifiedName": "fn"
		},
		"270": {
			"sourceFileName": "lib/src/array/find-index.ts",
			"qualifiedName": "findIndex"
		},
		"271": {
			"sourceFileName": "lib/src/array/find-index.ts",
			"qualifiedName": "T"
		},
		"272": {
			"sourceFileName": "lib/src/array/find-index.ts",
			"qualifiedName": "fn"
		},
		"273": {
			"sourceFileName": "lib/src/array/find-index.ts",
			"qualifiedName": "__type"
		},
		"274": {
			"sourceFileName": "lib/src/array/find-index.ts",
			"qualifiedName": "__type"
		},
		"275": {
			"sourceFileName": "lib/src/array/find-index.ts",
			"qualifiedName": "items"
		},
		"322": {
			"sourceFileName": "lib/src/array/find-last-index.ts",
			"qualifiedName": "findLastIndex"
		},
		"323": {
			"sourceFileName": "lib/src/array/find-last-index.ts",
			"qualifiedName": "findLastIndex"
		},
		"324": {
			"sourceFileName": "lib/src/array/find-last-index.ts",
			"qualifiedName": "T"
		},
		"325": {
			"sourceFileName": "lib/src/array/find-last-index.ts",
			"qualifiedName": "array"
		},
		"326": {
			"sourceFileName": "lib/src/array/find-last-index.ts",
			"qualifiedName": "fn"
		},
		"327": {
			"sourceFileName": "lib/src/array/find-last-index.ts",
			"qualifiedName": "findLastIndex"
		},
		"328": {
			"sourceFileName": "lib/src/array/find-last-index.ts",
			"qualifiedName": "T"
		},
		"329": {
			"sourceFileName": "lib/src/array/find-last-index.ts",
			"qualifiedName": "fn"
		},
		"330": {
			"sourceFileName": "lib/src/array/find-last-index.ts",
			"qualifiedName": "__type"
		},
		"331": {
			"sourceFileName": "lib/src/array/find-last-index.ts",
			"qualifiedName": "__type"
		},
		"332": {
			"sourceFileName": "lib/src/array/find-last-index.ts",
			"qualifiedName": "array"
		},
		"345": {
			"sourceFileName": "lib/src/array/find-last.ts",
			"qualifiedName": "findLast"
		},
		"346": {
			"sourceFileName": "lib/src/array/find-last.ts",
			"qualifiedName": "findLast"
		},
		"347": {
			"sourceFileName": "lib/src/array/find-last.ts",
			"qualifiedName": "T"
		},
		"348": {
			"sourceFileName": "lib/src/array/find-last.ts",
			"qualifiedName": "array"
		},
		"349": {
			"sourceFileName": "lib/src/array/find-last.ts",
			"qualifiedName": "fn"
		},
		"350": {
			"sourceFileName": "lib/src/array/find-last.ts",
			"qualifiedName": "findLast"
		},
		"351": {
			"sourceFileName": "lib/src/array/find-last.ts",
			"qualifiedName": "T"
		},
		"352": {
			"sourceFileName": "lib/src/array/find-last.ts",
			"qualifiedName": "fn"
		},
		"353": {
			"sourceFileName": "lib/src/array/find-last.ts",
			"qualifiedName": "__type"
		},
		"354": {
			"sourceFileName": "lib/src/array/find-last.ts",
			"qualifiedName": "__type"
		},
		"355": {
			"sourceFileName": "lib/src/array/find-last.ts",
			"qualifiedName": "array"
		},
		"368": {
			"sourceFileName": "lib/src/array/find.ts",
			"qualifiedName": "find"
		},
		"369": {
			"sourceFileName": "lib/src/array/find.ts",
			"qualifiedName": "find"
		},
		"370": {
			"sourceFileName": "lib/src/array/find.ts",
			"qualifiedName": "T"
		},
		"371": {
			"sourceFileName": "lib/src/array/find.ts",
			"qualifiedName": "items"
		},
		"372": {
			"sourceFileName": "lib/src/array/find.ts",
			"qualifiedName": "fn"
		},
		"373": {
			"sourceFileName": "lib/src/array/find.ts",
			"qualifiedName": "find"
		},
		"374": {
			"sourceFileName": "lib/src/array/find.ts",
			"qualifiedName": "T"
		},
		"375": {
			"sourceFileName": "lib/src/array/find.ts",
			"qualifiedName": "fn"
		},
		"376": {
			"sourceFileName": "lib/src/array/find.ts",
			"qualifiedName": "__type"
		},
		"377": {
			"sourceFileName": "lib/src/array/find.ts",
			"qualifiedName": "__type"
		},
		"378": {
			"sourceFileName": "lib/src/array/find.ts",
			"qualifiedName": "array"
		},
		"417": {
			"sourceFileName": "lib/src/array/first.ts",
			"qualifiedName": "first"
		},
		"418": {
			"sourceFileName": "lib/src/array/first.ts",
			"qualifiedName": "first"
		},
		"419": {
			"sourceFileName": "lib/src/array/first.ts",
			"qualifiedName": "T"
		},
		"420": {
			"sourceFileName": "lib/src/array/first.ts",
			"qualifiedName": "array"
		},
		"439": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "flatMapToObj"
		},
		"440": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "flatMapToObj"
		},
		"441": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "T"
		},
		"442": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "K"
		},
		"443": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "V"
		},
		"444": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "array"
		},
		"445": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "fn"
		},
		"446": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "__type"
		},
		"447": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "__type"
		},
		"448": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "element"
		},
		"449": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "flatMapToObj"
		},
		"450": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "T"
		},
		"451": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "K"
		},
		"452": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "V"
		},
		"453": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "fn"
		},
		"454": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "__type"
		},
		"455": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "__type"
		},
		"456": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "element"
		},
		"457": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "__type"
		},
		"458": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "__type"
		},
		"459": {
			"sourceFileName": "lib/src/array/flat-map-to-obj.ts",
			"qualifiedName": "array"
		},
		"486": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "flatMap"
		},
		"487": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "flatMap"
		},
		"488": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "T"
		},
		"489": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "K"
		},
		"490": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "array"
		},
		"491": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "fn"
		},
		"492": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "__type"
		},
		"493": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "__type"
		},
		"494": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "input"
		},
		"495": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "flatMap"
		},
		"496": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "T"
		},
		"497": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "K"
		},
		"498": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "fn"
		},
		"499": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "__type"
		},
		"500": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "__type"
		},
		"501": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "input"
		},
		"502": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "__type"
		},
		"503": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "__type"
		},
		"504": {
			"sourceFileName": "lib/src/array/flat-map.ts",
			"qualifiedName": "array"
		},
		"527": {
			"sourceFileName": "lib/src/array/flatten-deep.ts",
			"qualifiedName": "flattenDeep"
		},
		"528": {
			"sourceFileName": "lib/src/array/flatten-deep.ts",
			"qualifiedName": "flattenDeep"
		},
		"529": {
			"sourceFileName": "lib/src/array/flatten-deep.ts",
			"qualifiedName": "T"
		},
		"530": {
			"sourceFileName": "lib/src/array/flatten-deep.ts",
			"qualifiedName": "items"
		},
		"542": {
			"sourceFileName": "lib/src/array/flatten.ts",
			"qualifiedName": "flatten"
		},
		"543": {
			"sourceFileName": "lib/src/array/flatten.ts",
			"qualifiedName": "flatten"
		},
		"544": {
			"sourceFileName": "lib/src/array/flatten.ts",
			"qualifiedName": "T"
		},
		"545": {
			"sourceFileName": "lib/src/array/flatten.ts",
			"qualifiedName": "items"
		},
		"558": {
			"sourceFileName": "lib/src/array/for-each.ts",
			"qualifiedName": "forEach"
		},
		"559": {
			"sourceFileName": "lib/src/array/for-each.ts",
			"qualifiedName": "forEach"
		},
		"560": {
			"sourceFileName": "lib/src/array/for-each.ts",
			"qualifiedName": "T"
		},
		"561": {
			"sourceFileName": "lib/src/array/for-each.ts",
			"qualifiedName": "array"
		},
		"562": {
			"sourceFileName": "lib/src/array/for-each.ts",
			"qualifiedName": "fn"
		},
		"563": {
			"sourceFileName": "lib/src/array/for-each.ts",
			"qualifiedName": "forEach"
		},
		"564": {
			"sourceFileName": "lib/src/array/for-each.ts",
			"qualifiedName": "T"
		},
		"565": {
			"sourceFileName": "lib/src/array/for-each.ts",
			"qualifiedName": "fn"
		},
		"566": {
			"sourceFileName": "lib/src/array/for-each.ts",
			"qualifiedName": "__type"
		},
		"567": {
			"sourceFileName": "lib/src/array/for-each.ts",
			"qualifiedName": "__type"
		},
		"568": {
			"sourceFileName": "lib/src/array/for-each.ts",
			"qualifiedName": "array"
		},
		"599": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "groupBy"
		},
		"600": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "groupBy"
		},
		"601": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "T"
		},
		"602": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "items"
		},
		"603": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "fn"
		},
		"604": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "__type"
		},
		"605": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "__type"
		},
		"606": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "item"
		},
		"607": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "groupBy"
		},
		"608": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "T"
		},
		"609": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "fn"
		},
		"610": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "__type"
		},
		"611": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "__type"
		},
		"612": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "item"
		},
		"613": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "__type"
		},
		"614": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "__type"
		},
		"615": {
			"sourceFileName": "lib/src/array/group-by.ts",
			"qualifiedName": "array"
		},
		"647": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "indexBy"
		},
		"648": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "indexBy"
		},
		"649": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "T"
		},
		"650": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "array"
		},
		"651": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "fn"
		},
		"652": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "__type"
		},
		"653": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "__type"
		},
		"654": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "item"
		},
		"655": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "indexBy"
		},
		"656": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "T"
		},
		"657": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "fn"
		},
		"658": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "__type"
		},
		"659": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "__type"
		},
		"660": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "item"
		},
		"661": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "__type"
		},
		"662": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "__type"
		},
		"663": {
			"sourceFileName": "lib/src/array/index-by.ts",
			"qualifiedName": "array"
		},
		"676": {
			"sourceFileName": "lib/src/array/intersection.ts",
			"qualifiedName": "intersection"
		},
		"677": {
			"sourceFileName": "lib/src/array/intersection.ts",
			"qualifiedName": "intersection"
		},
		"678": {
			"sourceFileName": "lib/src/array/intersection.ts",
			"qualifiedName": "T"
		},
		"679": {
			"sourceFileName": "lib/src/array/intersection.ts",
			"qualifiedName": "array"
		},
		"680": {
			"sourceFileName": "lib/src/array/intersection.ts",
			"qualifiedName": "other"
		},
		"681": {
			"sourceFileName": "lib/src/array/intersection.ts",
			"qualifiedName": "intersection"
		},
		"682": {
			"sourceFileName": "lib/src/array/intersection.ts",
			"qualifiedName": "T"
		},
		"683": {
			"sourceFileName": "lib/src/array/intersection.ts",
			"qualifiedName": "K"
		},
		"684": {
			"sourceFileName": "lib/src/array/intersection.ts",
			"qualifiedName": "other"
		},
		"685": {
			"sourceFileName": "lib/src/array/intersection.ts",
			"qualifiedName": "__type"
		},
		"686": {
			"sourceFileName": "lib/src/array/intersection.ts",
			"qualifiedName": "__type"
		},
		"687": {
			"sourceFileName": "lib/src/array/intersection.ts",
			"qualifiedName": "source"
		},
		"696": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "intersectionWith"
		},
		"697": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "intersectionWith"
		},
		"698": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "TFirst"
		},
		"699": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "TSecond"
		},
		"700": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "array"
		},
		"701": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "other"
		},
		"702": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "comparator"
		},
		"703": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "intersectionWith"
		},
		"704": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "TFirst"
		},
		"705": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "TSecond"
		},
		"706": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "other"
		},
		"707": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "comparator"
		},
		"708": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "__type"
		},
		"709": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "__type"
		},
		"710": {
			"sourceFileName": "lib/src/array/intersection-with.ts",
			"qualifiedName": "array"
		},
		"721": {
			"sourceFileName": "lib/src/array/join.ts",
			"qualifiedName": "join"
		},
		"722": {
			"sourceFileName": "lib/src/array/join.ts",
			"qualifiedName": "join"
		},
		"723": {
			"sourceFileName": "lib/src/array/join.ts",
			"qualifiedName": "T"
		},
		"724": {
			"sourceFileName": "lib/src/array/join.ts",
			"qualifiedName": "Glue"
		},
		"725": {
			"sourceFileName": "lib/src/array/join.ts",
			"qualifiedName": "data"
		},
		"726": {
			"sourceFileName": "lib/src/array/join.ts",
			"qualifiedName": "glue"
		},
		"727": {
			"sourceFileName": "lib/src/array/join.ts",
			"qualifiedName": "join"
		},
		"728": {
			"sourceFileName": "lib/src/array/join.ts",
			"qualifiedName": "T"
		},
		"729": {
			"sourceFileName": "lib/src/array/join.ts",
			"qualifiedName": "Glue"
		},
		"730": {
			"sourceFileName": "lib/src/array/join.ts",
			"qualifiedName": "glue"
		},
		"731": {
			"sourceFileName": "lib/src/array/join.ts",
			"qualifiedName": "__type"
		},
		"732": {
			"sourceFileName": "lib/src/array/join.ts",
			"qualifiedName": "__type"
		},
		"733": {
			"sourceFileName": "lib/src/array/join.ts",
			"qualifiedName": "data"
		},
		"737": {
			"sourceFileName": "lib/src/array/last.ts",
			"qualifiedName": "last"
		},
		"738": {
			"sourceFileName": "lib/src/array/last.ts",
			"qualifiedName": "last"
		},
		"739": {
			"sourceFileName": "lib/src/array/last.ts",
			"qualifiedName": "T"
		},
		"740": {
			"sourceFileName": "lib/src/array/last.ts",
			"qualifiedName": "array"
		},
		"749": {
			"sourceFileName": "lib/src/array/length.ts",
			"qualifiedName": "length"
		},
		"750": {
			"sourceFileName": "lib/src/array/length.ts",
			"qualifiedName": "length"
		},
		"751": {
			"sourceFileName": "lib/src/array/length.ts",
			"qualifiedName": "T"
		},
		"752": {
			"sourceFileName": "lib/src/array/length.ts",
			"qualifiedName": "items"
		},
		"753": {
			"sourceFileName": "lib/src/array/length.ts",
			"qualifiedName": "length"
		},
		"754": {
			"sourceFileName": "lib/src/array/length.ts",
			"qualifiedName": "T"
		},
		"755": {
			"sourceFileName": "lib/src/array/length.ts",
			"qualifiedName": "__type"
		},
		"756": {
			"sourceFileName": "lib/src/array/length.ts",
			"qualifiedName": "__type"
		},
		"757": {
			"sourceFileName": "lib/src/array/length.ts",
			"qualifiedName": "items"
		},
		"758": {
			"sourceFileName": "lib/src/array/map.ts",
			"qualifiedName": "map"
		},
		"759": {
			"sourceFileName": "lib/src/array/map.ts",
			"qualifiedName": "map"
		},
		"760": {
			"sourceFileName": "lib/src/array/map.ts",
			"qualifiedName": "T"
		},
		"761": {
			"sourceFileName": "lib/src/array/map.ts",
			"qualifiedName": "K"
		},
		"762": {
			"sourceFileName": "lib/src/array/map.ts",
			"qualifiedName": "array"
		},
		"763": {
			"sourceFileName": "lib/src/array/map.ts",
			"qualifiedName": "fn"
		},
		"764": {
			"sourceFileName": "lib/src/array/map.ts",
			"qualifiedName": "map"
		},
		"765": {
			"sourceFileName": "lib/src/array/map.ts",
			"qualifiedName": "T"
		},
		"766": {
			"sourceFileName": "lib/src/array/map.ts",
			"qualifiedName": "K"
		},
		"767": {
			"sourceFileName": "lib/src/array/map.ts",
			"qualifiedName": "fn"
		},
		"768": {
			"sourceFileName": "lib/src/array/map.ts",
			"qualifiedName": "__type"
		},
		"769": {
			"sourceFileName": "lib/src/array/map.ts",
			"qualifiedName": "__type"
		},
		"770": {
			"sourceFileName": "lib/src/array/map.ts",
			"qualifiedName": "array"
		},
		"818": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "mapToObj"
		},
		"819": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "mapToObj"
		},
		"820": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "T"
		},
		"821": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "K"
		},
		"822": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "V"
		},
		"823": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "array"
		},
		"824": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "fn"
		},
		"825": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "__type"
		},
		"826": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "__type"
		},
		"827": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "element"
		},
		"828": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "mapToObj"
		},
		"829": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "T"
		},
		"830": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "K"
		},
		"831": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "V"
		},
		"832": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "fn"
		},
		"833": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "__type"
		},
		"834": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "__type"
		},
		"835": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "element"
		},
		"836": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "__type"
		},
		"837": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "__type"
		},
		"838": {
			"sourceFileName": "lib/src/array/map-to-obj.ts",
			"qualifiedName": "array"
		},
		"865": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "maxBy"
		},
		"866": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "maxBy"
		},
		"867": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "T"
		},
		"868": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "fn"
		},
		"869": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "__type"
		},
		"870": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "__type"
		},
		"871": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "item"
		},
		"872": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "__type"
		},
		"873": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "__type"
		},
		"874": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "items"
		},
		"875": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "maxBy"
		},
		"876": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "T"
		},
		"877": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "items"
		},
		"878": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "fn"
		},
		"879": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "__type"
		},
		"880": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "__type"
		},
		"881": {
			"sourceFileName": "lib/src/array/max-by.ts",
			"qualifiedName": "item"
		},
		"894": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "meanBy"
		},
		"895": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "meanBy"
		},
		"896": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "T"
		},
		"897": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "fn"
		},
		"898": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "__type"
		},
		"899": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "__type"
		},
		"900": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "item"
		},
		"901": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "__type"
		},
		"902": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "__type"
		},
		"903": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "items"
		},
		"904": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "meanBy"
		},
		"905": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "T"
		},
		"906": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "items"
		},
		"907": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "fn"
		},
		"908": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "__type"
		},
		"909": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "__type"
		},
		"910": {
			"sourceFileName": "lib/src/array/mean-by.ts",
			"qualifiedName": "item"
		},
		"923": {
			"sourceFileName": "lib/src/array/merge-all.ts",
			"qualifiedName": "mergeAll"
		},
		"924": {
			"sourceFileName": "lib/src/array/merge-all.ts",
			"qualifiedName": "mergeAll"
		},
		"925": {
			"sourceFileName": "lib/src/array/merge-all.ts",
			"qualifiedName": "A"
		},
		"926": {
			"sourceFileName": "lib/src/array/merge-all.ts",
			"qualifiedName": "array"
		},
		"951": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "minBy"
		},
		"952": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "minBy"
		},
		"953": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "T"
		},
		"954": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "fn"
		},
		"955": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "__type"
		},
		"956": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "__type"
		},
		"957": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "item"
		},
		"958": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "__type"
		},
		"959": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "__type"
		},
		"960": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "items"
		},
		"961": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "minBy"
		},
		"962": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "T"
		},
		"963": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "items"
		},
		"964": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "fn"
		},
		"965": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "__type"
		},
		"966": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "__type"
		},
		"967": {
			"sourceFileName": "lib/src/array/min-by.ts",
			"qualifiedName": "item"
		},
		"980": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "partition"
		},
		"981": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "partition"
		},
		"982": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "T"
		},
		"983": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "S"
		},
		"984": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "items"
		},
		"985": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "predicate"
		},
		"986": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "__type"
		},
		"987": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "__type"
		},
		"988": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "item"
		},
		"989": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "partition"
		},
		"990": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "T"
		},
		"991": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "items"
		},
		"992": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "predicate"
		},
		"993": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "__type"
		},
		"994": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "__type"
		},
		"995": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "item"
		},
		"996": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "partition"
		},
		"997": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "T"
		},
		"998": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "S"
		},
		"999": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "predicate"
		},
		"1000": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "__type"
		},
		"1001": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "__type"
		},
		"1002": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "item"
		},
		"1003": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "__type"
		},
		"1004": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "__type"
		},
		"1005": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "array"
		},
		"1006": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "partition"
		},
		"1007": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "T"
		},
		"1008": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "predicate"
		},
		"1009": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "__type"
		},
		"1010": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "__type"
		},
		"1011": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "item"
		},
		"1012": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "__type"
		},
		"1013": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "__type"
		},
		"1014": {
			"sourceFileName": "lib/src/array/partition.ts",
			"qualifiedName": "array"
		},
		"1027": {
			"sourceFileName": "lib/src/array/range.ts",
			"qualifiedName": "range"
		},
		"1028": {
			"sourceFileName": "lib/src/array/range.ts",
			"qualifiedName": "range"
		},
		"1029": {
			"sourceFileName": "lib/src/array/range.ts",
			"qualifiedName": "start"
		},
		"1030": {
			"sourceFileName": "lib/src/array/range.ts",
			"qualifiedName": "end"
		},
		"1031": {
			"sourceFileName": "lib/src/array/range.ts",
			"qualifiedName": "range"
		},
		"1032": {
			"sourceFileName": "lib/src/array/range.ts",
			"qualifiedName": "end"
		},
		"1033": {
			"sourceFileName": "lib/src/array/range.ts",
			"qualifiedName": "__type"
		},
		"1034": {
			"sourceFileName": "lib/src/array/range.ts",
			"qualifiedName": "__type"
		},
		"1035": {
			"sourceFileName": "lib/src/array/range.ts",
			"qualifiedName": "start"
		},
		"1036": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "reduce"
		},
		"1037": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "reduce"
		},
		"1038": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "T"
		},
		"1039": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "K"
		},
		"1040": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "items"
		},
		"1041": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "fn"
		},
		"1042": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "__type"
		},
		"1043": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "__type"
		},
		"1044": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "acc"
		},
		"1045": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "item"
		},
		"1046": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "initialValue"
		},
		"1047": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "reduce"
		},
		"1048": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "T"
		},
		"1049": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "K"
		},
		"1050": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "fn"
		},
		"1051": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "__type"
		},
		"1052": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "__type"
		},
		"1053": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "acc"
		},
		"1054": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "item"
		},
		"1055": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "initialValue"
		},
		"1056": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "__type"
		},
		"1057": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "__type"
		},
		"1058": {
			"sourceFileName": "lib/src/array/reduce.ts",
			"qualifiedName": "items"
		},
		"1087": {
			"sourceFileName": "lib/src/array/reject.ts",
			"qualifiedName": "reject"
		},
		"1088": {
			"sourceFileName": "lib/src/array/reject.ts",
			"qualifiedName": "reject"
		},
		"1089": {
			"sourceFileName": "lib/src/array/reject.ts",
			"qualifiedName": "T"
		},
		"1090": {
			"sourceFileName": "lib/src/array/reject.ts",
			"qualifiedName": "items"
		},
		"1091": {
			"sourceFileName": "lib/src/array/reject.ts",
			"qualifiedName": "fn"
		},
		"1092": {
			"sourceFileName": "lib/src/array/reject.ts",
			"qualifiedName": "reject"
		},
		"1093": {
			"sourceFileName": "lib/src/array/reject.ts",
			"qualifiedName": "T"
		},
		"1094": {
			"sourceFileName": "lib/src/array/reject.ts",
			"qualifiedName": "fn"
		},
		"1095": {
			"sourceFileName": "lib/src/array/reject.ts",
			"qualifiedName": "__type"
		},
		"1096": {
			"sourceFileName": "lib/src/array/reject.ts",
			"qualifiedName": "__type"
		},
		"1097": {
			"sourceFileName": "lib/src/array/reject.ts",
			"qualifiedName": "items"
		},
		"1130": {
			"sourceFileName": "lib/src/array/reverse.ts",
			"qualifiedName": "reverse"
		},
		"1131": {
			"sourceFileName": "lib/src/array/reverse.ts",
			"qualifiedName": "reverse"
		},
		"1132": {
			"sourceFileName": "lib/src/array/reverse.ts",
			"qualifiedName": "T"
		},
		"1133": {
			"sourceFileName": "lib/src/array/reverse.ts",
			"qualifiedName": "array"
		},
		"1134": {
			"sourceFileName": "lib/src/array/reverse.ts",
			"qualifiedName": "reverse"
		},
		"1135": {
			"sourceFileName": "lib/src/array/reverse.ts",
			"qualifiedName": "T"
		},
		"1136": {
			"sourceFileName": "lib/src/array/reverse.ts",
			"qualifiedName": "__type"
		},
		"1137": {
			"sourceFileName": "lib/src/array/reverse.ts",
			"qualifiedName": "__type"
		},
		"1138": {
			"sourceFileName": "lib/src/array/reverse.ts",
			"qualifiedName": "array"
		},
		"1139": {
			"sourceFileName": "lib/src/array/sample.ts",
			"qualifiedName": "sample"
		},
		"1140": {
			"sourceFileName": "lib/src/array/sample.ts",
			"qualifiedName": "sample"
		},
		"1141": {
			"sourceFileName": "lib/src/array/sample.ts",
			"qualifiedName": "T"
		},
		"1142": {
			"sourceFileName": "lib/src/array/sample.ts",
			"qualifiedName": "N"
		},
		"1143": {
			"sourceFileName": "lib/src/array/sample.ts",
			"qualifiedName": "data"
		},
		"1144": {
			"sourceFileName": "lib/src/array/sample.ts",
			"qualifiedName": "sampleSize"
		},
		"1145": {
			"sourceFileName": "lib/src/array/sample.ts",
			"qualifiedName": "sample"
		},
		"1146": {
			"sourceFileName": "lib/src/array/sample.ts",
			"qualifiedName": "T"
		},
		"1147": {
			"sourceFileName": "lib/src/array/sample.ts",
			"qualifiedName": "N"
		},
		"1148": {
			"sourceFileName": "lib/src/array/sample.ts",
			"qualifiedName": "sampleSize"
		},
		"1149": {
			"sourceFileName": "lib/src/array/sample.ts",
			"qualifiedName": "__type"
		},
		"1150": {
			"sourceFileName": "lib/src/array/sample.ts",
			"qualifiedName": "__type"
		},
		"1151": {
			"sourceFileName": "lib/src/array/sample.ts",
			"qualifiedName": "data"
		},
		"1152": {
			"sourceFileName": "lib/src/array/shuffle.ts",
			"qualifiedName": "shuffle"
		},
		"1153": {
			"sourceFileName": "lib/src/array/shuffle.ts",
			"qualifiedName": "shuffle"
		},
		"1154": {
			"sourceFileName": "lib/src/array/shuffle.ts",
			"qualifiedName": "T"
		},
		"1155": {
			"sourceFileName": "lib/src/array/shuffle.ts",
			"qualifiedName": "items"
		},
		"1156": {
			"sourceFileName": "lib/src/array/shuffle.ts",
			"qualifiedName": "shuffle"
		},
		"1157": {
			"sourceFileName": "lib/src/array/shuffle.ts",
			"qualifiedName": "T"
		},
		"1158": {
			"sourceFileName": "lib/src/array/shuffle.ts",
			"qualifiedName": "__type"
		},
		"1159": {
			"sourceFileName": "lib/src/array/shuffle.ts",
			"qualifiedName": "__type"
		},
		"1160": {
			"sourceFileName": "lib/src/array/shuffle.ts",
			"qualifiedName": "items"
		},
		"1161": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "sort"
		},
		"1162": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "sort"
		},
		"1163": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "T"
		},
		"1164": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "items"
		},
		"1165": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "cmp"
		},
		"1166": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "__type"
		},
		"1167": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "__type"
		},
		"1168": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "a"
		},
		"1169": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "b"
		},
		"1170": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "sort"
		},
		"1171": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "T"
		},
		"1172": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "cmp"
		},
		"1173": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "__type"
		},
		"1174": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "__type"
		},
		"1175": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "a"
		},
		"1176": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "b"
		},
		"1177": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "__type"
		},
		"1178": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "__type"
		},
		"1179": {
			"sourceFileName": "lib/src/array/sort.ts",
			"qualifiedName": "items"
		},
		"1200": {
			"sourceFileName": "lib/src/array/sort-by.ts",
			"qualifiedName": "sortBy"
		},
		"1201": {
			"sourceFileName": "lib/src/array/sort-by.ts",
			"qualifiedName": "sortBy"
		},
		"1202": {
			"sourceFileName": "lib/src/array/sort-by.ts",
			"qualifiedName": "T"
		},
		"1203": {
			"sourceFileName": "lib/src/array/sort-by.ts",
			"qualifiedName": "sortRules"
		},
		"1204": {
			"sourceFileName": "lib/src/array/sort-by.ts",
			"qualifiedName": "__type"
		},
		"1205": {
			"sourceFileName": "lib/src/array/sort-by.ts",
			"qualifiedName": "__type"
		},
		"1206": {
			"sourceFileName": "lib/src/array/sort-by.ts",
			"qualifiedName": "array"
		},
		"1207": {
			"sourceFileName": "lib/src/array/sort-by.ts",
			"qualifiedName": "sortBy"
		},
		"1208": {
			"sourceFileName": "lib/src/array/sort-by.ts",
			"qualifiedName": "T"
		},
		"1209": {
			"sourceFileName": "lib/src/array/sort-by.ts",
			"qualifiedName": "array"
		},
		"1210": {
			"sourceFileName": "lib/src/array/sort-by.ts",
			"qualifiedName": "sortRules"
		},
		"1223": {
			"sourceFileName": "lib/src/array/split-at.ts",
			"qualifiedName": "splitAt"
		},
		"1224": {
			"sourceFileName": "lib/src/array/split-at.ts",
			"qualifiedName": "splitAt"
		},
		"1225": {
			"sourceFileName": "lib/src/array/split-at.ts",
			"qualifiedName": "T"
		},
		"1226": {
			"sourceFileName": "lib/src/array/split-at.ts",
			"qualifiedName": "array"
		},
		"1227": {
			"sourceFileName": "lib/src/array/split-at.ts",
			"qualifiedName": "index"
		},
		"1228": {
			"sourceFileName": "lib/src/array/split-at.ts",
			"qualifiedName": "splitAt"
		},
		"1229": {
			"sourceFileName": "lib/src/array/split-at.ts",
			"qualifiedName": "T"
		},
		"1230": {
			"sourceFileName": "lib/src/array/split-at.ts",
			"qualifiedName": "index"
		},
		"1231": {
			"sourceFileName": "lib/src/array/split-at.ts",
			"qualifiedName": "__type"
		},
		"1232": {
			"sourceFileName": "lib/src/array/split-at.ts",
			"qualifiedName": "__type"
		},
		"1233": {
			"sourceFileName": "lib/src/array/split-at.ts",
			"qualifiedName": "array"
		},
		"1234": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "splitWhen"
		},
		"1235": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "splitWhen"
		},
		"1236": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "T"
		},
		"1237": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "array"
		},
		"1238": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "fn"
		},
		"1239": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "__type"
		},
		"1240": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "__type"
		},
		"1241": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "item"
		},
		"1242": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "splitWhen"
		},
		"1243": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "T"
		},
		"1244": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "fn"
		},
		"1245": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "__type"
		},
		"1246": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "__type"
		},
		"1247": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "item"
		},
		"1248": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "__type"
		},
		"1249": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "__type"
		},
		"1250": {
			"sourceFileName": "lib/src/array/split-when.ts",
			"qualifiedName": "array"
		},
		"1251": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "sumBy"
		},
		"1252": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "sumBy"
		},
		"1253": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "T"
		},
		"1254": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "fn"
		},
		"1255": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "__type"
		},
		"1256": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "__type"
		},
		"1257": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "item"
		},
		"1258": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "__type"
		},
		"1259": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "__type"
		},
		"1260": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "items"
		},
		"1261": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "sumBy"
		},
		"1262": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "T"
		},
		"1263": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "items"
		},
		"1264": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "fn"
		},
		"1265": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "__type"
		},
		"1266": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "__type"
		},
		"1267": {
			"sourceFileName": "lib/src/array/sum-by.ts",
			"qualifiedName": "item"
		},
		"1280": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "swapIndices"
		},
		"1281": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "swapIndices"
		},
		"1282": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "T"
		},
		"1283": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "K1"
		},
		"1284": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "K2"
		},
		"1285": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "data"
		},
		"1286": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "index1"
		},
		"1287": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "index2"
		},
		"1288": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "swapIndices"
		},
		"1289": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "K1"
		},
		"1290": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "K2"
		},
		"1291": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "index1"
		},
		"1292": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "index2"
		},
		"1293": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "__type"
		},
		"1294": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "__type"
		},
		"1295": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "data"
		},
		"1296": {
			"sourceFileName": "lib/src/array/swap-indices.ts",
			"qualifiedName": "T"
		},
		"1297": {
			"sourceFileName": "lib/src/array/take.ts",
			"qualifiedName": "take"
		},
		"1298": {
			"sourceFileName": "lib/src/array/take.ts",
			"qualifiedName": "take"
		},
		"1299": {
			"sourceFileName": "lib/src/array/take.ts",
			"qualifiedName": "T"
		},
		"1300": {
			"sourceFileName": "lib/src/array/take.ts",
			"qualifiedName": "array"
		},
		"1301": {
			"sourceFileName": "lib/src/array/take.ts",
			"qualifiedName": "n"
		},
		"1302": {
			"sourceFileName": "lib/src/array/take.ts",
			"qualifiedName": "take"
		},
		"1303": {
			"sourceFileName": "lib/src/array/take.ts",
			"qualifiedName": "T"
		},
		"1304": {
			"sourceFileName": "lib/src/array/take.ts",
			"qualifiedName": "n"
		},
		"1305": {
			"sourceFileName": "lib/src/array/take.ts",
			"qualifiedName": "__type"
		},
		"1306": {
			"sourceFileName": "lib/src/array/take.ts",
			"qualifiedName": "__type"
		},
		"1307": {
			"sourceFileName": "lib/src/array/take.ts",
			"qualifiedName": "array"
		},
		"1316": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "takeWhile"
		},
		"1317": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "takeWhile"
		},
		"1318": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "T"
		},
		"1319": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "array"
		},
		"1320": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "fn"
		},
		"1321": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "__type"
		},
		"1322": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "__type"
		},
		"1323": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "item"
		},
		"1324": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "takeWhile"
		},
		"1325": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "T"
		},
		"1326": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "fn"
		},
		"1327": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "__type"
		},
		"1328": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "__type"
		},
		"1329": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "item"
		},
		"1330": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "__type"
		},
		"1331": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "__type"
		},
		"1332": {
			"sourceFileName": "lib/src/array/take-while.ts",
			"qualifiedName": "array"
		},
		"1333": {
			"sourceFileName": "lib/src/array/uniq.ts",
			"qualifiedName": "uniq"
		},
		"1334": {
			"sourceFileName": "lib/src/array/uniq.ts",
			"qualifiedName": "uniq"
		},
		"1335": {
			"sourceFileName": "lib/src/array/uniq.ts",
			"qualifiedName": "T"
		},
		"1336": {
			"sourceFileName": "lib/src/array/uniq.ts",
			"qualifiedName": "array"
		},
		"1348": {
			"sourceFileName": "lib/src/array/uniq-by.ts",
			"qualifiedName": "uniqBy"
		},
		"1357": {
			"sourceFileName": "lib/src/array/uniq-by.ts",
			"qualifiedName": "uniqBy"
		},
		"1358": {
			"sourceFileName": "lib/src/array/uniq-by.ts",
			"qualifiedName": "T"
		},
		"1359": {
			"sourceFileName": "lib/src/array/uniq-by.ts",
			"qualifiedName": "K"
		},
		"1360": {
			"sourceFileName": "lib/src/array/uniq-by.ts",
			"qualifiedName": "transformer"
		},
		"1361": {
			"sourceFileName": "lib/src/array/uniq-by.ts",
			"qualifiedName": "__type"
		},
		"1362": {
			"sourceFileName": "lib/src/array/uniq-by.ts",
			"qualifiedName": "__type"
		},
		"1363": {
			"sourceFileName": "lib/src/array/uniq-by.ts",
			"qualifiedName": "item"
		},
		"1364": {
			"sourceFileName": "lib/src/array/uniq-by.ts",
			"qualifiedName": "__type"
		},
		"1365": {
			"sourceFileName": "lib/src/array/uniq-by.ts",
			"qualifiedName": "__type"
		},
		"1366": {
			"sourceFileName": "lib/src/array/uniq-by.ts",
			"qualifiedName": "array"
		},
		"1367": {
			"sourceFileName": "lib/src/array/uniq-with.ts",
			"qualifiedName": "uniqWith"
		},
		"1368": {
			"sourceFileName": "lib/src/array/uniq-with.ts",
			"qualifiedName": "uniqWith"
		},
		"1369": {
			"sourceFileName": "lib/src/array/uniq-with.ts",
			"qualifiedName": "T"
		},
		"1370": {
			"sourceFileName": "lib/src/array/uniq-with.ts",
			"qualifiedName": "array"
		},
		"1371": {
			"sourceFileName": "lib/src/array/uniq-with.ts",
			"qualifiedName": "isEquals"
		},
		"1372": {
			"sourceFileName": "lib/src/array/uniq-with.ts",
			"qualifiedName": "uniqWith"
		},
		"1373": {
			"sourceFileName": "lib/src/array/uniq-with.ts",
			"qualifiedName": "T"
		},
		"1374": {
			"sourceFileName": "lib/src/array/uniq-with.ts",
			"qualifiedName": "isEquals"
		},
		"1375": {
			"sourceFileName": "lib/src/array/uniq-with.ts",
			"qualifiedName": "__type"
		},
		"1376": {
			"sourceFileName": "lib/src/array/uniq-with.ts",
			"qualifiedName": "__type"
		},
		"1377": {
			"sourceFileName": "lib/src/array/uniq-with.ts",
			"qualifiedName": "array"
		},
		"1388": {
			"sourceFileName": "lib/src/array/zip.ts",
			"qualifiedName": "zip"
		},
		"1389": {
			"sourceFileName": "lib/src/array/zip.ts",
			"qualifiedName": "zip"
		},
		"1390": {
			"sourceFileName": "lib/src/array/zip.ts",
			"qualifiedName": "F"
		},
		"1391": {
			"sourceFileName": "lib/src/array/zip.ts",
			"qualifiedName": "S"
		},
		"1392": {
			"sourceFileName": "lib/src/array/zip.ts",
			"qualifiedName": "first"
		},
		"1393": {
			"sourceFileName": "lib/src/array/zip.ts",
			"qualifiedName": "second"
		},
		"1394": {
			"sourceFileName": "lib/src/array/zip.ts",
			"qualifiedName": "zip"
		},
		"1395": {
			"sourceFileName": "lib/src/array/zip.ts",
			"qualifiedName": "S"
		},
		"1396": {
			"sourceFileName": "lib/src/array/zip.ts",
			"qualifiedName": "second"
		},
		"1397": {
			"sourceFileName": "lib/src/array/zip.ts",
			"qualifiedName": "__type"
		},
		"1398": {
			"sourceFileName": "lib/src/array/zip.ts",
			"qualifiedName": "__type"
		},
		"1399": {
			"sourceFileName": "lib/src/array/zip.ts",
			"qualifiedName": "first"
		},
		"1400": {
			"sourceFileName": "lib/src/array/zip.ts",
			"qualifiedName": "F"
		},
		"1401": {
			"sourceFileName": "lib/src/array/zip-obj.ts",
			"qualifiedName": "zipObj"
		},
		"1402": {
			"sourceFileName": "lib/src/array/zip-obj.ts",
			"qualifiedName": "zipObj"
		},
		"1403": {
			"sourceFileName": "lib/src/array/zip-obj.ts",
			"qualifiedName": "F"
		},
		"1404": {
			"sourceFileName": "lib/src/array/zip-obj.ts",
			"qualifiedName": "S"
		},
		"1405": {
			"sourceFileName": "lib/src/array/zip-obj.ts",
			"qualifiedName": "first"
		},
		"1406": {
			"sourceFileName": "lib/src/array/zip-obj.ts",
			"qualifiedName": "second"
		},
		"1407": {
			"sourceFileName": "lib/src/array/zip-obj.ts",
			"qualifiedName": "zipObj"
		},
		"1408": {
			"sourceFileName": "lib/src/array/zip-obj.ts",
			"qualifiedName": "S"
		},
		"1409": {
			"sourceFileName": "lib/src/array/zip-obj.ts",
			"qualifiedName": "second"
		},
		"1410": {
			"sourceFileName": "lib/src/array/zip-obj.ts",
			"qualifiedName": "__type"
		},
		"1411": {
			"sourceFileName": "lib/src/array/zip-obj.ts",
			"qualifiedName": "__type"
		},
		"1412": {
			"sourceFileName": "lib/src/array/zip-obj.ts",
			"qualifiedName": "first"
		},
		"1413": {
			"sourceFileName": "lib/src/array/zip-obj.ts",
			"qualifiedName": "F"
		},
		"1414": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "zipWith"
		},
		"1415": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "zipWith"
		},
		"1416": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "F"
		},
		"1417": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "S"
		},
		"1418": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "R"
		},
		"1419": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "first"
		},
		"1420": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "second"
		},
		"1421": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "fn"
		},
		"1422": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "__type"
		},
		"1423": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "__type"
		},
		"1424": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "f"
		},
		"1425": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "s"
		},
		"1426": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "zipWith"
		},
		"1427": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "F"
		},
		"1428": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "S"
		},
		"1429": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "R"
		},
		"1430": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "fn"
		},
		"1431": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "__type"
		},
		"1432": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "__type"
		},
		"1433": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "f"
		},
		"1434": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "s"
		},
		"1435": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "__type"
		},
		"1436": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "__type"
		},
		"1437": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "first"
		},
		"1438": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "second"
		},
		"1439": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "zipWith"
		},
		"1440": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "F"
		},
		"1441": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "S"
		},
		"1442": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "R"
		},
		"1443": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "fn"
		},
		"1444": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "__type"
		},
		"1445": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "__type"
		},
		"1446": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "f"
		},
		"1447": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "s"
		},
		"1448": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "second"
		},
		"1449": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "__type"
		},
		"1450": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "__type"
		},
		"1451": {
			"sourceFileName": "lib/src/array/zip-with.ts",
			"qualifiedName": "first"
		},
		"1452": {
			"sourceFileName": "lib/src/function/create-pipe.ts",
			"qualifiedName": "createPipe"
		},
		"1453": {
			"sourceFileName": "lib/src/function/create-pipe.ts",
			"qualifiedName": "createPipe"
		},
		"1454": {
			"sourceFileName": "lib/src/function/create-pipe.ts",
			"qualifiedName": "A"
		},
		"1455": {
			"sourceFileName": "lib/src/function/create-pipe.ts",
			"qualifiedName": "B"
		},
		"1456": {
			"sourceFileName": "lib/src/function/create-pipe.ts",
			"qualifiedName": "op1"
		},
		"1457": {
			"sourceFileName": "lib/src/function/create-pipe.ts",
			"qualifiedName": "__type"
		},
		"1458": {
			"sourceFileName": "lib/src/function/create-pipe.ts",
			"qualifiedName": "__type"
		},
		"1459": {
			"sourceFileName": "lib/src/function/create-pipe.ts",
			"qualifiedName": "input"
		},
		"1460": {
			"sourceFileName": "lib/src/function/create-pipe.ts",
			"qualifiedName": "__type"
		},
		"1461": {
			"sourceFileName": "lib/src/function/create-pipe.ts",
			"qualifiedName": "__type"
		},
		"1462": {
			"sourceFileName": "lib/src/function/create-pipe.ts",
			"qualifiedName": "value"
		},
		"1628": {
			"sourceFileName": "lib/src/function/identity.ts",
			"qualifiedName": "identity"
		},
		"1629": {
			"sourceFileName": "lib/src/function/identity.ts",
			"qualifiedName": "identity"
		},
		"1630": {
			"sourceFileName": "lib/src/function/identity.ts",
			"qualifiedName": "T"
		},
		"1631": {
			"sourceFileName": "lib/src/function/identity.ts",
			"qualifiedName": "value"
		},
		"1632": {
			"sourceFileName": "lib/src/function/noop.ts",
			"qualifiedName": "noop"
		},
		"1633": {
			"sourceFileName": "lib/src/function/noop.ts",
			"qualifiedName": "noop"
		},
		"1634": {
			"sourceFileName": "lib/src/function/once.ts",
			"qualifiedName": "once"
		},
		"1635": {
			"sourceFileName": "lib/src/function/once.ts",
			"qualifiedName": "once"
		},
		"1636": {
			"sourceFileName": "lib/src/function/once.ts",
			"qualifiedName": "T"
		},
		"1637": {
			"sourceFileName": "lib/src/function/once.ts",
			"qualifiedName": "fn"
		},
		"1638": {
			"sourceFileName": "lib/src/function/once.ts",
			"qualifiedName": "__type"
		},
		"1639": {
			"sourceFileName": "lib/src/function/once.ts",
			"qualifiedName": "__type"
		},
		"1640": {
			"sourceFileName": "lib/src/function/once.ts",
			"qualifiedName": "__type"
		},
		"1641": {
			"sourceFileName": "lib/src/function/once.ts",
			"qualifiedName": "__type"
		},
		"1642": {
			"sourceFileName": "lib/src/function/pipe.ts",
			"qualifiedName": "pipe"
		},
		"1643": {
			"sourceFileName": "lib/src/function/pipe.ts",
			"qualifiedName": "pipe"
		},
		"1644": {
			"sourceFileName": "lib/src/function/pipe.ts",
			"qualifiedName": "A"
		},
		"1645": {
			"sourceFileName": "lib/src/function/pipe.ts",
			"qualifiedName": "B"
		},
		"1646": {
			"sourceFileName": "lib/src/function/pipe.ts",
			"qualifiedName": "value"
		},
		"1647": {
			"sourceFileName": "lib/src/function/pipe.ts",
			"qualifiedName": "op1"
		},
		"1648": {
			"sourceFileName": "lib/src/function/pipe.ts",
			"qualifiedName": "__type"
		},
		"1649": {
			"sourceFileName": "lib/src/function/pipe.ts",
			"qualifiedName": "__type"
		},
		"1650": {
			"sourceFileName": "lib/src/function/pipe.ts",
			"qualifiedName": "input"
		},
		"2288": {
			"sourceFileName": "lib/src/function/purry.ts",
			"qualifiedName": "purry"
		},
		"2289": {
			"sourceFileName": "lib/src/function/purry.ts",
			"qualifiedName": "purry"
		},
		"2290": {
			"sourceFileName": "lib/src/function/purry.ts",
			"qualifiedName": "fn"
		},
		"2291": {
			"sourceFileName": "lib/src/function/purry.ts",
			"qualifiedName": "args"
		},
		"2292": {
			"sourceFileName": "lib/src/function/purry.ts",
			"qualifiedName": "lazy"
		},
		"2293": {
			"sourceFileName": "lib/src/guard/is-array.ts",
			"qualifiedName": "isArray"
		},
		"2294": {
			"sourceFileName": "lib/src/guard/is-array.ts",
			"qualifiedName": "isArray"
		},
		"2295": {
			"sourceFileName": "lib/src/guard/is-array.ts",
			"qualifiedName": "T"
		},
		"2296": {
			"sourceFileName": "lib/src/guard/is-array.ts",
			"qualifiedName": "data"
		},
		"2297": {
			"sourceFileName": "lib/src/guard/is-boolean.ts",
			"qualifiedName": "isBoolean"
		},
		"2298": {
			"sourceFileName": "lib/src/guard/is-boolean.ts",
			"qualifiedName": "isBoolean"
		},
		"2299": {
			"sourceFileName": "lib/src/guard/is-boolean.ts",
			"qualifiedName": "T"
		},
		"2300": {
			"sourceFileName": "lib/src/guard/is-boolean.ts",
			"qualifiedName": "data"
		},
		"2301": {
			"sourceFileName": "lib/src/guard/is-date.ts",
			"qualifiedName": "isDate"
		},
		"2302": {
			"sourceFileName": "lib/src/guard/is-date.ts",
			"qualifiedName": "isDate"
		},
		"2303": {
			"sourceFileName": "lib/src/guard/is-date.ts",
			"qualifiedName": "data"
		},
		"2304": {
			"sourceFileName": "lib/src/guard/is-defined.ts",
			"qualifiedName": "isDefined"
		},
		"2305": {
			"sourceFileName": "lib/src/guard/is-defined.ts",
			"qualifiedName": "isDefined"
		},
		"2306": {
			"sourceFileName": "lib/src/guard/is-defined.ts",
			"qualifiedName": "T"
		},
		"2307": {
			"sourceFileName": "lib/src/guard/is-defined.ts",
			"qualifiedName": "data"
		},
		"2313": {
			"sourceFileName": "lib/src/guard/is-empty.ts",
			"qualifiedName": "isEmpty"
		},
		"2314": {
			"sourceFileName": "lib/src/guard/is-empty.ts",
			"qualifiedName": "isEmpty"
		},
		"2315": {
			"sourceFileName": "lib/src/guard/is-empty.ts",
			"qualifiedName": "data"
		},
		"2321": {
			"sourceFileName": "lib/src/guard/is-error.ts",
			"qualifiedName": "isError"
		},
		"2322": {
			"sourceFileName": "lib/src/guard/is-error.ts",
			"qualifiedName": "isError"
		},
		"2323": {
			"sourceFileName": "lib/src/guard/is-error.ts",
			"qualifiedName": "T"
		},
		"2324": {
			"sourceFileName": "lib/src/guard/is-error.ts",
			"qualifiedName": "data"
		},
		"2325": {
			"sourceFileName": "lib/src/guard/is-function.ts",
			"qualifiedName": "isFunction"
		},
		"2326": {
			"sourceFileName": "lib/src/guard/is-function.ts",
			"qualifiedName": "isFunction"
		},
		"2327": {
			"sourceFileName": "lib/src/guard/is-function.ts",
			"qualifiedName": "T"
		},
		"2328": {
			"sourceFileName": "lib/src/guard/is-function.ts",
			"qualifiedName": "data"
		},
		"2329": {
			"sourceFileName": "lib/src/guard/is-nil.ts",
			"qualifiedName": "isNil"
		},
		"2330": {
			"sourceFileName": "lib/src/guard/is-nil.ts",
			"qualifiedName": "isNil"
		},
		"2331": {
			"sourceFileName": "lib/src/guard/is-nil.ts",
			"qualifiedName": "T"
		},
		"2332": {
			"sourceFileName": "lib/src/guard/is-nil.ts",
			"qualifiedName": "data"
		},
		"2333": {
			"sourceFileName": "lib/src/guard/is-non-null.ts",
			"qualifiedName": "isNonNull"
		},
		"2334": {
			"sourceFileName": "lib/src/guard/is-non-null.ts",
			"qualifiedName": "isNonNull"
		},
		"2335": {
			"sourceFileName": "lib/src/guard/is-non-null.ts",
			"qualifiedName": "T"
		},
		"2336": {
			"sourceFileName": "lib/src/guard/is-non-null.ts",
			"qualifiedName": "data"
		},
		"2337": {
			"sourceFileName": "lib/src/guard/is-not.ts",
			"qualifiedName": "isNot"
		},
		"2338": {
			"sourceFileName": "lib/src/guard/is-not.ts",
			"qualifiedName": "isNot"
		},
		"2339": {
			"sourceFileName": "lib/src/guard/is-not.ts",
			"qualifiedName": "T"
		},
		"2340": {
			"sourceFileName": "lib/src/guard/is-not.ts",
			"qualifiedName": "S"
		},
		"2341": {
			"sourceFileName": "lib/src/guard/is-not.ts",
			"qualifiedName": "predicate"
		},
		"2342": {
			"sourceFileName": "lib/src/guard/is-not.ts",
			"qualifiedName": "__type"
		},
		"2343": {
			"sourceFileName": "lib/src/guard/is-not.ts",
			"qualifiedName": "__type"
		},
		"2344": {
			"sourceFileName": "lib/src/guard/is-not.ts",
			"qualifiedName": "data"
		},
		"2345": {
			"sourceFileName": "lib/src/guard/is-not.ts",
			"qualifiedName": "__type"
		},
		"2346": {
			"sourceFileName": "lib/src/guard/is-not.ts",
			"qualifiedName": "__type"
		},
		"2347": {
			"sourceFileName": "lib/src/guard/is-not.ts",
			"qualifiedName": "data"
		},
		"2357": {
			"sourceFileName": "lib/src/guard/is-number.ts",
			"qualifiedName": "isNumber"
		},
		"2358": {
			"sourceFileName": "lib/src/guard/is-number.ts",
			"qualifiedName": "isNumber"
		},
		"2359": {
			"sourceFileName": "lib/src/guard/is-number.ts",
			"qualifiedName": "T"
		},
		"2360": {
			"sourceFileName": "lib/src/guard/is-number.ts",
			"qualifiedName": "data"
		},
		"2361": {
			"sourceFileName": "lib/src/guard/is-object.ts",
			"qualifiedName": "isObject"
		},
		"2362": {
			"sourceFileName": "lib/src/guard/is-object.ts",
			"qualifiedName": "isObject"
		},
		"2363": {
			"sourceFileName": "lib/src/guard/is-object.ts",
			"qualifiedName": "T"
		},
		"2364": {
			"sourceFileName": "lib/src/guard/is-object.ts",
			"qualifiedName": "data"
		},
		"2365": {
			"sourceFileName": "lib/src/guard/is-promise.ts",
			"qualifiedName": "isPromise"
		},
		"2366": {
			"sourceFileName": "lib/src/guard/is-promise.ts",
			"qualifiedName": "isPromise"
		},
		"2367": {
			"sourceFileName": "lib/src/guard/is-promise.ts",
			"qualifiedName": "T"
		},
		"2368": {
			"sourceFileName": "lib/src/guard/is-promise.ts",
			"qualifiedName": "S"
		},
		"2369": {
			"sourceFileName": "lib/src/guard/is-promise.ts",
			"qualifiedName": "data"
		},
		"2370": {
			"sourceFileName": "lib/src/guard/is-string.ts",
			"qualifiedName": "isString"
		},
		"2371": {
			"sourceFileName": "lib/src/guard/is-string.ts",
			"qualifiedName": "isString"
		},
		"2372": {
			"sourceFileName": "lib/src/guard/is-string.ts",
			"qualifiedName": "T"
		},
		"2373": {
			"sourceFileName": "lib/src/guard/is-string.ts",
			"qualifiedName": "data"
		},
		"2374": {
			"sourceFileName": "lib/src/guard/is-truthy.ts",
			"qualifiedName": "isTruthy"
		},
		"2375": {
			"sourceFileName": "lib/src/guard/is-truthy.ts",
			"qualifiedName": "isTruthy"
		},
		"2376": {
			"sourceFileName": "lib/src/guard/is-truthy.ts",
			"qualifiedName": "T"
		},
		"2377": {
			"sourceFileName": "lib/src/guard/is-truthy.ts",
			"qualifiedName": "data"
		},
		"2378": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "clamp"
		},
		"2379": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "clamp"
		},
		"2380": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "value"
		},
		"2381": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "limits"
		},
		"2382": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "__type"
		},
		"2383": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "__type.min"
		},
		"2384": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "__type.max"
		},
		"2385": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "clamp"
		},
		"2386": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "limits"
		},
		"2387": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "__type"
		},
		"2388": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "__type.min"
		},
		"2389": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "__type.max"
		},
		"2390": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "__type"
		},
		"2391": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "__type"
		},
		"2392": {
			"sourceFileName": "lib/src/number/clamp.ts",
			"qualifiedName": "value"
		},
		"2393": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "addProp"
		},
		"2394": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "addProp"
		},
		"2395": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "T"
		},
		"2396": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "K"
		},
		"2397": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "V"
		},
		"2398": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "obj"
		},
		"2399": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "prop"
		},
		"2400": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "value"
		},
		"2401": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "addProp"
		},
		"2402": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "T"
		},
		"2403": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "K"
		},
		"2404": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "V"
		},
		"2405": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "prop"
		},
		"2406": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "value"
		},
		"2407": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "__type"
		},
		"2408": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "__type"
		},
		"2409": {
			"sourceFileName": "lib/src/object/add-prop.ts",
			"qualifiedName": "obj"
		},
		"2410": {
			"sourceFileName": "lib/src/object/clone.ts",
			"qualifiedName": "clone"
		},
		"2411": {
			"sourceFileName": "lib/src/object/clone.ts",
			"qualifiedName": "clone"
		},
		"2412": {
			"sourceFileName": "lib/src/object/clone.ts",
			"qualifiedName": "T"
		},
		"2413": {
			"sourceFileName": "lib/src/object/clone.ts",
			"qualifiedName": "value"
		},
		"2414": {
			"sourceFileName": "lib/src/object/equals.ts",
			"qualifiedName": "equals"
		},
		"2415": {
			"sourceFileName": "lib/src/object/equals.ts",
			"qualifiedName": "equals"
		},
		"2416": {
			"sourceFileName": "lib/src/object/equals.ts",
			"qualifiedName": "a"
		},
		"2417": {
			"sourceFileName": "lib/src/object/equals.ts",
			"qualifiedName": "b"
		},
		"2418": {
			"sourceFileName": "lib/src/object/equals.ts",
			"qualifiedName": "equals"
		},
		"2419": {
			"sourceFileName": "lib/src/object/equals.ts",
			"qualifiedName": "a"
		},
		"2420": {
			"sourceFileName": "lib/src/object/equals.ts",
			"qualifiedName": "__type"
		},
		"2421": {
			"sourceFileName": "lib/src/object/equals.ts",
			"qualifiedName": "__type"
		},
		"2422": {
			"sourceFileName": "lib/src/object/equals.ts",
			"qualifiedName": "b"
		},
		"2423": {
			"sourceFileName": "lib/src/object/for-each-obj.ts",
			"qualifiedName": "forEachObj"
		},
		"2424": {
			"sourceFileName": "lib/src/object/for-each-obj.ts",
			"qualifiedName": "forEachObj"
		},
		"2425": {
			"sourceFileName": "lib/src/object/for-each-obj.ts",
			"qualifiedName": "T"
		},
		"2426": {
			"sourceFileName": "lib/src/object/for-each-obj.ts",
			"qualifiedName": "object"
		},
		"2427": {
			"sourceFileName": "lib/src/object/for-each-obj.ts",
			"qualifiedName": "fn"
		},
		"2428": {
			"sourceFileName": "lib/src/object/for-each-obj.ts",
			"qualifiedName": "forEachObj"
		},
		"2429": {
			"sourceFileName": "lib/src/object/for-each-obj.ts",
			"qualifiedName": "T"
		},
		"2430": {
			"sourceFileName": "lib/src/object/for-each-obj.ts",
			"qualifiedName": "fn"
		},
		"2431": {
			"sourceFileName": "lib/src/object/for-each-obj.ts",
			"qualifiedName": "__type"
		},
		"2432": {
			"sourceFileName": "lib/src/object/for-each-obj.ts",
			"qualifiedName": "__type"
		},
		"2433": {
			"sourceFileName": "lib/src/object/for-each-obj.ts",
			"qualifiedName": "object"
		},
		"2446": {
			"sourceFileName": "lib/src/object/from-pairs.ts",
			"qualifiedName": "fromPairs"
		},
		"2447": {
			"sourceFileName": "lib/src/object/from-pairs.ts",
			"qualifiedName": "fromPairs"
		},
		"2448": {
			"sourceFileName": "lib/src/object/from-pairs.ts",
			"qualifiedName": "V"
		},
		"2449": {
			"sourceFileName": "lib/src/object/from-pairs.ts",
			"qualifiedName": "pairs"
		},
		"2458": {
			"sourceFileName": "lib/src/object/invert.ts",
			"qualifiedName": "invert"
		},
		"2459": {
			"sourceFileName": "lib/src/object/invert.ts",
			"qualifiedName": "invert"
		},
		"2460": {
			"sourceFileName": "lib/src/object/invert.ts",
			"qualifiedName": "T"
		},
		"2461": {
			"sourceFileName": "lib/src/object/invert.ts",
			"qualifiedName": "object"
		},
		"2462": {
			"sourceFileName": "lib/src/object/invert.ts",
			"qualifiedName": "invert"
		},
		"2463": {
			"sourceFileName": "lib/src/object/invert.ts",
			"qualifiedName": "T"
		},
		"2464": {
			"sourceFileName": "lib/src/object/invert.ts",
			"qualifiedName": "__type"
		},
		"2465": {
			"sourceFileName": "lib/src/object/invert.ts",
			"qualifiedName": "__type"
		},
		"2466": {
			"sourceFileName": "lib/src/object/invert.ts",
			"qualifiedName": "object"
		},
		"2475": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "mapKeys"
		},
		"2476": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "mapKeys"
		},
		"2477": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "T"
		},
		"2478": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "S"
		},
		"2479": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "object"
		},
		"2480": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "fn"
		},
		"2481": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "__type"
		},
		"2482": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "__type"
		},
		"2483": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "key"
		},
		"2484": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "value"
		},
		"2485": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "mapKeys"
		},
		"2486": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "T"
		},
		"2487": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "S"
		},
		"2488": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "fn"
		},
		"2489": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "__type"
		},
		"2490": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "__type"
		},
		"2491": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "key"
		},
		"2492": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "value"
		},
		"2493": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "__type"
		},
		"2494": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "__type"
		},
		"2495": {
			"sourceFileName": "lib/src/object/map-keys.ts",
			"qualifiedName": "object"
		},
		"2496": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "mapValues"
		},
		"2497": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "mapValues"
		},
		"2498": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "T"
		},
		"2499": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "S"
		},
		"2500": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "object"
		},
		"2501": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "fn"
		},
		"2502": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "__type"
		},
		"2503": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "__type"
		},
		"2504": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "value"
		},
		"2505": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "key"
		},
		"2506": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "mapValues"
		},
		"2507": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "T"
		},
		"2508": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "S"
		},
		"2509": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "fn"
		},
		"2510": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "__type"
		},
		"2511": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "__type"
		},
		"2512": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "value"
		},
		"2513": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "key"
		},
		"2514": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "__type"
		},
		"2515": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "__type"
		},
		"2516": {
			"sourceFileName": "lib/src/object/map-values.ts",
			"qualifiedName": "object"
		},
		"2517": {
			"sourceFileName": "lib/src/object/merge.ts",
			"qualifiedName": "merge"
		},
		"2518": {
			"sourceFileName": "lib/src/object/merge.ts",
			"qualifiedName": "merge"
		},
		"2519": {
			"sourceFileName": "lib/src/object/merge.ts",
			"qualifiedName": "A"
		},
		"2520": {
			"sourceFileName": "lib/src/object/merge.ts",
			"qualifiedName": "B"
		},
		"2521": {
			"sourceFileName": "lib/src/object/merge.ts",
			"qualifiedName": "a"
		},
		"2522": {
			"sourceFileName": "lib/src/object/merge.ts",
			"qualifiedName": "b"
		},
		"2523": {
			"sourceFileName": "lib/src/object/merge.ts",
			"qualifiedName": "merge"
		},
		"2524": {
			"sourceFileName": "lib/src/object/merge.ts",
			"qualifiedName": "A"
		},
		"2525": {
			"sourceFileName": "lib/src/object/merge.ts",
			"qualifiedName": "B"
		},
		"2526": {
			"sourceFileName": "lib/src/object/merge.ts",
			"qualifiedName": "b"
		},
		"2527": {
			"sourceFileName": "lib/src/object/merge.ts",
			"qualifiedName": "__type"
		},
		"2528": {
			"sourceFileName": "lib/src/object/merge.ts",
			"qualifiedName": "__type"
		},
		"2529": {
			"sourceFileName": "lib/src/object/merge.ts",
			"qualifiedName": "a"
		},
		"2530": {
			"sourceFileName": "lib/src/object/omit.ts",
			"qualifiedName": "omit"
		},
		"2531": {
			"sourceFileName": "lib/src/object/omit.ts",
			"qualifiedName": "omit"
		},
		"2532": {
			"sourceFileName": "lib/src/object/omit.ts",
			"qualifiedName": "T"
		},
		"2533": {
			"sourceFileName": "lib/src/object/omit.ts",
			"qualifiedName": "K"
		},
		"2534": {
			"sourceFileName": "lib/src/object/omit.ts",
			"qualifiedName": "data"
		},
		"2535": {
			"sourceFileName": "lib/src/object/omit.ts",
			"qualifiedName": "propNames"
		},
		"2536": {
			"sourceFileName": "lib/src/object/omit.ts",
			"qualifiedName": "omit"
		},
		"2537": {
			"sourceFileName": "lib/src/object/omit.ts",
			"qualifiedName": "K"
		},
		"2538": {
			"sourceFileName": "lib/src/object/omit.ts",
			"qualifiedName": "propNames"
		},
		"2539": {
			"sourceFileName": "lib/src/object/omit.ts",
			"qualifiedName": "__type"
		},
		"2540": {
			"sourceFileName": "lib/src/object/omit.ts",
			"qualifiedName": "__type"
		},
		"2541": {
			"sourceFileName": "lib/src/object/omit.ts",
			"qualifiedName": "data"
		},
		"2542": {
			"sourceFileName": "lib/src/object/omit.ts",
			"qualifiedName": "T"
		},
		"2543": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "omitBy"
		},
		"2544": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "omitBy"
		},
		"2545": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "T"
		},
		"2546": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "object"
		},
		"2547": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "fn"
		},
		"2548": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "__type"
		},
		"2549": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "__type"
		},
		"2550": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "K"
		},
		"2551": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "value"
		},
		"2552": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "key"
		},
		"2553": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "omitBy"
		},
		"2554": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "T"
		},
		"2555": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "fn"
		},
		"2556": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "__type"
		},
		"2557": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "__type"
		},
		"2558": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "K"
		},
		"2559": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "value"
		},
		"2560": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "key"
		},
		"2561": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "__type"
		},
		"2562": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "__type"
		},
		"2563": {
			"sourceFileName": "lib/src/object/omit-by.ts",
			"qualifiedName": "object"
		},
		"2564": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "pathOr"
		},
		"2565": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "pathOr"
		},
		"2566": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "T"
		},
		"2567": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "A"
		},
		"2568": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "object"
		},
		"2569": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "path"
		},
		"2570": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "defaultValue"
		},
		"2586": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "pathOr"
		},
		"2587": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "T"
		},
		"2588": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "A"
		},
		"2589": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "path"
		},
		"2590": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "defaultValue"
		},
		"2591": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "__type"
		},
		"2592": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "__type"
		},
		"2593": {
			"sourceFileName": "lib/src/object/path-or.ts",
			"qualifiedName": "object"
		},
		"2613": {
			"sourceFileName": "lib/src/object/pick.ts",
			"qualifiedName": "pick"
		},
		"2614": {
			"sourceFileName": "lib/src/object/pick.ts",
			"qualifiedName": "pick"
		},
		"2615": {
			"sourceFileName": "lib/src/object/pick.ts",
			"qualifiedName": "T"
		},
		"2616": {
			"sourceFileName": "lib/src/object/pick.ts",
			"qualifiedName": "K"
		},
		"2617": {
			"sourceFileName": "lib/src/object/pick.ts",
			"qualifiedName": "object"
		},
		"2618": {
			"sourceFileName": "lib/src/object/pick.ts",
			"qualifiedName": "names"
		},
		"2619": {
			"sourceFileName": "lib/src/object/pick.ts",
			"qualifiedName": "pick"
		},
		"2620": {
			"sourceFileName": "lib/src/object/pick.ts",
			"qualifiedName": "K"
		},
		"2621": {
			"sourceFileName": "lib/src/object/pick.ts",
			"qualifiedName": "names"
		},
		"2622": {
			"sourceFileName": "lib/src/object/pick.ts",
			"qualifiedName": "__type"
		},
		"2623": {
			"sourceFileName": "lib/src/object/pick.ts",
			"qualifiedName": "__type"
		},
		"2624": {
			"sourceFileName": "lib/src/object/pick.ts",
			"qualifiedName": "object"
		},
		"2625": {
			"sourceFileName": "lib/src/object/pick.ts",
			"qualifiedName": "T"
		},
		"2626": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "pickBy"
		},
		"2627": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "pickBy"
		},
		"2628": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "T"
		},
		"2629": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "object"
		},
		"2630": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "fn"
		},
		"2631": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "__type"
		},
		"2632": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "__type"
		},
		"2633": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "K"
		},
		"2634": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "value"
		},
		"2635": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "key"
		},
		"2636": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "pickBy"
		},
		"2637": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "T"
		},
		"2638": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "fn"
		},
		"2639": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "__type"
		},
		"2640": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "__type"
		},
		"2641": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "K"
		},
		"2642": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "value"
		},
		"2643": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "key"
		},
		"2644": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "__type"
		},
		"2645": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "__type"
		},
		"2646": {
			"sourceFileName": "lib/src/object/pick-by.ts",
			"qualifiedName": "object"
		},
		"2647": {
			"sourceFileName": "lib/src/object/prop.ts",
			"qualifiedName": "prop"
		},
		"2648": {
			"sourceFileName": "lib/src/object/prop.ts",
			"qualifiedName": "prop"
		},
		"2649": {
			"sourceFileName": "lib/src/object/prop.ts",
			"qualifiedName": "T"
		},
		"2650": {
			"sourceFileName": "lib/src/object/prop.ts",
			"qualifiedName": "K"
		},
		"2651": {
			"sourceFileName": "lib/src/object/prop.ts",
			"qualifiedName": "propName"
		},
		"2652": {
			"sourceFileName": "lib/src/object/prop.ts",
			"qualifiedName": "__function"
		},
		"2653": {
			"sourceFileName": "lib/src/object/prop.ts",
			"qualifiedName": "__function"
		},
		"2654": {
			"sourceFileName": "lib/src/object/prop.ts",
			"qualifiedName": "__0"
		},
		"2655": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "set"
		},
		"2656": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "set"
		},
		"2657": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "T"
		},
		"2658": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "K"
		},
		"2659": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "obj"
		},
		"2660": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "prop"
		},
		"2661": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "value"
		},
		"2662": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "set"
		},
		"2663": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "T"
		},
		"2664": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "K"
		},
		"2665": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "prop"
		},
		"2666": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "value"
		},
		"2667": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "__type"
		},
		"2668": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "__type"
		},
		"2669": {
			"sourceFileName": "lib/src/object/set.ts",
			"qualifiedName": "obj"
		},
		"2670": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "setPath"
		},
		"2671": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "setPath"
		},
		"2672": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "T"
		},
		"2673": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "TPath"
		},
		"2674": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "object"
		},
		"2675": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "path"
		},
		"2676": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "value"
		},
		"2677": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "setPath"
		},
		"2678": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "TPath"
		},
		"2679": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "Value"
		},
		"2680": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "path"
		},
		"2681": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "value"
		},
		"2682": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "__type"
		},
		"2683": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "__type"
		},
		"2684": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "object"
		},
		"2685": {
			"sourceFileName": "lib/src/object/set-path.ts",
			"qualifiedName": "Obj"
		},
		"2691": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "swapProps"
		},
		"2692": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "swapProps"
		},
		"2693": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "T"
		},
		"2694": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "K1"
		},
		"2695": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "K2"
		},
		"2696": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "data"
		},
		"2697": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "key1"
		},
		"2698": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "key2"
		},
		"2699": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "swapProps"
		},
		"2700": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "T"
		},
		"2701": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "K1"
		},
		"2702": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "K2"
		},
		"2703": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "key1"
		},
		"2704": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "key2"
		},
		"2705": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "__type"
		},
		"2706": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "__type"
		},
		"2707": {
			"sourceFileName": "lib/src/object/swap-props.ts",
			"qualifiedName": "data"
		},
		"2708": {
			"sourceFileName": "lib/src/object/to-pairs.ts",
			"qualifiedName": "toPairs"
		},
		"2709": {
			"sourceFileName": "lib/src/object/to-pairs.ts",
			"qualifiedName": "toPairs"
		},
		"2710": {
			"sourceFileName": "lib/src/object/to-pairs.ts",
			"qualifiedName": "T"
		},
		"2711": {
			"sourceFileName": "lib/src/object/to-pairs.ts",
			"qualifiedName": "object"
		},
		"2766": {
			"sourceFileName": "lib/src/string/random-string.ts",
			"qualifiedName": "randomString"
		},
		"2767": {
			"sourceFileName": "lib/src/string/random-string.ts",
			"qualifiedName": "randomString"
		},
		"2768": {
			"sourceFileName": "lib/src/string/random-string.ts",
			"qualifiedName": "length"
		},
		"2769": {
			"sourceFileName": "lib/src/string/string-to-path.ts",
			"qualifiedName": "stringToPath"
		},
		"2770": {
			"sourceFileName": "lib/src/string/string-to-path.ts",
			"qualifiedName": "stringToPath"
		},
		"2771": {
			"sourceFileName": "lib/src/string/string-to-path.ts",
			"qualifiedName": "Path"
		},
		"2772": {
			"sourceFileName": "lib/src/string/string-to-path.ts",
			"qualifiedName": "path"
		},
		"2775": {
			"sourceFileName": "lib/src/type/type.ts",
			"qualifiedName": "type"
		},
		"2776": {
			"sourceFileName": "lib/src/type/type.ts",
			"qualifiedName": "type"
		},
		"2777": {
			"sourceFileName": "lib/src/type/type.ts",
			"qualifiedName": "val"
		}
	}
}